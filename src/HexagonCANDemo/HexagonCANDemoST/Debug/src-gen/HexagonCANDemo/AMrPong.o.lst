   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"AMrPong.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.setState,"ax",%progbits
  20              		.align	2
  21              		.thumb
  22              		.thumb_func
  24              	setState:
  25              	.LFB0:
  26              		.file 1 "C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/s
   1:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** /**
   2:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c ****  * @author generated by eTrice
   3:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c ****  *
   4:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c ****  * Source File of ActorClass AMrPong
   5:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c ****  * 
   6:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c ****  */
   7:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 
   8:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** #include "AMrPong.h"
   9:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 
  10:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** #include "modelbase/etActor.h"
  11:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** #include "debugging/etLogger.h"
  12:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** #include "debugging/etMSCLogger.h"
  13:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** #include "etUnit/etUnit.h"
  14:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** #include "base/etMemory.h"
  15:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 
  16:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** #include "HexagonCANDemo/PPingPong.h"
  17:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 
  18:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** #include "AMrPong_Utils.h"
  19:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 
  20:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 
  21:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** /* interface item IDs */
  22:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** enum interface_items {
  23:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 	IFITEM_p0 = 1
  24:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** };
  25:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 
  26:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** /* state IDs */
  27:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** enum state_ids {
  28:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 	NO_STATE = 0,
  29:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 	STATE_TOP = 1,
  30:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 	STATE_state0 = 2,
  31:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 	STATE_MAX = 3
  32:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** };
  33:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 
  34:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** /* transition chains */
  35:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** enum chain_ids {
  36:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 	CHAIN_TRANS_INITIAL_TO__state0 = 1,
  37:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 	CHAIN_TRANS_tr0_FROM_state0_TO_state0_BY_pongp0_tr0 = 2
  38:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** };
  39:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 
  40:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** /* triggers */
  41:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** enum triggers {
  42:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 	POLLING = 0,
  43:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 	TRIG_p0__pong = IFITEM_p0 + EVT_SHIFT*PPingPong_OUT_pong
  44:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** };
  45:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 
  46:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 
  47:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** static void setState(AMrPong* self, etInt16 new_state) {
  27              		.loc 1 47 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 7, -4
  36 0002 83B0     		sub	sp, sp, #12
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 16
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  42 0006 7860     		str	r0, [r7, #4]
  43 0008 0B46     		mov	r3, r1
  44 000a 7B80     		strh	r3, [r7, #2]	@ movhi
  48:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 	self->state = new_state;
  45              		.loc 1 48 0
  46 000c 7B68     		ldr	r3, [r7, #4]
  47 000e 7A88     		ldrh	r2, [r7, #2]	@ movhi
  48 0010 9A80     		strh	r2, [r3, #4]	@ movhi
  49:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** }
  49              		.loc 1 49 0
  50 0012 07F10C07 		add	r7, r7, #12
  51 0016 BD46     		mov	sp, r7
  52 0018 80BC     		pop	{r7}
  53 001a 7047     		bx	lr
  54              		.cfi_endproc
  55              	.LFE0:
  57              		.section	.text.getState,"ax",%progbits
  58              		.align	2
  59              		.thumb
  60              		.thumb_func
  62              	getState:
  63              	.LFB1:
  50:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 
  51:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** static etInt16 getState(AMrPong* self) {
  64              		.loc 1 51 0
  65              		.cfi_startproc
  66              		@ args = 0, pretend = 0, frame = 8
  67              		@ frame_needed = 1, uses_anonymous_args = 0
  68              		@ link register save eliminated.
  69 0000 80B4     		push	{r7}
  70              	.LCFI3:
  71              		.cfi_def_cfa_offset 4
  72              		.cfi_offset 7, -4
  73 0002 83B0     		sub	sp, sp, #12
  74              	.LCFI4:
  75              		.cfi_def_cfa_offset 16
  76 0004 00AF     		add	r7, sp, #0
  77              	.LCFI5:
  78              		.cfi_def_cfa_register 7
  79 0006 7860     		str	r0, [r7, #4]
  52:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 	return self->state;
  80              		.loc 1 52 0
  81 0008 7B68     		ldr	r3, [r7, #4]
  82 000a 9B88     		ldrh	r3, [r3, #4]
  83 000c 1BB2     		sxth	r3, r3
  53:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** }
  84              		.loc 1 53 0
  85 000e 1846     		mov	r0, r3
  86 0010 07F10C07 		add	r7, r7, #12
  87 0014 BD46     		mov	sp, r7
  88 0016 80BC     		pop	{r7}
  89 0018 7047     		bx	lr
  90              		.cfi_endproc
  91              	.LFE1:
  93 001a 00BF     		.section	.text.action_TRANS_tr0_FROM_state0_TO_state0_BY_pongp0_tr0,"ax",%progbits
  94              		.align	2
  95              		.thumb
  96              		.thumb_func
  98              	action_TRANS_tr0_FROM_state0_TO_state0_BY_pongp0_tr0:
  99              	.LFB2:
  54:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 
  55:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** /* Entry and Exit Codes */
  56:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 
  57:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** /* Action Codes */
  58:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** static void action_TRANS_tr0_FROM_state0_TO_state0_BY_pongp0_tr0(AMrPong* self, const InterfaceItem
 100              		.loc 1 58 0
 101              		.cfi_startproc
 102              		@ args = 0, pretend = 0, frame = 8
 103              		@ frame_needed = 1, uses_anonymous_args = 0
 104 0000 80B5     		push	{r7, lr}
 105              	.LCFI6:
 106              		.cfi_def_cfa_offset 8
 107              		.cfi_offset 7, -8
 108              		.cfi_offset 14, -4
 109 0002 82B0     		sub	sp, sp, #8
 110              	.LCFI7:
 111              		.cfi_def_cfa_offset 16
 112 0004 00AF     		add	r7, sp, #0
 113              	.LCFI8:
 114              		.cfi_def_cfa_register 7
 115 0006 7860     		str	r0, [r7, #4]
 116 0008 3960     		str	r1, [r7, #0]
  59:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 	p0_ping();
 117              		.loc 1 59 0
 118 000a 7B68     		ldr	r3, [r7, #4]
 119 000c 1B68     		ldr	r3, [r3, #0]
 120 000e 1846     		mov	r0, r3
 121 0010 FFF7FEFF 		bl	PPingPongConjPort_ping
  60:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** }
 122              		.loc 1 60 0
 123 0014 07F10807 		add	r7, r7, #8
 124 0018 BD46     		mov	sp, r7
 125 001a 80BD     		pop	{r7, pc}
 126              		.cfi_endproc
 127              	.LFE2:
 129              		.section	.text.exitTo,"ax",%progbits
 130              		.align	2
 131              		.thumb
 132              		.thumb_func
 134              	exitTo:
 135              	.LFB3:
  61:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 
  62:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** /**
  63:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c ****  * calls exit codes while exiting from the current state to one of its
  64:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c ****  * parent states while remembering the history
  65:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c ****  * @param current__et - the current state
  66:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c ****  * @param to - the final parent state
  67:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c ****  */
  68:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** static void exitTo(AMrPong* self, etInt16 current__et, etInt16 to) {
 136              		.loc 1 68 0
 137              		.cfi_startproc
 138              		@ args = 0, pretend = 0, frame = 8
 139              		@ frame_needed = 1, uses_anonymous_args = 0
 140              		@ link register save eliminated.
 141 0000 80B4     		push	{r7}
 142              	.LCFI9:
 143              		.cfi_def_cfa_offset 4
 144              		.cfi_offset 7, -4
 145 0002 83B0     		sub	sp, sp, #12
 146              	.LCFI10:
 147              		.cfi_def_cfa_offset 16
 148 0004 00AF     		add	r7, sp, #0
 149              	.LCFI11:
 150              		.cfi_def_cfa_register 7
 151 0006 7860     		str	r0, [r7, #4]
 152 0008 1346     		mov	r3, r2
 153 000a 0A46     		mov	r2, r1	@ movhi
 154 000c 7A80     		strh	r2, [r7, #2]	@ movhi
 155 000e 3B80     		strh	r3, [r7, #0]	@ movhi
  69:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 	while (current__et!=to) {
 156              		.loc 1 69 0
 157 0010 0CE0     		b	.L6
 158              	.L9:
  70:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 		switch (current__et) {
 159              		.loc 1 70 0
 160 0012 B7F90230 		ldrsh	r3, [r7, #2]
 161 0016 022B     		cmp	r3, #2
 162 0018 07D1     		bne	.L10
 163              	.L8:
  71:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 			case STATE_state0:
  72:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 				self->history[STATE_TOP] = STATE_state0;
 164              		.loc 1 72 0
 165 001a 7B68     		ldr	r3, [r7, #4]
 166 001c 4FF00202 		mov	r2, #2
 167 0020 1A81     		strh	r2, [r3, #8]	@ movhi
  73:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 				current__et = STATE_TOP;
 168              		.loc 1 73 0
 169 0022 4FF00103 		mov	r3, #1
 170 0026 7B80     		strh	r3, [r7, #2]	@ movhi
  74:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 				break;
 171              		.loc 1 74 0
 172 0028 00E0     		b	.L6
 173              	.L10:
  75:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 			default:
  76:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 				/* should not occur */
  77:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 				break;
 174              		.loc 1 77 0
 175 002a 00BF     		nop
 176              	.L6:
  69:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 	while (current__et!=to) {
 177              		.loc 1 69 0 discriminator 1
 178 002c B7F90220 		ldrsh	r2, [r7, #2]
 179 0030 B7F90030 		ldrsh	r3, [r7, #0]
 180 0034 9A42     		cmp	r2, r3
 181 0036 ECD1     		bne	.L9
  78:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 		}
  79:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 	}
  80:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** }
 182              		.loc 1 80 0
 183 0038 07F10C07 		add	r7, r7, #12
 184 003c BD46     		mov	sp, r7
 185 003e 80BC     		pop	{r7}
 186 0040 7047     		bx	lr
 187              		.cfi_endproc
 188              	.LFE3:
 190 0042 00BF     		.section	.text.executeTransitionChain,"ax",%progbits
 191              		.align	2
 192              		.thumb
 193              		.thumb_func
 195              	executeTransitionChain:
 196              	.LFB4:
  81:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 
  82:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** /**
  83:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c ****  * calls action, entry and exit codes along a transition chain. The generic data are cast to typed 
  84:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c ****  * matching the trigger of this chain. The ID of the final state is returned
  85:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c ****  * @param chain__et - the chain ID
  86:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c ****  * @param generic_data__et - the generic data pointer
  87:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c ****  * @return the +/- ID of the final state either with a positive sign, that indicates to execute the
  88:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c ****  */
  89:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** static etInt16 executeTransitionChain(AMrPong* self, int chain__et, const InterfaceItemBase* ifitem
 197              		.loc 1 89 0
 198              		.cfi_startproc
 199              		@ args = 0, pretend = 0, frame = 16
 200              		@ frame_needed = 1, uses_anonymous_args = 0
 201 0000 80B5     		push	{r7, lr}
 202              	.LCFI12:
 203              		.cfi_def_cfa_offset 8
 204              		.cfi_offset 7, -8
 205              		.cfi_offset 14, -4
 206 0002 84B0     		sub	sp, sp, #16
 207              	.LCFI13:
 208              		.cfi_def_cfa_offset 24
 209 0004 00AF     		add	r7, sp, #0
 210              	.LCFI14:
 211              		.cfi_def_cfa_register 7
 212 0006 F860     		str	r0, [r7, #12]
 213 0008 B960     		str	r1, [r7, #8]
 214 000a 7A60     		str	r2, [r7, #4]
 215 000c 3B60     		str	r3, [r7, #0]
  90:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 	switch (chain__et) {
 216              		.loc 1 90 0
 217 000e BB68     		ldr	r3, [r7, #8]
 218 0010 012B     		cmp	r3, #1
 219 0012 02D0     		beq	.L13
 220 0014 022B     		cmp	r3, #2
 221 0016 03D0     		beq	.L14
 222 0018 09E0     		b	.L16
 223              	.L13:
  91:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 		case CHAIN_TRANS_INITIAL_TO__state0:
  92:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 		{
  93:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 			return STATE_state0;
 224              		.loc 1 93 0
 225 001a 4FF00203 		mov	r3, #2
 226 001e 09E0     		b	.L15
 227              	.L14:
  94:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 		}
  95:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 		case CHAIN_TRANS_tr0_FROM_state0_TO_state0_BY_pongp0_tr0:
  96:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 		{
  97:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 			action_TRANS_tr0_FROM_state0_TO_state0_BY_pongp0_tr0(self, ifitem);
 228              		.loc 1 97 0
 229 0020 F868     		ldr	r0, [r7, #12]
 230 0022 7968     		ldr	r1, [r7, #4]
 231 0024 FFF7FEFF 		bl	action_TRANS_tr0_FROM_state0_TO_state0_BY_pongp0_tr0
  98:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 			return STATE_state0;
 232              		.loc 1 98 0
 233 0028 4FF00203 		mov	r3, #2
 234 002c 02E0     		b	.L15
 235              	.L16:
  99:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 		}
 100:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 			default:
 101:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 				/* should not occur */
 102:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 				break;
 236              		.loc 1 102 0
 237 002e 00BF     		nop
 103:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 	}
 104:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 	return NO_STATE;
 238              		.loc 1 104 0
 239 0030 4FF00003 		mov	r3, #0
 240              	.L15:
 241 0034 1BB2     		sxth	r3, r3
 105:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** }
 242              		.loc 1 105 0
 243 0036 1846     		mov	r0, r3
 244 0038 07F11007 		add	r7, r7, #16
 245 003c BD46     		mov	sp, r7
 246 003e 80BD     		pop	{r7, pc}
 247              		.cfi_endproc
 248              	.LFE4:
 250              		.section	.text.enterHistory,"ax",%progbits
 251              		.align	2
 252              		.thumb
 253              		.thumb_func
 255              	enterHistory:
 256              	.LFB5:
 106:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 
 107:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** /**
 108:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c ****  * calls entry codes while entering a state's history. The ID of the final leaf state is returned
 109:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c ****  * @param state__et - the state which is entered
 110:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c ****  * @return - the ID of the final leaf state
 111:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c ****  */
 112:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** static etInt16 enterHistory(AMrPong* self, etInt16 state__et) {
 257              		.loc 1 112 0
 258              		.cfi_startproc
 259              		@ args = 0, pretend = 0, frame = 16
 260              		@ frame_needed = 1, uses_anonymous_args = 0
 261              		@ link register save eliminated.
 262 0000 80B4     		push	{r7}
 263              	.LCFI15:
 264              		.cfi_def_cfa_offset 4
 265              		.cfi_offset 7, -4
 266 0002 85B0     		sub	sp, sp, #20
 267              	.LCFI16:
 268              		.cfi_def_cfa_offset 24
 269 0004 00AF     		add	r7, sp, #0
 270              	.LCFI17:
 271              		.cfi_def_cfa_register 7
 272 0006 7860     		str	r0, [r7, #4]
 273 0008 0B46     		mov	r3, r1
 274 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 113:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 	boolean skip_entry__et = ET_FALSE;
 275              		.loc 1 113 0
 276 000c 4FF00003 		mov	r3, #0
 277 0010 FB73     		strb	r3, [r7, #15]
 114:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 	if (state__et >= STATE_MAX) {
 278              		.loc 1 114 0
 279 0012 B7F90230 		ldrsh	r3, [r7, #2]
 280 0016 022B     		cmp	r3, #2
 281 0018 07DD     		ble	.L18
 115:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 		state__et = (etInt16) (state__et - STATE_MAX);
 282              		.loc 1 115 0
 283 001a 7B88     		ldrh	r3, [r7, #2]
 284 001c A3F10303 		sub	r3, r3, #3
 285 0020 9BB2     		uxth	r3, r3
 286 0022 7B80     		strh	r3, [r7, #2]	@ movhi
 116:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 		skip_entry__et = ET_TRUE;
 287              		.loc 1 116 0
 288 0024 4FF00103 		mov	r3, #1
 289 0028 FB73     		strb	r3, [r7, #15]
 290              	.L18:
 117:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 	}
 118:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 	while (ET_TRUE) {
 119:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 		switch (state__et) {
 291              		.loc 1 119 0
 292 002a B7F90230 		ldrsh	r3, [r7, #2]
 293 002e 012B     		cmp	r3, #1
 294 0030 05D0     		beq	.L20
 295 0032 022B     		cmp	r3, #2
 296 0034 07D1     		bne	.L24
 297              	.L21:
 120:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 			case STATE_state0:
 121:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 				/* in leaf state: return state id */
 122:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 				return STATE_state0;
 298              		.loc 1 122 0
 299 0036 4FF00203 		mov	r3, #2
 300 003a 1BB2     		sxth	r3, r3
 301 003c 08E0     		b	.L25
 302              	.L20:
 123:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 			case STATE_TOP:
 124:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 				state__et = self->history[STATE_TOP];
 303              		.loc 1 124 0
 304 003e 7B68     		ldr	r3, [r7, #4]
 305 0040 1B89     		ldrh	r3, [r3, #8]	@ movhi
 306 0042 7B80     		strh	r3, [r7, #2]	@ movhi
 125:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 				break;
 307              		.loc 1 125 0
 308 0044 00E0     		b	.L23
 309              	.L24:
 126:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 			default:
 127:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 				/* should not occur */
 128:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 				break;
 310              		.loc 1 128 0
 311 0046 00BF     		nop
 312              	.L23:
 129:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 		}
 130:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 		skip_entry__et = ET_FALSE;
 313              		.loc 1 130 0
 314 0048 4FF00003 		mov	r3, #0
 315 004c FB73     		strb	r3, [r7, #15]
 131:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 	}
 316              		.loc 1 131 0
 317 004e ECE7     		b	.L18
 318              	.L25:
 132:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 	/* return NO_STATE; // required by CDT but detected as unreachable by JDT because of while (true) 
 133:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** }
 319              		.loc 1 133 0
 320 0050 1846     		mov	r0, r3
 321 0052 07F11407 		add	r7, r7, #20
 322 0056 BD46     		mov	sp, r7
 323 0058 80BC     		pop	{r7}
 324 005a 7047     		bx	lr
 325              		.cfi_endproc
 326              	.LFE5:
 328              		.section	.text.AMrPong_executeInitTransition,"ax",%progbits
 329              		.align	2
 330              		.thumb
 331              		.thumb_func
 333              	AMrPong_executeInitTransition:
 334              	.LFB6:
 134:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 
 135:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** static void AMrPong_executeInitTransition(AMrPong* self) {
 335              		.loc 1 135 0
 336              		.cfi_startproc
 337              		@ args = 0, pretend = 0, frame = 16
 338              		@ frame_needed = 1, uses_anonymous_args = 0
 339 0000 80B5     		push	{r7, lr}
 340              	.LCFI18:
 341              		.cfi_def_cfa_offset 8
 342              		.cfi_offset 7, -8
 343              		.cfi_offset 14, -4
 344 0002 84B0     		sub	sp, sp, #16
 345              	.LCFI19:
 346              		.cfi_def_cfa_offset 24
 347 0004 00AF     		add	r7, sp, #0
 348              	.LCFI20:
 349              		.cfi_def_cfa_register 7
 350 0006 7860     		str	r0, [r7, #4]
 136:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 	int chain__et = CHAIN_TRANS_INITIAL_TO__state0;
 351              		.loc 1 136 0
 352 0008 4FF00103 		mov	r3, #1
 353 000c FB60     		str	r3, [r7, #12]
 137:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 	etInt16 next__et = executeTransitionChain(self, chain__et, NULL, NULL);
 354              		.loc 1 137 0
 355 000e 7868     		ldr	r0, [r7, #4]
 356 0010 F968     		ldr	r1, [r7, #12]
 357 0012 4FF00002 		mov	r2, #0
 358 0016 4FF00003 		mov	r3, #0
 359 001a FFF7FEFF 		bl	executeTransitionChain
 360 001e 0346     		mov	r3, r0
 361 0020 7B81     		strh	r3, [r7, #10]	@ movhi
 138:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 	next__et = enterHistory(self, next__et);
 362              		.loc 1 138 0
 363 0022 B7F90A30 		ldrsh	r3, [r7, #10]
 364 0026 7868     		ldr	r0, [r7, #4]
 365 0028 1946     		mov	r1, r3
 366 002a FFF7FEFF 		bl	enterHistory
 367 002e 0346     		mov	r3, r0
 368 0030 7B81     		strh	r3, [r7, #10]	@ movhi
 139:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 	setState(self, next__et);
 369              		.loc 1 139 0
 370 0032 B7F90A30 		ldrsh	r3, [r7, #10]
 371 0036 7868     		ldr	r0, [r7, #4]
 372 0038 1946     		mov	r1, r3
 373 003a FFF7FEFF 		bl	setState
 140:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** }
 374              		.loc 1 140 0
 375 003e 07F11007 		add	r7, r7, #16
 376 0042 BD46     		mov	sp, r7
 377 0044 80BD     		pop	{r7, pc}
 378              		.cfi_endproc
 379              	.LFE6:
 381 0046 00BF     		.section	.text.AMrPong_receiveEvent,"ax",%progbits
 382              		.align	2
 383              		.thumb
 384              		.thumb_func
 386              	AMrPong_receiveEvent:
 387              	.LFB7:
 141:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 
 142:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** /* receiveEvent contains the main implementation of the FSM */
 143:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** static void AMrPong_receiveEvent(AMrPong* self, InterfaceItemBase* ifitem, int evt, void* generic_d
 388              		.loc 1 143 0
 389              		.cfi_startproc
 390              		@ args = 0, pretend = 0, frame = 32
 391              		@ frame_needed = 1, uses_anonymous_args = 0
 392 0000 80B5     		push	{r7, lr}
 393              	.LCFI21:
 394              		.cfi_def_cfa_offset 8
 395              		.cfi_offset 7, -8
 396              		.cfi_offset 14, -4
 397 0002 88B0     		sub	sp, sp, #32
 398              	.LCFI22:
 399              		.cfi_def_cfa_offset 40
 400 0004 00AF     		add	r7, sp, #0
 401              	.LCFI23:
 402              		.cfi_def_cfa_register 7
 403 0006 F860     		str	r0, [r7, #12]
 404 0008 B960     		str	r1, [r7, #8]
 405 000a 7A60     		str	r2, [r7, #4]
 406 000c 3B60     		str	r3, [r7, #0]
 144:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 	int trigger__et = ifitem->localId + EVT_SHIFT*evt;
 407              		.loc 1 144 0
 408 000e BB68     		ldr	r3, [r7, #8]
 409 0010 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 410 0012 1A46     		mov	r2, r3
 411 0014 7B68     		ldr	r3, [r7, #4]
 412 0016 4FF06401 		mov	r1, #100
 413 001a 01FB03F3 		mul	r3, r1, r3
 414 001e D318     		adds	r3, r2, r3
 415 0020 7B61     		str	r3, [r7, #20]
 145:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 	int chain__et = NOT_CAUGHT;
 416              		.loc 1 145 0
 417 0022 4FF00003 		mov	r3, #0
 418 0026 FB61     		str	r3, [r7, #28]
 146:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 	etInt16 catching_state__et = NO_STATE;
 419              		.loc 1 146 0
 420 0028 4FF00003 		mov	r3, #0
 421 002c 7B83     		strh	r3, [r7, #26]	@ movhi
 147:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 	((void)trigger__et);	/* avoids unused warning */
 148:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 	
 149:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 	if (!handleSystemEvent(ifitem, evt, generic_data__et)) {
 422              		.loc 1 149 0
 423 002e B868     		ldr	r0, [r7, #8]
 424 0030 7968     		ldr	r1, [r7, #4]
 425 0032 3A68     		ldr	r2, [r7, #0]
 426 0034 FFF7FEFF 		bl	handleSystemEvent
 427 0038 0346     		mov	r3, r0
 428 003a 002B     		cmp	r3, #0
 429 003c 12D1     		bne	.L28
 150:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 		switch (getState(self)) {
 430              		.loc 1 150 0
 431 003e F868     		ldr	r0, [r7, #12]
 432 0040 FFF7FEFF 		bl	getState
 433 0044 0346     		mov	r3, r0
 434 0046 022B     		cmp	r3, #2
 435 0048 0BD1     		bne	.L35
 436              	.L30:
 151:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 			case STATE_state0:
 152:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 				switch(trigger__et) {
 437              		.loc 1 152 0
 438 004a 7B69     		ldr	r3, [r7, #20]
 439 004c 652B     		cmp	r3, #101
 440 004e 06D1     		bne	.L36
 441              	.L32:
 153:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 						case TRIG_p0__pong:
 154:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 							{
 155:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 								chain__et = CHAIN_TRANS_tr0_FROM_state0_TO_state0_BY_pongp0_tr0;
 442              		.loc 1 155 0
 443 0050 4FF00203 		mov	r3, #2
 444 0054 FB61     		str	r3, [r7, #28]
 156:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 								catching_state__et = STATE_TOP;
 445              		.loc 1 156 0
 446 0056 4FF00103 		mov	r3, #1
 447 005a 7B83     		strh	r3, [r7, #26]	@ movhi
 157:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 							}
 158:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 						break;
 448              		.loc 1 158 0
 449 005c 00E0     		b	.L33
 450              	.L36:
 159:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 						default:
 160:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 							/* should not occur */
 161:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 							break;
 451              		.loc 1 161 0
 452 005e 00BF     		nop
 453              	.L33:
 162:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 				}
 163:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 				break;
 454              		.loc 1 163 0
 455 0060 00E0     		b	.L28
 456              	.L35:
 164:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 			default:
 165:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 				/* should not occur */
 166:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 				break;
 457              		.loc 1 166 0
 458 0062 00BF     		nop
 459              	.L28:
 167:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 		}
 168:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 	}
 169:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 	if (chain__et != NOT_CAUGHT) {
 460              		.loc 1 169 0
 461 0064 FB69     		ldr	r3, [r7, #28]
 462 0066 002B     		cmp	r3, #0
 463 0068 21D0     		beq	.L27
 170:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 		exitTo(self, getState(self), catching_state__et);
 464              		.loc 1 170 0
 465 006a F868     		ldr	r0, [r7, #12]
 466 006c FFF7FEFF 		bl	getState
 467 0070 0346     		mov	r3, r0
 468 0072 1A46     		mov	r2, r3
 469 0074 B7F91A30 		ldrsh	r3, [r7, #26]
 470 0078 F868     		ldr	r0, [r7, #12]
 471 007a 1146     		mov	r1, r2
 472 007c 1A46     		mov	r2, r3
 473 007e FFF7FEFF 		bl	exitTo
 474              	.LBB2:
 171:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 		{
 172:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 			etInt16 next__et = executeTransitionChain(self, chain__et, ifitem, generic_data__et);
 475              		.loc 1 172 0
 476 0082 F868     		ldr	r0, [r7, #12]
 477 0084 F969     		ldr	r1, [r7, #28]
 478 0086 BA68     		ldr	r2, [r7, #8]
 479 0088 3B68     		ldr	r3, [r7, #0]
 480 008a FFF7FEFF 		bl	executeTransitionChain
 481 008e 0346     		mov	r3, r0
 482 0090 7B82     		strh	r3, [r7, #18]	@ movhi
 173:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 			next__et = enterHistory(self, next__et);
 483              		.loc 1 173 0
 484 0092 B7F91230 		ldrsh	r3, [r7, #18]
 485 0096 F868     		ldr	r0, [r7, #12]
 486 0098 1946     		mov	r1, r3
 487 009a FFF7FEFF 		bl	enterHistory
 488 009e 0346     		mov	r3, r0
 489 00a0 7B82     		strh	r3, [r7, #18]	@ movhi
 174:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 			setState(self, next__et);
 490              		.loc 1 174 0
 491 00a2 B7F91230 		ldrsh	r3, [r7, #18]
 492 00a6 F868     		ldr	r0, [r7, #12]
 493 00a8 1946     		mov	r1, r3
 494 00aa FFF7FEFF 		bl	setState
 495              	.L27:
 496              	.LBE2:
 175:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 		}
 176:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 	}
 177:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** }
 497              		.loc 1 177 0
 498 00ae 07F12007 		add	r7, r7, #32
 499 00b2 BD46     		mov	sp, r7
 500 00b4 80BD     		pop	{r7, pc}
 501              		.cfi_endproc
 502              	.LFE7:
 504 00b6 00BF     		.section	.text.AMrPong_init,"ax",%progbits
 505              		.align	2
 506              		.global	AMrPong_init
 507              		.thumb
 508              		.thumb_func
 510              	AMrPong_init:
 511              	.LFB8:
 178:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 
 179:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** void AMrPong_init(AMrPong* self){
 512              		.loc 1 179 0
 513              		.cfi_startproc
 514              		@ args = 0, pretend = 0, frame = 16
 515              		@ frame_needed = 1, uses_anonymous_args = 0
 516 0000 80B5     		push	{r7, lr}
 517              	.LCFI24:
 518              		.cfi_def_cfa_offset 8
 519              		.cfi_offset 7, -8
 520              		.cfi_offset 14, -4
 521 0002 84B0     		sub	sp, sp, #16
 522              	.LCFI25:
 523              		.cfi_def_cfa_offset 24
 524 0004 00AF     		add	r7, sp, #0
 525              	.LCFI26:
 526              		.cfi_def_cfa_register 7
 527 0006 7860     		str	r0, [r7, #4]
 180:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 	ET_MSC_LOGGER_SYNC_ENTRY("AMrPong", "init")
 181:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 	self->state = STATE_TOP;
 528              		.loc 1 181 0
 529 0008 7B68     		ldr	r3, [r7, #4]
 530 000a 4FF00102 		mov	r2, #1
 531 000e 9A80     		strh	r2, [r3, #4]	@ movhi
 532              	.LBB3:
 182:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 	{
 183:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 		int i;
 184:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 		for (i=0; i<AMRPONG_HISTORY_SIZE; ++i)
 533              		.loc 1 184 0
 534 0010 4FF00003 		mov	r3, #0
 535 0014 FB60     		str	r3, [r7, #12]
 536 0016 0BE0     		b	.L38
 537              	.L39:
 185:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 			self->history[i] = NO_STATE;
 538              		.loc 1 185 0 discriminator 2
 539 0018 7A68     		ldr	r2, [r7, #4]
 540 001a FB68     		ldr	r3, [r7, #12]
 541 001c 4FEA4303 		lsl	r3, r3, #1
 542 0020 D318     		adds	r3, r2, r3
 543 0022 4FF00002 		mov	r2, #0
 544 0026 DA80     		strh	r2, [r3, #6]	@ movhi
 184:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 		for (i=0; i<AMRPONG_HISTORY_SIZE; ++i)
 545              		.loc 1 184 0 discriminator 2
 546 0028 FB68     		ldr	r3, [r7, #12]
 547 002a 03F10103 		add	r3, r3, #1
 548 002e FB60     		str	r3, [r7, #12]
 549              	.L38:
 184:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 		for (i=0; i<AMRPONG_HISTORY_SIZE; ++i)
 550              		.loc 1 184 0 is_stmt 0 discriminator 1
 551 0030 FB68     		ldr	r3, [r7, #12]
 552 0032 012B     		cmp	r3, #1
 553 0034 F0DD     		ble	.L39
 554              	.LBE3:
 186:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 	}
 187:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 	AMrPong_executeInitTransition(self);
 555              		.loc 1 187 0 is_stmt 1
 556 0036 7868     		ldr	r0, [r7, #4]
 557 0038 FFF7FEFF 		bl	AMrPong_executeInitTransition
 188:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 	ET_MSC_LOGGER_SYNC_EXIT
 189:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** }
 558              		.loc 1 189 0
 559 003c 07F11007 		add	r7, r7, #16
 560 0040 BD46     		mov	sp, r7
 561 0042 80BD     		pop	{r7, pc}
 562              		.cfi_endproc
 563              	.LFE8:
 565              		.section	.text.AMrPong_receiveMessage,"ax",%progbits
 566              		.align	2
 567              		.global	AMrPong_receiveMessage
 568              		.thumb
 569              		.thumb_func
 571              	AMrPong_receiveMessage:
 572              	.LFB9:
 190:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 
 191:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 
 192:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** void AMrPong_receiveMessage(void* self, const void* ifitem, const etMessage* msg){
 573              		.loc 1 192 0
 574              		.cfi_startproc
 575              		@ args = 0, pretend = 0, frame = 16
 576              		@ frame_needed = 1, uses_anonymous_args = 0
 577 0000 80B5     		push	{r7, lr}
 578              	.LCFI27:
 579              		.cfi_def_cfa_offset 8
 580              		.cfi_offset 7, -8
 581              		.cfi_offset 14, -4
 582 0002 84B0     		sub	sp, sp, #16
 583              	.LCFI28:
 584              		.cfi_def_cfa_offset 24
 585 0004 00AF     		add	r7, sp, #0
 586              	.LCFI29:
 587              		.cfi_def_cfa_register 7
 588 0006 F860     		str	r0, [r7, #12]
 589 0008 B960     		str	r1, [r7, #8]
 590 000a 7A60     		str	r2, [r7, #4]
 193:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 	ET_MSC_LOGGER_SYNC_ENTRY("AMrPong", "_receiveMessage")
 194:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 	
 195:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 	AMrPong_receiveEvent(self, (etPort*)ifitem, msg->evtID, (void*)(((char*)msg)+MEM_CEIL(sizeof(etMes
 591              		.loc 1 195 0
 592 000c 7B68     		ldr	r3, [r7, #4]
 593 000e DB88     		ldrh	r3, [r3, #6]
 594 0010 1AB2     		sxth	r2, r3
 595 0012 7B68     		ldr	r3, [r7, #4]
 596 0014 03F10803 		add	r3, r3, #8
 597 0018 F868     		ldr	r0, [r7, #12]
 598 001a B968     		ldr	r1, [r7, #8]
 599 001c FFF7FEFF 		bl	AMrPong_receiveEvent
 196:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 	
 197:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** 	ET_MSC_LOGGER_SYNC_EXIT
 198:C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/src-gen-st/HexagonCANDemo\AMrPong.c **** }
 600              		.loc 1 198 0
 601 0020 07F11007 		add	r7, r7, #16
 602 0024 BD46     		mov	sp, r7
 603 0026 80BD     		pop	{r7, pc}
 604              		.cfi_endproc
 605              	.LFE9:
 607              		.text
 608              	.Letext0:
 609              		.file 2 "C:\\data\\workspaces\\github\\de.protos.demos\\src\\HexagonCANDemo\\etrice.runtime.c\\etR
 610              		.file 3 "C:\\data\\workspaces\\github\\de.protos.demos\\src\\HexagonCANDemo\\etrice.runtime.c\\etR
 611              		.file 4 "C:\\data\\workspaces\\github\\de.protos.demos\\src\\HexagonCANDemo\\etrice.runtime.c\\etR
 612              		.file 5 "C:\\data\\workspaces\\github\\de.protos.demos\\src\\HexagonCANDemo\\etrice.runtime.c\\etR
 613              		.file 6 "C:\\data\\workspaces\\github\\de.protos.demos\\src\\HexagonCANDemo\\etrice.runtime.c\\etR
 614              		.file 7 "C:\\data\\workspaces\\github\\de.protos.demos\\src\\HexagonCANDemo\\etrice.runtime.c\\etR
 615              		.file 8 "C:\\data\\workspaces\\github\\de.protos.demos\\src\\HexagonCANDemo\\etrice.runtime.c\\etR
 616              		.file 9 "C:\\data\\workspaces\\github\\de.protos.demos\\src\\HexagonCANDemo\\etrice.runtime.c\\etR
 617              		.file 10 "C:\\data\\workspaces\\github\\de.protos.demos\\src\\HexagonCANDemo\\etrice.runtime.c\\et
 618              		.file 11 "C:\\data\\workspaces\\github\\de.protos.demos\\src\\HexagonCANDemo\\etrice.runtime.c\\et
 619              		.file 12 "C:\\data\\workspaces\\github\\de.protos.demos\\src\\HexagonCANDemo\\etrice.runtime.c\\et
 620              		.file 13 "C:\\data\\workspaces\\github\\de.protos.demos\\src\\HexagonCANDemo\\etrice.HexagonCANDem
 621              		.file 14 "C:/data/workspaces/github/de.protos.demos/src/HexagonCANDemo/etrice.HexagonCANDemo.demo/
DEFINED SYMBOLS
                            *ABS*:00000000 AMrPong.c
C:\Users\TJung\AppData\Local\Temp\ccb6Vcri.s:20     .text.setState:00000000 $t
C:\Users\TJung\AppData\Local\Temp\ccb6Vcri.s:24     .text.setState:00000000 setState
C:\Users\TJung\AppData\Local\Temp\ccb6Vcri.s:58     .text.getState:00000000 $t
C:\Users\TJung\AppData\Local\Temp\ccb6Vcri.s:62     .text.getState:00000000 getState
C:\Users\TJung\AppData\Local\Temp\ccb6Vcri.s:94     .text.action_TRANS_tr0_FROM_state0_TO_state0_BY_pongp0_tr0:00000000 $t
C:\Users\TJung\AppData\Local\Temp\ccb6Vcri.s:98     .text.action_TRANS_tr0_FROM_state0_TO_state0_BY_pongp0_tr0:00000000 action_TRANS_tr0_FROM_state0_TO_state0_BY_pongp0_tr0
C:\Users\TJung\AppData\Local\Temp\ccb6Vcri.s:130    .text.exitTo:00000000 $t
C:\Users\TJung\AppData\Local\Temp\ccb6Vcri.s:134    .text.exitTo:00000000 exitTo
C:\Users\TJung\AppData\Local\Temp\ccb6Vcri.s:191    .text.executeTransitionChain:00000000 $t
C:\Users\TJung\AppData\Local\Temp\ccb6Vcri.s:195    .text.executeTransitionChain:00000000 executeTransitionChain
C:\Users\TJung\AppData\Local\Temp\ccb6Vcri.s:251    .text.enterHistory:00000000 $t
C:\Users\TJung\AppData\Local\Temp\ccb6Vcri.s:255    .text.enterHistory:00000000 enterHistory
C:\Users\TJung\AppData\Local\Temp\ccb6Vcri.s:329    .text.AMrPong_executeInitTransition:00000000 $t
C:\Users\TJung\AppData\Local\Temp\ccb6Vcri.s:333    .text.AMrPong_executeInitTransition:00000000 AMrPong_executeInitTransition
C:\Users\TJung\AppData\Local\Temp\ccb6Vcri.s:382    .text.AMrPong_receiveEvent:00000000 $t
C:\Users\TJung\AppData\Local\Temp\ccb6Vcri.s:386    .text.AMrPong_receiveEvent:00000000 AMrPong_receiveEvent
C:\Users\TJung\AppData\Local\Temp\ccb6Vcri.s:505    .text.AMrPong_init:00000000 $t
C:\Users\TJung\AppData\Local\Temp\ccb6Vcri.s:510    .text.AMrPong_init:00000000 AMrPong_init
C:\Users\TJung\AppData\Local\Temp\ccb6Vcri.s:566    .text.AMrPong_receiveMessage:00000000 $t
C:\Users\TJung\AppData\Local\Temp\ccb6Vcri.s:571    .text.AMrPong_receiveMessage:00000000 AMrPong_receiveMessage
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.59b7826cf76cfe2eff811cea0f220ee8
                           .group:00000000 wm4.newlib.h.8.a9901dc52d1357e3e94003403d43f8b5
                           .group:00000000 wm4.features.h.22.b72b3baab2bb2eab3661375590100b6b
                           .group:00000000 wm4.config.h.193.5fb8ef056cdff92dec3dee9552839d8c
                           .group:00000000 wm4._ansi.h.23.7aefdac4826acebbfc9f3822a0aeb14c
                           .group:00000000 wm4.stdio.h.31.f48311dde756a2aec27351b58a280fb9
                           .group:00000000 wm4.stddef.h.187.9e651b6b8b16e149c1353259404973ea
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4._default_types.h.6.5e12cd604db8ce00b62bb2f02708eaf3
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4.stddef.h.349.31f4c5baff3fa2689010b32028da9c47
                           .group:00000000 wm4.reent.h.16.9e42f0e588b85e70b2bf6572af57ce64
                           .group:00000000 wm4.types.h.23.0d949686bbcadd1621462d4fa1f884f9
                           .group:00000000 wm4.stddef.h.40.cf962ebbec441b3ac67502735f0765db
                           .group:00000000 wm4.types.h.2.e9cec8c90ab35f77d9f499e06ae02400
                           .group:00000000 wm4.types.h.80.1f2c84c0d57dd52dd9936095d9ac218e
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.63.dfdea6580b080784d08faace69b6ed76
                           .group:00000000 wm4.etDatatypes.h.46.d01c3a9ad02b6611beb80ccd6973b180
                           .group:00000000 wm4.etMessageService.h.35.d59d0242cc2158bcaed8acc00ffa8450
                           .group:00000000 wm4.etRuntimeConfig.h.22.f3896c5e01c5c01380e7f5e574077970
                           .group:00000000 wm4.etActor.h.20.45f51564328d7e6c3cd8d6b06a7adf7c
                           .group:00000000 wm4.etMSCLogger.h.23.8776f0b4cca7a780673ce7e90ee97990
                           .group:00000000 wm4.etUnit.h.24.9b1f80ffbde450e89a23e0d2e396099c
                           .group:00000000 wm4.etMemory.h.14.7eccd5774aae195c80edaa99dd2a2bc1

UNDEFINED SYMBOLS
PPingPongConjPort_ping
handleSystemEvent
