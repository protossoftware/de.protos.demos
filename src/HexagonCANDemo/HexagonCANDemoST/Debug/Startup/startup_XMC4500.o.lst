   1              	# 1 "../Startup/startup_XMC4500.s"
   1              	/*****************************************************************************/
   0              	
   2              	/* Startup_XMC4500.s: Startup file for XMC4500 device series                 */
   0              	
   3              	/*****************************************************************************/
   4              	
   5              	/* ********************* Version History *********************************** */
   6              	/* ***************************************************************************
   7              	V1.0,July 2011, First version for XIP profile
   8              	V1.1,Oct  2011, Program loading code included (GH: b to main changed)
   9              	V1.2,Nov, 01, 2011 GH :Removed second definition of section .Xmc4500.reset
  10              	                         at line 186. 
  11              	V1.3,Nov, 16, 2011 GH :Removed PMU0_1_IRQHandler and respective weak function
  12              	                         declaration.
  13              	V1.4,Dec, 16, 2011 PKB:Jump to __Xmc4500_start_c reinstated for RTOS integration
  14              	V1.5,Jan, 10, 2012 PKB:Migrated to GCC from ARM
  15              	V1.6,Jan, 16, 2012 PKB:Branch prediction turned off, Parity errors cleared.
  16              	V1.7,Apr, 17, 2012 PKB:Added decision function for PLL initialization  
  17              	V1.8,Apr, 20, 2012 PKB:Handshake with DAVE code engine added  
  18              	V1.9,Jun, 14, 2012 PKB:Removed the handshake protocol towards simplification  
  19              	V1.10,Aug, 13, 2012 PKB:Flash Wait states handling  
  20              	V1.11,Oct, 11, 2012 PKB:C++ support. Call to global constructors  
  21              	V1.12,Jan, 23, 2013 PKB:XMC4 Prefetch bug workaround  
  22              	V1.13,Jul, 29, 2013 PKB:AAPCS violation in V1.12 fixed
  23              	V1.14,Feb, 05, 2014 PKB:Removed redundant alignment code from copy+clear funcs   
  24              	V1.15,May, 05, 2014 JFT:Added ram_code section
  25              	**************************************************************************** */
  26              	/**
  27              	* @file     Startup_XMC4500.s
  28              	*           XMC4000 Device Series
  29              	* @version  V1.15
  30              	* @date     May 2014
  31              	*
  32              	Copyright (C) 2014 Infineon Technologies AG. All rights reserved.
  33              	*
  34              	*
  35              	* @par
  36              	* Infineon Technologies AG (Infineon) is supplying this software for use with 
  37              	* Infineon's microcontrollers.  This file can be freely distributed
  38              	* within development tools that are supporting such microcontrollers.
  39              	*
  40              	* @par
  41              	* THIS SOFTWARE IS PROVIDED AS IS.  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  42              	* OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  43              	* MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  44              	* ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  45              	* CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  46              	*
  47              	******************************************************************************/
  48              	#include <uc_id.inc>
   1              	/*************************************************************************** */
   2              	/**
   3              	* @file     uc_id.inc
   4              	*           Infineon XMC Device Series
   5              	* @version  V1.2
   6              	* @date     18 Feb 2013
   7              	*
   8              	Copyright (C) 2013 Infineon Technologies AG. All rights reserved.
   9              	*
  10              	*
  11              	* @par
  12              	* Infineon Technologies AG (Infineon) is supplying this software for use with 
  13              	* Infineon's microcontrollers.  This file can be freely distributed
  14              	* within development tools that are supporting such microcontrollers.
  15              	*
  16              	* @par
  17              	* THIS SOFTWARE IS PROVIDED AS IS.  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  18              	* OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  19              	* MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  20              	* ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  21              	* CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  22              	*
  23              	******************************************************************************/
  24              	
  25              	/*****************************************************************************
  26              	************************* Version history ************************************
  27              	V1.0, 25 Jan 2013, PKB, First version with XMC4 devices
  28              	V1.1, 12 Feb 2013, RD, Addition of XMC1 devices
  29              	V1.2, 18 Feb 2013, RD, Updated Package definitions
  30              	V1.3, 21 Jan 2014, RD, Addition of VQFN Packages for XMC1 devices
  31              	*****************************************************************************/
  32              	
  33              	/* ***************************************************************************
  34              	******************************* ID definitions *******************************
  35              	*************************************************************************** */
  36              	/* Family definitions  */
  37              	#define    XMC4       (4)
  38              	#define    XMC1       (1)
  39              	
  40              	/* Series definitions  */
  41              	#define    XMC45      (45)
  42              	#define    XMC44      (44)
  43              	#define    XMC42      (42)
  44              	#define    XMC41      (41)
  45              	
  46              	#define    XMC13      (13)
  47              	#define    XMC12      (12)
  48              	#define    XMC11      (11)
  49              	
  50              	/* Device definitions  */
  51              	#define    XMC4500    (4500)
  52              	#define    XMC4502    (4502)
  53              	#define    XMC4504    (4504)
  54              	#define    XMC4400    (4400)
  55              	#define    XMC4402    (4402)
  56              	#define    XMC4200    (4200)
  57              	#define    XMC4100    (4100)
  58              	#define    XMC4104    (4104)
  59              	
  60              	#define    XMC1300    (1300)
  61              	#define    XMC1301    (1301)
  62              	#define    XMC1302    (1302)
  63              	#define    XMC1200    (1200)
  64              	#define    XMC1201    (1201)
  65              	#define    XMC1202    (1202)
  66              	#define    XMC1203    (1203)
  67              	#define    XMC1100    (1100)
  68              	
  69              	/* STEP definitions    */
  70              	#define    STEP_AA    (1)
  71              	#define    STEP_AB    (2)
  72              	#define    STEP_AC    (3)
  73              	#define    STEP_BA    (4)
  74              	#define    STEP_BB    (5)
  75              	#define    STEP_BC    (6)
  76              	
  77              	/* Package definitions */
  78              	#define    BGA144     (1)
  79              	#define    LQFP144    (2)
  80              	#define    LQFP100    (3)
  81              	#define    BGA64      (4)
  82              	#define    LQFP64     (5)
  83              	#define    VQFN48     (6)
  84              	#define    TSSOP38    (7)
  85              	#define    TSSOP28    (8)
  86              	#define    TSSOP16    (9) 
  87              	#define    VQFN24     (10)
  88              	#define    VQFN40     (11)
  89              	
  90              	/************************* End of ID definitions ************************** */
  91              	
  92              	/* *************** README README README README README README ************** */
  93              	/*
  94              	 * Within a family and specifically within a series, SW ID uniquely identifies
  95              	 * a device by available functionality, silicon revision (aka STEP) and 
  96              	 * packaging information.
  97              	 *
  98              	 * The early engineering samples of XMC45/44/42/41 series and initial steps of 
  99              	 * productive XMC45 series devices had a simple 4 digit SW ID.
 100              	 *
 101              	 * In order to make this numbering scheme more scalable, a 7 digit encoding
 102              	 * scheme is adopted for later steps of productive samples of XMC45/44/42/41
 103              	 */
 104              	
 105              	/* ***************************************************************************
 106              	**************** Mapping between IDs and supported SW IDs ********************
 107              	*************************************************************************** */
 108              	
 109              	/* ***************** Start of section for XMC45 devices ******************* */
 110              	#if (UC_ID == 4501)         /* SW ID : 45.0.1 */
 111              	#define UC_FAMILY    XMC4
 112              	#define UC_SERIES    XMC45
 113              	#define UC_DEVICE    XMC4500
 114              	#define UC_STEP      STEP_AA
 115              	#define UC_PACKAGE   BGA144
 116              	
 117              	#elif (UC_ID == 4502)       /* SW ID : 45.0.2 */
 118              	#define UC_FAMILY    XMC4
 119              	#define UC_SERIES    XMC45
 120              	#define UC_DEVICE    XMC4500
 121              	#define UC_STEP      STEP_AA
 122              	#define UC_PACKAGE   LQFP144
 123              	
 124              	#elif (UC_ID == 4503)       /* SW ID : 45.0.3 */
 125              	#define UC_FAMILY    XMC4
 126              	#define UC_SERIES    XMC45
 127              	#define UC_DEVICE    XMC4500
 128              	#define UC_STEP      STEP_AA
 129              	#define UC_PACKAGE   LQFP100
 130              	
 131              	#elif (UC_ID == 4523)       /* SW ID : 45.2.3 */
 132              	#define UC_FAMILY    XMC4
 133              	#define UC_SERIES    XMC45
 134              	#define UC_DEVICE    XMC4502
 135              	#define UC_STEP      STEP_AA
 136              	#define UC_PACKAGE   LQFP100
 137              	
 138              	#elif (UC_ID == 4543)       /* SW ID : 45.4.3 */
 139              	#define UC_FAMILY    XMC4
 140              	#define UC_SERIES    XMC45
 141              	#define UC_DEVICE    XMC4504
 142              	#define UC_STEP      STEP_AA
 143              	#define UC_PACKAGE   LQFP100
 144              	
 145              	#elif (UC_ID == 4542)       /* SW ID : 45.4.2 */
 146              	#define UC_FAMILY    XMC4
 147              	#define UC_SERIES    XMC45
 148              	#define UC_DEVICE    XMC4504
 149              	#define UC_STEP      STEP_AA
 150              	#define UC_PACKAGE   LQFP144
 151              	
 152              	#elif (UC_ID == 4502001)    /* SW ID : 45.0200.1 */
 153              	#define UC_FAMILY    XMC4
 154              	#define UC_SERIES    XMC45
 155              	#define UC_DEVICE    XMC4500
 156              	#define UC_STEP      STEP_AB
 157              	#define UC_PACKAGE   BGA144
 158              	
 159              	#elif (UC_ID == 4502002)    /* SW ID : 45.0200.2 */
 160              	#define UC_FAMILY    XMC4
 161              	#define UC_SERIES    XMC45
 162              	#define UC_DEVICE    XMC4500
 163              	#define UC_STEP      STEP_AB
 164              	#define UC_PACKAGE   LQFP144
 165              	
 166              	#elif (UC_ID == 4502003)    /* SW ID : 45.0200.3 */
 167              	#define UC_FAMILY    XMC4
 168              	#define UC_SERIES    XMC45
 169              	#define UC_DEVICE    XMC4500
 170              	#define UC_STEP      STEP_AB
 171              	#define UC_PACKAGE   LQFP100
 172              	
 173              	#elif (UC_ID == 4502023)    /* SW ID : 45.0202.3 */
 174              	#define UC_FAMILY    XMC4
 175              	#define UC_SERIES    XMC45
 176              	#define UC_DEVICE    XMC4502
 177              	#define UC_STEP      STEP_AB
 178              	#define UC_PACKAGE   LQFP100
 179              	
 180              	#elif (UC_ID == 4502043)    /* SW ID : 45.0204.3 */
 181              	#define UC_FAMILY    XMC4
 182              	#define UC_SERIES    XMC45
 183              	#define UC_DEVICE    XMC4504
 184              	#define UC_STEP      STEP_AB
 185              	#define UC_PACKAGE   LQFP100
 186              	
 187              	#elif (UC_ID == 4502042)    /* SW ID : 45.0204.2 */
 188              	#define UC_FAMILY    XMC4
 189              	#define UC_SERIES    XMC45
 190              	#define UC_DEVICE    XMC4504
 191              	#define UC_STEP      STEP_AB
 192              	#define UC_PACKAGE   LQFP144
 193              	
 194              	#elif (UC_ID == 4503001)    /* SW ID : 45.0300.1 */
 195              	#define UC_FAMILY    XMC4
 196              	#define UC_SERIES    XMC45
 197              	#define UC_DEVICE    XMC4500
 198              	#define UC_STEP      STEP_AC
 199              	#define UC_PACKAGE   BGA144
 200              	
 201              	#elif (UC_ID == 4503002)    /* SW ID : 45.0300.2 */
 202              	#define UC_FAMILY    XMC4
 203              	#define UC_SERIES    XMC45
 204              	#define UC_DEVICE    XMC4500
 205              	#define UC_STEP      STEP_AC
 206              	#define UC_PACKAGE   LQFP144
 207              	
 208              	#elif (UC_ID == 4503003)    /* SW ID : 45.0300.3 */
 209              	#define UC_FAMILY    XMC4
 210              	#define UC_SERIES    XMC45
 211              	#define UC_DEVICE    XMC4500
 212              	#define UC_STEP      STEP_AC
 213              	#define UC_PACKAGE   LQFP100
 214              	
 215              	#elif (UC_ID == 4503023)    /* SW ID : 45.0302.3 */
 216              	#define UC_FAMILY    XMC4
 217              	#define UC_SERIES    XMC45
 218              	#define UC_DEVICE    XMC4502
 219              	#define UC_STEP      STEP_AC
 220              	#define UC_PACKAGE   LQFP100
 221              	
 222              	#elif (UC_ID == 4503043)    /* SW ID : 45.0304.3 */
 223              	#define UC_FAMILY    XMC4
 224              	#define UC_SERIES    XMC45
 225              	#define UC_DEVICE    XMC4504
 226              	#define UC_STEP      STEP_AC
 227              	#define UC_PACKAGE   LQFP100
 228              	
 229              	#elif (UC_ID == 4503042)    /* SW ID : 45.0304.2 */
 230              	#define UC_FAMILY    XMC4
 231              	#define UC_SERIES    XMC45
 232              	#define UC_DEVICE    XMC4504
 233              	#define UC_STEP      STEP_AC
 234              	#define UC_PACKAGE   LQFP144
 235              	
 236              	/* ***************** Start of section for XMC44 devices ******************* */
 237              	#elif (UC_ID == 4403)       /* SW ID : 44.0.3 */
 238              	#define UC_FAMILY    XMC4
 239              	#define UC_SERIES    XMC44
 240              	#define UC_DEVICE    XMC4400
 241              	#define UC_STEP      STEP_AA
 242              	#define UC_PACKAGE   LQFP100
 243              	
 244              	#elif (UC_ID == 44005)      /* SW ID : 44.00.5 */
 245              	#define UC_FAMILY    XMC4
 246              	#define UC_SERIES    XMC44
 247              	#define UC_DEVICE    XMC4400
 248              	#define UC_STEP      STEP_AA
 249              	#define UC_PACKAGE   LQFP64
 250              	
 251              	#elif (UC_ID == 44023)      /* SW ID : 44.02.3 */
 252              	#define UC_FAMILY    XMC4
 253              	#define UC_SERIES    XMC44
 254              	#define UC_DEVICE    XMC4402
 255              	#define UC_STEP      STEP_AA
 256              	#define UC_PACKAGE   LQFP100
 257              	
 258              	#elif (UC_ID == 44025)      /* SW ID : 44.02.5 */
 259              	#define UC_FAMILY    XMC4
 260              	#define UC_SERIES    XMC44
 261              	#define UC_DEVICE    XMC4402
 262              	#define UC_STEP      STEP_AA
 263              	#define UC_PACKAGE   LQFP64
 264              	
 265              	#elif (UC_ID == 4402003)       /* SW ID : 44.0200.3 */
 266              	#define UC_FAMILY    XMC4
 267              	#define UC_SERIES    XMC44
 268              	#define UC_DEVICE    XMC4400
 269              	#define UC_STEP      STEP_AB
 270              	#define UC_PACKAGE   LQFP100
 271              	
 272              	#elif (UC_ID == 4402005)      /* SW ID : 44.0200.5 */
 273              	#define UC_FAMILY    XMC4
 274              	#define UC_SERIES    XMC44
 275              	#define UC_DEVICE    XMC4400
 276              	#define UC_STEP      STEP_AB
 277              	#define UC_PACKAGE   LQFP64
 278              	
 279              	#elif (UC_ID == 4402023)      /* SW ID : 44.0202.3 */
 280              	#define UC_FAMILY    XMC4
 281              	#define UC_SERIES    XMC44
 282              	#define UC_DEVICE    XMC4402
 283              	#define UC_STEP      STEP_AB
 284              	#define UC_PACKAGE   LQFP100
 285              	
 286              	#elif (UC_ID == 4402025)      /* SW ID : 44.0202.5 */
 287              	#define UC_FAMILY    XMC4
 288              	#define UC_SERIES    XMC44
 289              	#define UC_DEVICE    XMC4402
 290              	#define UC_STEP      STEP_AB
 291              	#define UC_PACKAGE   LQFP64
 292              	
 293              	/* **************** Start of section for XMC42/41 devices ****************** */
 294              	#elif (UC_ID == 42005)      /* SW ID : 42.00.5 */
 295              	#define UC_FAMILY    XMC4
 296              	#define UC_SERIES    XMC42
 297              	#define UC_DEVICE    XMC4200
 298              	#define UC_STEP      STEP_AA
 299              	#define UC_PACKAGE   LQFP64
 300              	
 301              	#elif (UC_ID == 4206)       /* SW ID : 42.0.6 */
 302              	#define UC_FAMILY    XMC4
 303              	#define UC_SERIES    XMC42
 304              	#define UC_DEVICE    XMC4200
 305              	#define UC_STEP      STEP_AA
 306              	#define UC_PACKAGE   VQFN48
 307              	
 308              	#elif (UC_ID == 42045)      /* SW ID : 42.04.5 */
 309              	#define UC_FAMILY    XMC4
 310              	#define UC_SERIES    XMC41
 311              	#define UC_DEVICE    XMC4104
 312              	#define UC_STEP      STEP_AA
 313              	#define UC_PACKAGE   LQFP64
 314              	
 315              	#elif (UC_ID == 42046)      /* SW ID : 42.04.6 */
 316              	#define UC_FAMILY    XMC4
 317              	#define UC_SERIES    XMC41
 318              	#define UC_DEVICE    XMC4104
 319              	#define UC_STEP      STEP_AA
 320              	#define UC_PACKAGE   VQFN48
 321              	
 322              	#elif (UC_ID == 4202005)      /* SW ID : 42.0200.5 */
 323              	#define UC_FAMILY    XMC4
 324              	#define UC_SERIES    XMC42
 325              	#define UC_DEVICE    XMC4200
 326              	#define UC_STEP      STEP_AB
 327              	#define UC_PACKAGE   LQFP64
 328              	
 329              	#elif (UC_ID == 4202006)       /* SW ID : 42.0200.6 */
 330              	#define UC_FAMILY    XMC4
 331              	#define UC_SERIES    XMC42
 332              	#define UC_DEVICE    XMC4200
 333              	#define UC_STEP      STEP_AB
 334              	#define UC_PACKAGE   VQFN48
 335              	
 336              	#elif (UC_ID == 4202045)      /* SW ID : 42.0204.5 */
 337              	#define UC_FAMILY    XMC4
 338              	#define UC_SERIES    XMC41
 339              	#define UC_DEVICE    XMC4104
 340              	#define UC_STEP      STEP_AB
 341              	#define UC_PACKAGE   LQFP64
 342              	
 343              	#elif (UC_ID == 4202046)      /* SW ID : 42.0204.6 */
 344              	#define UC_FAMILY    XMC4
 345              	#define UC_SERIES    XMC41
 346              	#define UC_DEVICE    XMC4104
 347              	#define UC_STEP      STEP_AB
 348              	#define UC_PACKAGE   VQFN48
 349              	
 350              	#elif (UC_ID == 4202086)      /* SW ID : 42.0208.6 */
 351              	#define UC_FAMILY    XMC4
 352              	#define UC_SERIES    XMC41
 353              	#define UC_DEVICE    XMC4108
 354              	#define UC_STEP      STEP_AB
 355              	#define UC_PACKAGE   VQFN48
 356              	
 357              	
 358              	/* **************** Start of section for XMC13 devices ****************** */
 359              	#elif (UC_ID == 1301017)       /* SW ID : 13.0101.7 */
 360              	#define UC_FAMILY    XMC1
 361              	#define UC_SERIES    XMC13
 362              	#define UC_DEVICE    XMC1301
 363              	#define UC_STEP      STEP_AA
 364              	#define UC_PACKAGE   TSSOP38
 365              	
 366              	#elif (UC_ID == 1301019)       /* SW ID : 13.0101.9 */
 367              	#define UC_FAMILY    XMC1
 368              	#define UC_SERIES    XMC13
 369              	#define UC_DEVICE    XMC1301
 370              	#define UC_STEP      STEP_AA
 371              	#define UC_PACKAGE   TSSOP16
 372              	
 373              	#elif (UC_ID == 13010110)      /* SW ID : 13.0101.10 */
 374              	#define UC_FAMILY    XMC1
 375              	#define UC_SERIES    XMC13
 376              	#define UC_DEVICE    XMC1301
 377              	#define UC_STEP      STEP_AA
 378              	#define UC_PACKAGE   VQFN24
 379              	
 380              	#elif (UC_ID == 13010111)      /* SW ID : 13.0101.11 */
 381              	#define UC_FAMILY    XMC1
 382              	#define UC_SERIES    XMC13
 383              	#define UC_DEVICE    XMC1301
 384              	#define UC_STEP      STEP_AA
 385              	#define UC_PACKAGE   VQFN40
 386              	
 387              	#elif (UC_ID == 1301027)      /* SW ID : 13.0102.7 */
 388              	#define UC_FAMILY    XMC1
 389              	#define UC_SERIES    XMC13
 390              	#define UC_DEVICE    XMC1302
 391              	#define UC_STEP      STEP_AA
 392              	#define UC_PACKAGE   TSSOP38
 393              	
 394              	#elif (UC_ID == 1301029)       /* SW ID : 13.0102.9 */
 395              	#define UC_FAMILY    XMC1
 396              	#define UC_SERIES    XMC13
 397              	#define UC_DEVICE    XMC1302
 398              	#define UC_STEP      STEP_AA
 399              	#define UC_PACKAGE   TSSOP16
 400              	
 401              	#elif (UC_ID == 13010210)      /* SW ID : 13.0102.10 */
 402              	#define UC_FAMILY    XMC1
 403              	#define UC_SERIES    XMC13
 404              	#define UC_DEVICE    XMC1302
 405              	#define UC_STEP      STEP_AA
 406              	#define UC_PACKAGE   VQFN24
 407              	
 408              	#elif (UC_ID == 13010211)      /* SW ID : 13.0102.11 */
 409              	#define UC_FAMILY    XMC1
 410              	#define UC_SERIES    XMC13
 411              	#define UC_DEVICE    XMC1302
 412              	#define UC_STEP      STEP_AA
 413              	#define UC_PACKAGE   VQFN40
 414              	
 415              	/* **************** Start of section for XMC12 devices ****************** */
 416              	#elif (UC_ID == 1201007)      /* SW ID : 12.0100.7 */
 417              	#define UC_FAMILY    XMC1
 418              	#define UC_SERIES    XMC12
 419              	#define UC_DEVICE    XMC1200
 420              	#define UC_STEP      STEP_AA
 421              	#define UC_PACKAGE   TSSOP38
 422              	
 423              	#elif (UC_ID == 1201017)       /* SW ID : 12.0101.7 */
 424              	#define UC_FAMILY    XMC1
 425              	#define UC_SERIES    XMC12
 426              	#define UC_DEVICE    XMC1201
 427              	#define UC_STEP      STEP_AA
 428              	#define UC_PACKAGE   TSSOP38
 429              	
 430              	#elif (UC_ID == 1201018)       /* SW ID : 12.0101.8 */
 431              	#define UC_FAMILY    XMC1
 432              	#define UC_SERIES    XMC12
 433              	#define UC_DEVICE    XMC1201
 434              	#define UC_STEP      STEP_AA
 435              	#define UC_PACKAGE   TSSOP28
 436              	
 437              	#elif (UC_ID == 12010111)       /* SW ID : 12.0101.11 */
 438              	#define UC_FAMILY    XMC1
 439              	#define UC_SERIES    XMC12
 440              	#define UC_DEVICE    XMC1201
 441              	#define UC_STEP      STEP_AA
 442              	#define UC_PACKAGE   VQFN40
 443              	
 444              	#elif (UC_ID == 1201027)      /* SW ID : 12.0102.7 */
 445              	#define UC_FAMILY    XMC1
 446              	#define UC_SERIES    XMC12
 447              	#define UC_DEVICE    XMC1202
 448              	#define UC_STEP      STEP_AA
 449              	#define UC_PACKAGE   TSSOP38
 450              	
 451              	#elif (UC_ID == 1201028)      /* SW ID : 12.0102.8 */
 452              	#define UC_FAMILY    XMC1
 453              	#define UC_SERIES    XMC12
 454              	#define UC_DEVICE    XMC1202
 455              	#define UC_STEP      STEP_AA
 456              	#define UC_PACKAGE   TSSOP28
 457              	
 458              	#elif (UC_ID == 1201029)      /* SW ID : 12.0102.9 */
 459              	#define UC_FAMILY    XMC1
 460              	#define UC_SERIES    XMC12
 461              	#define UC_DEVICE    XMC1202
 462              	#define UC_STEP      STEP_AA
 463              	#define UC_PACKAGE   TSSOP16
 464              	
 465              	#elif (UC_ID == 12010210)      /* SW ID : 12.0102.10 */
 466              	#define UC_FAMILY    XMC1
 467              	#define UC_SERIES    XMC12
 468              	#define UC_DEVICE    XMC1202
 469              	#define UC_STEP      STEP_AA
 470              	#define UC_PACKAGE   VQFN24
 471              	
 472              	#elif (UC_ID == 12010211)      /* SW ID : 12.0102.11 */
 473              	#define UC_FAMILY    XMC1
 474              	#define UC_SERIES    XMC12
 475              	#define UC_DEVICE    XMC1202
 476              	#define UC_STEP      STEP_AA
 477              	#define UC_PACKAGE   VQFN40
 478              	
 479              	#elif (UC_ID == 1201039)      /* SW ID : 12.0103.9 */
 480              	#define UC_FAMILY    XMC1
 481              	#define UC_SERIES    XMC12
 482              	#define UC_DEVICE    XMC1203
 483              	#define UC_STEP      STEP_AA
 484              	#define UC_PACKAGE   TSSOP16
 485              	
 486              	#elif (UC_ID == 12010310)      /* SW ID : 12.0103.10 */
 487              	#define UC_FAMILY    XMC1
 488              	#define UC_SERIES    XMC12
 489              	#define UC_DEVICE    XMC1203
 490              	#define UC_STEP      STEP_AA
 491              	#define UC_PACKAGE   VQFN24
 492              	
 493              	/* **************** Start of section for XMC11 devices ****************** */
 494              	#elif (UC_ID == 1101007)      /* SW ID : 11.0100.7 */
 495              	#define UC_FAMILY    XMC1
 496              	#define UC_SERIES    XMC11
 497              	#define UC_DEVICE    XMC1100
 498              	#define UC_STEP      STEP_AA
 499              	#define UC_PACKAGE   TSSOP38
 500              	
 501              	#elif (UC_ID == 1101009)      /* SW ID : 11.0100.9 */
 502              	#define UC_FAMILY    XMC1
 503              	#define UC_SERIES    XMC11
 504              	#define UC_DEVICE    XMC1100
 505              	#define UC_STEP      STEP_AA
 506              	#define UC_PACKAGE   TSSOP16
 507              	
 508              	#elif (UC_ID == 11010010)      /* SW ID : 11.0100.10 */
 509              	#define UC_FAMILY    XMC1
 510              	#define UC_SERIES    XMC11
 511              	#define UC_DEVICE    XMC1100
 512              	#define UC_STEP      STEP_AA
 513              	#define UC_PACKAGE   VQFN24
 514              	
 515              	#elif (UC_ID == 11010011)      /* SW ID : 11.0100.11 */
 516              	#define UC_FAMILY    XMC1
 517              	#define UC_SERIES    XMC11
 518              	#define UC_DEVICE    XMC1100
 519              	#define UC_STEP      STEP_AA
 520              	#define UC_PACKAGE   VQFN40
 521              	
 522              	#else
 523              	#error "Unsupported XMC device"
 524              	#endif
 525              	
 526              	#define __TARGET_DEVICE__ UC_SERIES
 527              	
  49              	
  50              	/* ===========START : MACRO DEFINITION MACRO DEFINITION ================== */
  51              	/*
  52              	 * STEP_AB and below have the prefetch bug. A veneer defined below will first
  53              	 * be executed which in turn branches to the final exception handler.
  54              	 * 
  55              	 * In addition to defining the veneers, the vector table must for these buggy
  56              	 * devices contain the veneers. 
  57              	 */
  58              	 
  59              	/* A macro to setup a vector table entry based on STEP ID */ 
  60              	.macro Entry Handler
  61              	 #if (UC_STEP > STEP_AB)
  62              	   .long \Handler
  63              	 #else
  64              	   .long \Handler\()_Veneer
  65              	 #endif
  66              	.endm
  67              	
  68              	/* A macro to ease definition of the various handlers based on STEP ID */
  69              	#if (UC_STEP <= STEP_AB)
  70              	 /* First define the final exception handler */
  71              	 .macro Insert_ExceptionHandler Handler_Func 
  72              	  .weak \Handler_Func
  74              	  \Handler_Func:
  75              	  B .
  77              	
  78              	  /* And then define a veneer that will branch to the final excp handler */
  79              	  .weak \Handler_Func\()_Veneer
  81              	  \Handler_Func\()_Veneer:
  82              	  LDR     R0, =\Handler_Func
  83              	  PUSH    {LR}
  84              	  SUB     SP,#4  
  85              	  BLX     R0
  86              	  ADD     SP,#4
  87              	  POP     {PC}
  89              	 .endm
  90              	#else
  91              	 /* No prefetch bug, hence define only the final exception handler */
  92              	 .macro Insert_ExceptionHandler Handler_Func 
  93              	  .weak \Handler_Func
  95              	  \Handler_Func:
  96              	  B .
  98              	 .endm
  99              	#endif 
 100              	/* =============END : MACRO DEFINITION MACRO DEFINITION ================== */
 101              	
 102              	/* ================== START OF VECTOR TABLE DEFINITION ====================== */
 103              	/* Vector Table - This gets programed into VTOR register by onchip BootROM */
 104              	    .syntax unified
 105              	
 106              	    .section ".Xmc4500.reset"
 107              	    .globl  __Xmc4500_interrupt_vector_cortex_m
 109              	
 110              	__Xmc4500_interrupt_vector_cortex_m:
 111 0000 00000000 	    .long   __Xmc4500_stack             /* Top of Stack                 */
 112 0004 00000000 	    .long   __Xmc4500_reset_cortex_m    /* Reset Handler                */
 113              	
 114 0008 00000000 	    Entry   NMI_Handler                 /* NMI Handler                  */
 115 000c 00000000 	    Entry   HardFault_Handler           /* Hard Fault Handler           */
 116 0010 00000000 	    Entry   MemManage_Handler           /* MPU Fault Handler            */
 117 0014 00000000 	    Entry   BusFault_Handler            /* Bus Fault Handler            */
 118 0018 00000000 	    Entry   UsageFault_Handler          /* Usage Fault Handler          */
 119 001c 00000000 	    .long   0                           /* Reserved                     */
 120 0020 00000000 	    .long   0                           /* Reserved                     */
 121 0024 00000000 	    .long   0                           /* Reserved                     */
 122 0028 00000000 	    .long   0                           /* Reserved                     */
 123 002c 00000000 	    Entry   SVC_Handler                 /* SVCall Handler               */
 124 0030 00000000 	    Entry   DebugMon_Handler            /* Debug Monitor Handler        */
 125 0034 00000000 	    .long   0                           /* Reserved                     */
 126 0038 00000000 	    Entry   PendSV_Handler              /* PendSV Handler               */
 127 003c 00000000 	    Entry   SysTick_Handler             /* SysTick Handler              */
 128              	
 129              	    /* Interrupt Handlers for Service Requests (SR) from XMC4500 Peripherals */
 130 0040 00000000 	    Entry   SCU_0_IRQHandler            /* Handler name for SR SCU_0     */
 131 0044 00000000 	    Entry   ERU0_0_IRQHandler           /* Handler name for SR ERU0_0    */
 132 0048 00000000 	    Entry   ERU0_1_IRQHandler           /* Handler name for SR ERU0_1    */
 133 004c 00000000 	    Entry   ERU0_2_IRQHandler           /* Handler name for SR ERU0_2    */
 134 0050 00000000 	    Entry   ERU0_3_IRQHandler           /* Handler name for SR ERU0_3    */ 
 135 0054 00000000 	    Entry   ERU1_0_IRQHandler           /* Handler name for SR ERU1_0    */
 136 0058 00000000 	    Entry   ERU1_1_IRQHandler           /* Handler name for SR ERU1_1    */
 137 005c 00000000 	    Entry   ERU1_2_IRQHandler           /* Handler name for SR ERU1_2    */
 138 0060 00000000 	    Entry   ERU1_3_IRQHandler           /* Handler name for SR ERU1_3    */
 139 0064 00000000 	    .long   0                           /* Not Available                 */
 140 0068 00000000 	    .long   0                           /* Not Available                 */
 141 006c 00000000 	    .long   0                           /* Not Available                 */
 142 0070 00000000 	    Entry   PMU0_0_IRQHandler           /* Handler name for SR PMU0_0    */
 143 0074 00000000 	    .long   0                           /* Not Available                 */
 144 0078 00000000 	    Entry   VADC0_C0_0_IRQHandler       /* Handler name for SR VADC0_C0_0  */
 145 007c 00000000 	    Entry   VADC0_C0_1_IRQHandler       /* Handler name for SR VADC0_C0_1  */
 146 0080 00000000 	    Entry   VADC0_C0_2_IRQHandler       /* Handler name for SR VADC0_C0_1  */
 147 0084 00000000 	    Entry   VADC0_C0_3_IRQHandler       /* Handler name for SR VADC0_C0_3  */
 148 0088 00000000 	    Entry   VADC0_G0_0_IRQHandler       /* Handler name for SR VADC0_G0_0  */
 149 008c 00000000 	    Entry   VADC0_G0_1_IRQHandler       /* Handler name for SR VADC0_G0_1  */
 150 0090 00000000 	    Entry   VADC0_G0_2_IRQHandler       /* Handler name for SR VADC0_G0_2  */
 151 0094 00000000 	    Entry   VADC0_G0_3_IRQHandler       /* Handler name for SR VADC0_G0_3  */
 152 0098 00000000 	    Entry   VADC0_G1_0_IRQHandler       /* Handler name for SR VADC0_G1_0  */
 153 009c 00000000 	    Entry   VADC0_G1_1_IRQHandler       /* Handler name for SR VADC0_G1_1  */
 154 00a0 00000000 	    Entry   VADC0_G1_2_IRQHandler       /* Handler name for SR VADC0_G1_2  */
 155 00a4 00000000 	    Entry   VADC0_G1_3_IRQHandler       /* Handler name for SR VADC0_G1_3  */
 156 00a8 00000000 	    Entry   VADC0_G2_0_IRQHandler       /* Handler name for SR VADC0_G2_0  */
 157 00ac 00000000 	    Entry   VADC0_G2_1_IRQHandler       /* Handler name for SR VADC0_G2_1  */
 158 00b0 00000000 	    Entry   VADC0_G2_2_IRQHandler       /* Handler name for SR VADC0_G2_2  */
 159 00b4 00000000 	    Entry   VADC0_G2_3_IRQHandler       /* Handler name for SR VADC0_G2_3  */
 160 00b8 00000000 	    Entry   VADC0_G3_0_IRQHandler       /* Handler name for SR VADC0_G3_0  */
 161 00bc 00000000 	    Entry   VADC0_G3_1_IRQHandler       /* Handler name for SR VADC0_G3_1  */
 162 00c0 00000000 	    Entry   VADC0_G3_2_IRQHandler       /* Handler name for SR VADC0_G3_2  */
 163 00c4 00000000 	    Entry   VADC0_G3_3_IRQHandler       /* Handler name for SR VADC0_G3_3  */
 164 00c8 00000000 	    Entry   DSD0_0_IRQHandler           /* Handler name for SR DSD0_0    */
 165 00cc 00000000 	    Entry   DSD0_1_IRQHandler           /* Handler name for SR DSD0_1    */
 166 00d0 00000000 	    Entry   DSD0_2_IRQHandler           /* Handler name for SR DSD0_2    */
 167 00d4 00000000 	    Entry   DSD0_3_IRQHandler           /* Handler name for SR DSD0_3    */
 168 00d8 00000000 	    Entry   DSD0_4_IRQHandler           /* Handler name for SR DSD0_4    */
 169 00dc 00000000 	    Entry   DSD0_5_IRQHandler           /* Handler name for SR DSD0_5    */
 170 00e0 00000000 	    Entry   DSD0_6_IRQHandler           /* Handler name for SR DSD0_6    */
 171 00e4 00000000 	    Entry   DSD0_7_IRQHandler           /* Handler name for SR DSD0_7    */
 172 00e8 00000000 	    Entry   DAC0_0_IRQHandler           /* Handler name for SR DAC0_0    */
 173 00ec 00000000 	    Entry   DAC0_1_IRQHandler           /* Handler name for SR DAC0_0    */
 174 00f0 00000000 	    Entry   CCU40_0_IRQHandler          /* Handler name for SR CCU40_0   */
 175 00f4 00000000 	    Entry   CCU40_1_IRQHandler          /* Handler name for SR CCU40_1   */
 176 00f8 00000000 	    Entry   CCU40_2_IRQHandler          /* Handler name for SR CCU40_2   */
 177 00fc 00000000 	    Entry   CCU40_3_IRQHandler          /* Handler name for SR CCU40_3   */
 178 0100 00000000 	    Entry   CCU41_0_IRQHandler          /* Handler name for SR CCU41_0   */
 179 0104 00000000 	    Entry   CCU41_1_IRQHandler          /* Handler name for SR CCU41_1   */
 180 0108 00000000 	    Entry   CCU41_2_IRQHandler          /* Handler name for SR CCU41_2   */
 181 010c 00000000 	    Entry   CCU41_3_IRQHandler          /* Handler name for SR CCU41_3   */
 182 0110 00000000 	    Entry   CCU42_0_IRQHandler          /* Handler name for SR CCU42_0   */
 183 0114 00000000 	    Entry   CCU42_1_IRQHandler          /* Handler name for SR CCU42_1   */
 184 0118 00000000 	    Entry   CCU42_2_IRQHandler          /* Handler name for SR CCU42_2   */
 185 011c 00000000 	    Entry   CCU42_3_IRQHandler          /* Handler name for SR CCU42_3   */
 186 0120 00000000 	    Entry   CCU43_0_IRQHandler          /* Handler name for SR CCU43_0   */
 187 0124 00000000 	    Entry   CCU43_1_IRQHandler          /* Handler name for SR CCU43_1   */
 188 0128 00000000 	    Entry   CCU43_2_IRQHandler          /* Handler name for SR CCU43_2   */
 189 012c 00000000 	    Entry   CCU43_3_IRQHandler          /* Handler name for SR CCU43_3   */
 190 0130 00000000 	    Entry   CCU80_0_IRQHandler          /* Handler name for SR CCU80_0   */
 191 0134 00000000 	    Entry   CCU80_1_IRQHandler          /* Handler name for SR CCU80_1   */
 192 0138 00000000 	    Entry   CCU80_2_IRQHandler          /* Handler name for SR CCU80_2   */
 193 013c 00000000 	    Entry   CCU80_3_IRQHandler          /* Handler name for SR CCU80_3   */
 194 0140 00000000 	    Entry   CCU81_0_IRQHandler          /* Handler name for SR CCU81_0   */
 195 0144 00000000 	    Entry   CCU81_1_IRQHandler          /* Handler name for SR CCU81_1   */
 196 0148 00000000 	    Entry   CCU81_2_IRQHandler          /* Handler name for SR CCU81_2   */
 197 014c 00000000 	    Entry   CCU81_3_IRQHandler          /* Handler name for SR CCU81_3   */
 198 0150 00000000 	    Entry   POSIF0_0_IRQHandler         /* Handler name for SR POSIF0_0  */
 199 0154 00000000 	    Entry   POSIF0_1_IRQHandler         /* Handler name for SR POSIF0_1  */
 200 0158 00000000 	    Entry   POSIF1_0_IRQHandler         /* Handler name for SR POSIF1_0  */
 201 015c 00000000 	    Entry   POSIF1_1_IRQHandler         /* Handler name for SR POSIF1_1  */
 202 0160 00000000 	    .long   0                           /* Not Available                 */
 203 0164 00000000 	    .long   0                           /* Not Available                 */
 204 0168 00000000 	    .long   0                           /* Not Available                 */
 205 016c 00000000 	    .long   0                           /* Not Available                 */
 206 0170 00000000 	    Entry   CAN0_0_IRQHandler           /* Handler name for SR CAN0_0    */
 207 0174 00000000 	    Entry   CAN0_1_IRQHandler           /* Handler name for SR CAN0_1    */
 208 0178 00000000 	    Entry   CAN0_2_IRQHandler           /* Handler name for SR CAN0_2    */
 209 017c 00000000 	    Entry   CAN0_3_IRQHandler           /* Handler name for SR CAN0_3    */
 210 0180 00000000 	    Entry   CAN0_4_IRQHandler           /* Handler name for SR CAN0_4    */
 211 0184 00000000 	    Entry   CAN0_5_IRQHandler           /* Handler name for SR CAN0_5    */
 212 0188 00000000 	    Entry   CAN0_6_IRQHandler           /* Handler name for SR CAN0_6    */
 213 018c 00000000 	    Entry   CAN0_7_IRQHandler           /* Handler name for SR CAN0_7    */
 214 0190 00000000 	    Entry   USIC0_0_IRQHandler          /* Handler name for SR USIC0_0   */
 215 0194 00000000 	    Entry   USIC0_1_IRQHandler          /* Handler name for SR USIC0_1   */
 216 0198 00000000 	    Entry   USIC0_2_IRQHandler          /* Handler name for SR USIC0_2   */
 217 019c 00000000 	    Entry   USIC0_3_IRQHandler          /* Handler name for SR USIC0_3   */
 218 01a0 00000000 	    Entry   USIC0_4_IRQHandler          /* Handler name for SR USIC0_4   */
 219 01a4 00000000 	    Entry   USIC0_5_IRQHandler          /* Handler name for SR USIC0_5   */
 220 01a8 00000000 	    Entry   USIC1_0_IRQHandler          /* Handler name for SR USIC1_0   */
 221 01ac 00000000 	    Entry   USIC1_1_IRQHandler          /* Handler name for SR USIC1_1   */
 222 01b0 00000000 	    Entry   USIC1_2_IRQHandler          /* Handler name for SR USIC1_2   */
 223 01b4 00000000 	    Entry   USIC1_3_IRQHandler          /* Handler name for SR USIC1_3   */
 224 01b8 00000000 	    Entry   USIC1_4_IRQHandler          /* Handler name for SR USIC1_4   */
 225 01bc 00000000 	    Entry   USIC1_5_IRQHandler          /* Handler name for SR USIC1_5   */
 226 01c0 00000000 	    Entry   USIC2_0_IRQHandler          /* Handler name for SR USIC2_0   */
 227 01c4 00000000 	    Entry   USIC2_1_IRQHandler          /* Handler name for SR USIC2_1   */
 228 01c8 00000000 	    Entry   USIC2_2_IRQHandler          /* Handler name for SR USIC2_2   */
 229 01cc 00000000 	    Entry   USIC2_3_IRQHandler          /* Handler name for SR USIC2_3   */
 230 01d0 00000000 	    Entry   USIC2_4_IRQHandler          /* Handler name for SR USIC2_4   */
 231 01d4 00000000 	    Entry   USIC2_5_IRQHandler          /* Handler name for SR USIC2_5   */
 232 01d8 00000000 	    Entry   LEDTS0_0_IRQHandler         /* Handler name for SR LEDTS0_0  */
 233 01dc 00000000 	    .long   0                           /* Not Available                 */
 234 01e0 00000000 	    Entry   FCE0_0_IRQHandler           /* Handler name for SR FCE0_0    */
 235 01e4 00000000 	    Entry   GPDMA0_0_IRQHandler         /* Handler name for SR GPDMA0_0  */
 236 01e8 00000000 	    Entry   SDMMC0_0_IRQHandler         /* Handler name for SR SDMMC0_0  */
 237 01ec 00000000 	    Entry   USB0_0_IRQHandler           /* Handler name for SR USB0_0    */
 238 01f0 00000000 	    Entry   ETH0_0_IRQHandler           /* Handler name for SR ETH0_0    */
 239 01f4 00000000 	    .long   0                           /* Not Available                 */
 240 01f8 00000000 	    Entry   GPDMA1_0_IRQHandler         /* Handler name for SR GPDMA1_0  */
 241 01fc 00000000 	    .long   0                           /* Not Available                 */
 242              	
 244              	/* ================== END OF VECTOR TABLE DEFINITION ======================= */
 245              	
 246              	/* ================== START OF VECTOR ROUTINES ============================= */
 247              	    .thumb
 248              	/* ======================================================================== */
 249              	/* Reset Handler */
 250              	
 251              	    .thumb_func
 252              	    .globl  __Xmc4500_reset_cortex_m
 254              	__Xmc4500_reset_cortex_m:
 255              	    .fnstart
 256              	
 257              	    /* C routines are likely to be called. Setup the stack now */
 258              	    /* This is already setup by BootROM,hence this step is optional */ 
 259 0200 DFF80CD0 	    LDR SP,=__Xmc4500_stack
 260              	
 261              	    /* Clock tree, External memory setup etc may be done here */    
 262 0204 0348     	    LDR     R0, =SystemInit
 263 0206 8047     	    BLX     R0
 264              	
 265              	/* 
 266              	   SystemInit_DAVE3() is provided by DAVE3 code generation engine. It is  
 267              	   weakly defined here though for a potential override.
 268              	*/
 269 0208 0348     	    LDR     R0, =SystemInit_DAVE3     
 270 020a 8047     	    BLX     R0
 271              	
 272 020c 00F00FB8 	    B       __Xmc4500_Program_Loader 
 273              	    
 274 0210 00000000 	    .pool
 274      00000000 
 274      00000000 
 275              	    .cantunwind
 276              	    .fnend
 278              	/* ======================================================================== */
 279              	/* __Xmc4500_reset must yield control to __Xmc4500_Program_Loader before control
 280              	   to C land is given */
 281              	   .section .Xmc4500.postreset,"x",%progbits
 282              	__COPY_FLASH2RAM:
 283              	   .fnstart:
 284              	   
 285              	   /* Is there anything to be copied? */
 286 0000 002A     	   CMP R2,#0
 287 0002 00F00D80 	   BEQ SKIPCOPY
 288              	
 289              	STARTCOPY:
 290              	   /* 
 291              	      R2 contains byte count. Change it to word count. It is ensured in the 
 292              	      linker script that the length is always word aligned.
 293              	   */
 294 0006 4FEA9202 	   LSR R2,R2,#2 /* Divide by 4 to obtain word count */
 295              	
 296              	   /* The proverbial loop from the schooldays */
 297              	COPYLOOP:
 298 000a 0368     	   LDR R3,[R0]
 299 000c 0B60     	   STR R3,[R1]
 300 000e 013A     	   SUBS R2,#1
 301 0010 00F00680 	   BEQ SKIPCOPY
 302 0014 00F10400 	   ADD R0,#4
 303 0018 01F10401 	   ADD R1,#4
 304 001c FFF7F5BF 	   B COPYLOOP
 305              	   
 306              	SKIPCOPY:
 307 0020 7047     	   BX LR
 308              	   
 309              	   __Xmc4500_Program_Loader:
 310              	   .fnstart
 311              	   /* Memories are accessible now*/
 312              	   
 313              	   /* DATA COPY */
 314              	   /* R0 = Start address, R1 = Destination address, R2 = Size */
 315 0022 1448     	   LDR R0, =eROData
 316 0024 1449     	   LDR R1, =__Xmc4500_sData
 317 0026 154A     	   LDR R2, =__Xmc4500_Data_Size
 318 0028 FFF7EAFF 	   BL __COPY_FLASH2RAM
 319              	
 320              	   /* RAM_CODE COPY */
 321              	   /* R0 = Start address, R1 = Destination address, R2 = Size */
 322 002c 1448     	   LDR R0, =__ram_code_load
 323 002e 1549     	   LDR R1, =__ram_code_start
 324 0030 154A     	   LDR R2, =__ram_code_size
 325 0032 FFF7E5FF 	   BL __COPY_FLASH2RAM
 326              	
 327              	   /* BSS CLEAR */
 328 0036 1548     	   LDR R0, =__Xmc4500_sBSS     /* Start of BSS */
 329 0038 1549     	   LDR R1, =__Xmc4500_BSS_Size /* BSS size in bytes */
 330              	
 331              	   /* Find out if there are items assigned to BSS */   
 332 003a 0029     	   CMP R1,#0 
 333 003c 00F00C80 	   BEQ SKIPCLEAR
 334              	
 335              	STARTCLEAR:
 336 0040 4FEA9101 	   LSR R1,R1,#2            /* BSS size in words */
 337              	   
 338 0044 4FF00002 	   MOV R2,#0
 339              	CLEARLOOP:
 340 0048 0260     	   STR R2,[R0]
 341 004a 0139     	   SUBS R1,#1
 342 004c 00F00480 	   BEQ SKIPCLEAR
 343 0050 00F10400 	   ADD R0,#4
 344 0054 FFF7F8BF 	   B CLEARLOOP
 345              	    
 346              	SKIPCLEAR:
 347              	   /* Remap vector table */
 348              	   /* This is already setup by BootROM,hence this step is optional */ 
 349 0058 0E48     	   LDR R0, =__Xmc4500_interrupt_vector_cortex_m 
 350 005a 0F49     	   LDR R1, =SCB_VTOR
 351 005c 0860     	   STR R0,[R1]
 352              	   
 353              	   /* C++ : Call global constructors */
 354 005e 0F48     	   LDR R0,=__libc_init_array
 355 0060 8047     	   BLX R0
 356              	
 357              	   /* Reset stack pointer before zipping off to user application, Optional */
 358 0062 DFF83CD0 	   LDR SP,=__Xmc4500_stack 
 359 0066 4FF00000 	   MOV R0,#0
 360 006a 4FF00001 	   MOV R1,#0
 361 006e DFF834F0 	   LDR PC, =main
 362 0072 00000000 	   .pool
 362      00000000 
 362      00000000 
 362      00000000 
 362      00000000 
 363              	   .cantunwind
 364              	   .fnend
 366              	/* ======================================================================== */
 367              	/* ========== START OF EXCEPTION HANDLER DEFINITION ======================== */
 368              	
 369              	
 370              	/* Default exception Handlers - Users may override this default functionality by
 371              	   defining handlers of the same name in their C code */
 372              	    .thumb
 373              	    .text
 374              	
 375 0000 FEE7     	     Insert_ExceptionHandler NMI_Handler
 376              	/* ======================================================================== */
 377 0002 FEE7     	     Insert_ExceptionHandler HardFault_Handler
 378              	/* ======================================================================== */
 379 0004 FEE7     	     Insert_ExceptionHandler MemManage_Handler
 380              	/* ======================================================================== */
 381 0006 FEE7     	     Insert_ExceptionHandler BusFault_Handler
 382              	/* ======================================================================== */
 383 0008 FEE7     	     Insert_ExceptionHandler UsageFault_Handler
 384              	/* ======================================================================== */
 385 000a FEE7     	     Insert_ExceptionHandler SVC_Handler
 386              	/* ======================================================================== */
 387 000c FEE7     	     Insert_ExceptionHandler DebugMon_Handler
 388              	/* ======================================================================== */
 389 000e FEE7     	     Insert_ExceptionHandler PendSV_Handler
 390              	/* ======================================================================== */
 391 0010 FEE7     	     Insert_ExceptionHandler SysTick_Handler
 392              	
 393              	/* ============= END OF EXCEPTION HANDLER DEFINITION ======================== */
 394              	
 395              	/* ============= START OF INTERRUPT HANDLER DEFINITION ====================== */
 396              	
 397              	/* IRQ Handlers */
 398 0012 FEE7     	     Insert_ExceptionHandler SCU_0_IRQHandler
 399              	/* ======================================================================== */
 400 0014 FEE7     	     Insert_ExceptionHandler ERU0_0_IRQHandler
 401              	/* ======================================================================== */
 402 0016 FEE7     	     Insert_ExceptionHandler ERU0_1_IRQHandler
 403              	/* ======================================================================== */
 404 0018 FEE7     	     Insert_ExceptionHandler ERU0_2_IRQHandler
 405              	/* ======================================================================== */
 406 001a FEE7     	     Insert_ExceptionHandler ERU0_3_IRQHandler
 407              	/* ======================================================================== */
 408 001c FEE7     	     Insert_ExceptionHandler ERU1_0_IRQHandler
 409              	/* ======================================================================== */
 410 001e FEE7     	     Insert_ExceptionHandler ERU1_1_IRQHandler
 411              	/* ======================================================================== */
 412 0020 FEE7     	     Insert_ExceptionHandler ERU1_2_IRQHandler
 413              	/* ======================================================================== */
 414 0022 FEE7     	     Insert_ExceptionHandler ERU1_3_IRQHandler
 415              	/* ======================================================================== */
 416 0024 FEE7     	     Insert_ExceptionHandler PMU0_0_IRQHandler
 417              	/* ======================================================================== */
 418 0026 FEE7     	     Insert_ExceptionHandler VADC0_C0_0_IRQHandler
 419              	/* ======================================================================== */
 420 0028 FEE7     	     Insert_ExceptionHandler VADC0_C0_1_IRQHandler
 421              	/* ======================================================================== */
 422 002a FEE7     	     Insert_ExceptionHandler VADC0_C0_2_IRQHandler
 423              	/* ======================================================================== */
 424 002c FEE7     	     Insert_ExceptionHandler VADC0_C0_3_IRQHandler
 425              	/* ======================================================================== */
 426 002e FEE7     	     Insert_ExceptionHandler VADC0_G0_0_IRQHandler
 427              	/* ======================================================================== */
 428 0030 FEE7     	     Insert_ExceptionHandler VADC0_G0_1_IRQHandler
 429              	/* ======================================================================== */
 430 0032 FEE7     	     Insert_ExceptionHandler VADC0_G0_2_IRQHandler
 431              	/* ======================================================================== */
 432 0034 FEE7     	     Insert_ExceptionHandler VADC0_G0_3_IRQHandler
 433              	/* ======================================================================== */
 434 0036 FEE7     	     Insert_ExceptionHandler VADC0_G1_0_IRQHandler
 435              	/* ======================================================================== */
 436 0038 FEE7     	     Insert_ExceptionHandler VADC0_G1_1_IRQHandler
 437              	/* ======================================================================== */
 438 003a FEE7     	     Insert_ExceptionHandler VADC0_G1_2_IRQHandler
 439              	/* ======================================================================== */
 440 003c FEE7     	     Insert_ExceptionHandler VADC0_G1_3_IRQHandler
 441              	/* ======================================================================== */
 442 003e FEE7     	     Insert_ExceptionHandler VADC0_G2_0_IRQHandler
 443              	/* ======================================================================== */
 444 0040 FEE7     	     Insert_ExceptionHandler VADC0_G2_1_IRQHandler
 445              	/* ======================================================================== */
 446 0042 FEE7     	     Insert_ExceptionHandler VADC0_G2_2_IRQHandler
 447              	/* ======================================================================== */
 448 0044 FEE7     	     Insert_ExceptionHandler VADC0_G2_3_IRQHandler
 449              	/* ======================================================================== */
 450 0046 FEE7     	     Insert_ExceptionHandler VADC0_G3_0_IRQHandler
 451              	/* ======================================================================== */
 452 0048 FEE7     	     Insert_ExceptionHandler VADC0_G3_1_IRQHandler
 453              	/* ======================================================================== */
 454 004a FEE7     	     Insert_ExceptionHandler VADC0_G3_2_IRQHandler
 455              	/* ======================================================================== */
 456 004c FEE7     	     Insert_ExceptionHandler VADC0_G3_3_IRQHandler
 457              	/* ======================================================================== */
 458 004e FEE7     	     Insert_ExceptionHandler DSD0_0_IRQHandler
 459              	/* ======================================================================== */
 460 0050 FEE7     	     Insert_ExceptionHandler DSD0_1_IRQHandler
 461              	/* ======================================================================== */
 462 0052 FEE7     	     Insert_ExceptionHandler DSD0_2_IRQHandler
 463              	/* ======================================================================== */
 464 0054 FEE7     	     Insert_ExceptionHandler DSD0_3_IRQHandler
 465              	/* ======================================================================== */
 466 0056 FEE7     	     Insert_ExceptionHandler DSD0_4_IRQHandler
 467              	/* ======================================================================== */
 468 0058 FEE7     	     Insert_ExceptionHandler DSD0_5_IRQHandler
 469              	/* ======================================================================== */
 470 005a FEE7     	     Insert_ExceptionHandler DSD0_6_IRQHandler
 471              	/* ======================================================================== */
 472 005c FEE7     	     Insert_ExceptionHandler DSD0_7_IRQHandler
 473              	/* ======================================================================== */
 474 005e FEE7     	     Insert_ExceptionHandler DAC0_0_IRQHandler
 475              	/* ======================================================================== */
 476 0060 FEE7     	     Insert_ExceptionHandler DAC0_1_IRQHandler
 477              	/* ======================================================================== */
 478 0062 FEE7     	     Insert_ExceptionHandler CCU40_0_IRQHandler
 479              	/* ======================================================================== */
 480 0064 FEE7     	     Insert_ExceptionHandler CCU40_1_IRQHandler
 481              	/* ======================================================================== */
 482 0066 FEE7     	     Insert_ExceptionHandler CCU40_2_IRQHandler
 483              	/* ======================================================================== */
 484 0068 FEE7     	     Insert_ExceptionHandler CCU40_3_IRQHandler
 485              	/* ======================================================================== */
 486 006a FEE7     	     Insert_ExceptionHandler CCU41_0_IRQHandler
 487              	/* ======================================================================== */
 488 006c FEE7     	     Insert_ExceptionHandler CCU41_1_IRQHandler
 489              	/* ======================================================================== */
 490 006e FEE7     	     Insert_ExceptionHandler CCU41_2_IRQHandler
 491              	/* ======================================================================== */
 492 0070 FEE7     	     Insert_ExceptionHandler CCU41_3_IRQHandler
 493              	/* ======================================================================== */
 494 0072 FEE7     	     Insert_ExceptionHandler CCU42_0_IRQHandler
 495              	/* ======================================================================== */
 496 0074 FEE7     	     Insert_ExceptionHandler CCU42_1_IRQHandler
 497              	/* ======================================================================== */
 498 0076 FEE7     	     Insert_ExceptionHandler CCU42_2_IRQHandler
 499              	/* ======================================================================== */
 500 0078 FEE7     	     Insert_ExceptionHandler CCU42_3_IRQHandler
 501              	/* ======================================================================== */
 502 007a FEE7     	     Insert_ExceptionHandler CCU43_0_IRQHandler
 503              	/* ======================================================================== */
 504 007c FEE7     	     Insert_ExceptionHandler CCU43_1_IRQHandler
 505              	/* ======================================================================== */
 506 007e FEE7     	     Insert_ExceptionHandler CCU43_2_IRQHandler
 507              	/* ======================================================================== */
 508 0080 FEE7     	     Insert_ExceptionHandler CCU43_3_IRQHandler
 509              	/* ======================================================================== */
 510 0082 FEE7     	     Insert_ExceptionHandler CCU80_0_IRQHandler
 511              	/* ======================================================================== */
 512 0084 FEE7     	     Insert_ExceptionHandler CCU80_1_IRQHandler
 513              	/* ======================================================================== */
 514 0086 FEE7     	     Insert_ExceptionHandler CCU80_2_IRQHandler
 515              	/* ======================================================================== */
 516 0088 FEE7     	     Insert_ExceptionHandler CCU80_3_IRQHandler
 517              	/* ======================================================================== */
 518 008a FEE7     	     Insert_ExceptionHandler CCU81_0_IRQHandler
 519              	/* ======================================================================== */
 520 008c FEE7     	     Insert_ExceptionHandler CCU81_1_IRQHandler
 521              	/* ======================================================================== */
 522 008e FEE7     	     Insert_ExceptionHandler CCU81_2_IRQHandler
 523              	/* ======================================================================== */
 524 0090 FEE7     	     Insert_ExceptionHandler CCU81_3_IRQHandler
 525              	/* ======================================================================== */
 526 0092 FEE7     	     Insert_ExceptionHandler POSIF0_0_IRQHandler
 527              	/* ======================================================================== */
 528 0094 FEE7     	     Insert_ExceptionHandler POSIF0_1_IRQHandler
 529              	/* ======================================================================== */
 530 0096 FEE7     	     Insert_ExceptionHandler POSIF1_0_IRQHandler
 531              	/* ======================================================================== */
 532 0098 FEE7     	     Insert_ExceptionHandler POSIF1_1_IRQHandler
 533              	/* ======================================================================== */
 534 009a FEE7     	     Insert_ExceptionHandler CAN0_0_IRQHandler
 535              	/* ======================================================================== */
 536 009c FEE7     	     Insert_ExceptionHandler CAN0_1_IRQHandler
 537              	/* ======================================================================== */
 538 009e FEE7     	     Insert_ExceptionHandler CAN0_2_IRQHandler
 539              	/* ======================================================================== */
 540 00a0 FEE7     	     Insert_ExceptionHandler CAN0_3_IRQHandler
 541              	/* ======================================================================== */
 542 00a2 FEE7     	     Insert_ExceptionHandler CAN0_4_IRQHandler
 543              	/* ======================================================================== */
 544 00a4 FEE7     	     Insert_ExceptionHandler CAN0_5_IRQHandler
 545              	/* ======================================================================== */
 546 00a6 FEE7     	     Insert_ExceptionHandler CAN0_6_IRQHandler
 547              	/* ======================================================================== */
 548 00a8 FEE7     	     Insert_ExceptionHandler CAN0_7_IRQHandler
 549              	/* ======================================================================== */
 550 00aa FEE7     	     Insert_ExceptionHandler USIC0_0_IRQHandler
 551              	/* ======================================================================== */
 552 00ac FEE7     	     Insert_ExceptionHandler USIC0_1_IRQHandler
 553              	/* ======================================================================== */
 554 00ae FEE7     	     Insert_ExceptionHandler USIC0_2_IRQHandler
 555              	/* ======================================================================== */
 556 00b0 FEE7     	     Insert_ExceptionHandler USIC0_3_IRQHandler
 557              	/* ======================================================================== */
 558 00b2 FEE7     	     Insert_ExceptionHandler USIC0_4_IRQHandler
 559              	/* ======================================================================== */
 560 00b4 FEE7     	     Insert_ExceptionHandler USIC0_5_IRQHandler
 561              	/* ======================================================================== */
 562 00b6 FEE7     	     Insert_ExceptionHandler USIC1_0_IRQHandler
 563              	/* ======================================================================== */
 564 00b8 FEE7     	     Insert_ExceptionHandler USIC1_1_IRQHandler
 565              	/* ======================================================================== */
 566 00ba FEE7     	     Insert_ExceptionHandler USIC1_2_IRQHandler
 567              	/* ======================================================================== */
 568 00bc FEE7     	     Insert_ExceptionHandler USIC1_3_IRQHandler
 569              	/* ======================================================================== */
 570 00be FEE7     	     Insert_ExceptionHandler USIC1_4_IRQHandler
 571              	/* ======================================================================== */
 572 00c0 FEE7     	     Insert_ExceptionHandler USIC1_5_IRQHandler
 573              	/* ======================================================================== */
 574 00c2 FEE7     	     Insert_ExceptionHandler USIC2_0_IRQHandler
 575              	/* ======================================================================== */
 576 00c4 FEE7     	     Insert_ExceptionHandler USIC2_1_IRQHandler
 577              	/* ======================================================================== */
 578 00c6 FEE7     	     Insert_ExceptionHandler USIC2_2_IRQHandler
 579              	/* ======================================================================== */
 580 00c8 FEE7     	     Insert_ExceptionHandler USIC2_3_IRQHandler
 581              	/* ======================================================================== */
 582 00ca FEE7     	     Insert_ExceptionHandler USIC2_4_IRQHandler
 583              	/* ======================================================================== */
 584 00cc FEE7     	     Insert_ExceptionHandler USIC2_5_IRQHandler
 585              	/* ======================================================================== */
 586 00ce FEE7     	     Insert_ExceptionHandler LEDTS0_0_IRQHandler
 587              	/* ======================================================================== */
 588 00d0 FEE7     	     Insert_ExceptionHandler FCE0_0_IRQHandler
 589              	/* ======================================================================== */
 590 00d2 FEE7     	     Insert_ExceptionHandler GPDMA0_0_IRQHandler
 591              	/* ======================================================================== */
 592 00d4 FEE7     	     Insert_ExceptionHandler SDMMC0_0_IRQHandler
 593              	/* ======================================================================== */
 594 00d6 FEE7     	     Insert_ExceptionHandler USB0_0_IRQHandler
 595              	/* ======================================================================== */
 596 00d8 FEE7     	     Insert_ExceptionHandler ETH0_0_IRQHandler
 597              	/* ======================================================================== */
 598 00da FEE7     	     Insert_ExceptionHandler GPDMA1_0_IRQHandler
 599              	/* ======================================================================== */
 600              	/* ======================================================================== */
 601              	
 602              	/* ============= END OF INTERRUPT HANDLER DEFINITION ====================== */
 603              	
 604              	/* ======== Decision function queried by CMSIS startup for PLL setup ====== */
 605              	/* In the absence of DAVE code engine, CMSIS SystemInit() must perform clock 
 606              	   tree setup. 
 607              	   
 608              	   This decision routine defined here will always return TRUE.
 609              	   
 610              	   When overridden by a definition defined in DAVE code engine, this routine
 611              	   returns FALSE indicating that the code engine has performed the clock setup
 612              	*/   
 613              	    .weak   AllowPLLInitByStartup
 615              	AllowPLLInitByStartup:
 616 00dc 4FF00100 	    MOV R0,#1
 617 00e0 7047     	    BX LR
 619              	
 620              	/* ======  Definition of the default weak SystemInit_DAVE3 function =========
 621              	If DAVE3 requires an extended SystemInit it will create its own version of
 622              	SystemInit_DAVE3 which overrides this weak definition. Example includes
 623              	setting up of external memory interfaces.
 624              	*/
 625              	     .section ".XmcStartup"
 626              	     .weak SystemInit_DAVE3
 628              	SystemInit_DAVE3:
 629 0000 00BF     	     NOP
 630 0002 7047     	     BX LR
 632              	/* ======================================================================== */
 633              	/* ======================================================================== */
 634              	
 635              	/* ======================== Data references =============================== */
 636              	.equ  SCB_VTOR,       0xE000ED08
 637              	.equ  PREF_PCON,      0x58004000
 638              	.equ  SCU_GCU_PEEN,   0x5000413C
 639              	.equ  SCU_GCU_PEFLAG, 0x50004150
 640              	.equ  FLASH_FCON,     0x58002014
 641              	
 642              	    .end
DEFINED SYMBOLS
../Startup/startup_XMC4500.s:110    .Xmc4500.reset:00000000 __Xmc4500_interrupt_vector_cortex_m
../Startup/startup_XMC4500.s:254    .Xmc4500.reset:00000200 __Xmc4500_reset_cortex_m
../Startup/startup_XMC4500.s:375    .text:00000000 NMI_Handler
../Startup/startup_XMC4500.s:377    .text:00000002 HardFault_Handler
../Startup/startup_XMC4500.s:379    .text:00000004 MemManage_Handler
../Startup/startup_XMC4500.s:381    .text:00000006 BusFault_Handler
../Startup/startup_XMC4500.s:383    .text:00000008 UsageFault_Handler
../Startup/startup_XMC4500.s:385    .text:0000000a SVC_Handler
../Startup/startup_XMC4500.s:387    .text:0000000c DebugMon_Handler
../Startup/startup_XMC4500.s:389    .text:0000000e PendSV_Handler
../Startup/startup_XMC4500.s:391    .text:00000010 SysTick_Handler
../Startup/startup_XMC4500.s:398    .text:00000012 SCU_0_IRQHandler
../Startup/startup_XMC4500.s:400    .text:00000014 ERU0_0_IRQHandler
../Startup/startup_XMC4500.s:402    .text:00000016 ERU0_1_IRQHandler
../Startup/startup_XMC4500.s:404    .text:00000018 ERU0_2_IRQHandler
../Startup/startup_XMC4500.s:406    .text:0000001a ERU0_3_IRQHandler
../Startup/startup_XMC4500.s:408    .text:0000001c ERU1_0_IRQHandler
../Startup/startup_XMC4500.s:410    .text:0000001e ERU1_1_IRQHandler
../Startup/startup_XMC4500.s:412    .text:00000020 ERU1_2_IRQHandler
../Startup/startup_XMC4500.s:414    .text:00000022 ERU1_3_IRQHandler
../Startup/startup_XMC4500.s:416    .text:00000024 PMU0_0_IRQHandler
../Startup/startup_XMC4500.s:418    .text:00000026 VADC0_C0_0_IRQHandler
../Startup/startup_XMC4500.s:420    .text:00000028 VADC0_C0_1_IRQHandler
../Startup/startup_XMC4500.s:422    .text:0000002a VADC0_C0_2_IRQHandler
../Startup/startup_XMC4500.s:424    .text:0000002c VADC0_C0_3_IRQHandler
../Startup/startup_XMC4500.s:426    .text:0000002e VADC0_G0_0_IRQHandler
../Startup/startup_XMC4500.s:428    .text:00000030 VADC0_G0_1_IRQHandler
../Startup/startup_XMC4500.s:430    .text:00000032 VADC0_G0_2_IRQHandler
../Startup/startup_XMC4500.s:432    .text:00000034 VADC0_G0_3_IRQHandler
../Startup/startup_XMC4500.s:434    .text:00000036 VADC0_G1_0_IRQHandler
../Startup/startup_XMC4500.s:436    .text:00000038 VADC0_G1_1_IRQHandler
../Startup/startup_XMC4500.s:438    .text:0000003a VADC0_G1_2_IRQHandler
../Startup/startup_XMC4500.s:440    .text:0000003c VADC0_G1_3_IRQHandler
../Startup/startup_XMC4500.s:442    .text:0000003e VADC0_G2_0_IRQHandler
../Startup/startup_XMC4500.s:444    .text:00000040 VADC0_G2_1_IRQHandler
../Startup/startup_XMC4500.s:446    .text:00000042 VADC0_G2_2_IRQHandler
../Startup/startup_XMC4500.s:448    .text:00000044 VADC0_G2_3_IRQHandler
../Startup/startup_XMC4500.s:450    .text:00000046 VADC0_G3_0_IRQHandler
../Startup/startup_XMC4500.s:452    .text:00000048 VADC0_G3_1_IRQHandler
../Startup/startup_XMC4500.s:454    .text:0000004a VADC0_G3_2_IRQHandler
../Startup/startup_XMC4500.s:456    .text:0000004c VADC0_G3_3_IRQHandler
../Startup/startup_XMC4500.s:458    .text:0000004e DSD0_0_IRQHandler
../Startup/startup_XMC4500.s:460    .text:00000050 DSD0_1_IRQHandler
../Startup/startup_XMC4500.s:462    .text:00000052 DSD0_2_IRQHandler
../Startup/startup_XMC4500.s:464    .text:00000054 DSD0_3_IRQHandler
../Startup/startup_XMC4500.s:466    .text:00000056 DSD0_4_IRQHandler
../Startup/startup_XMC4500.s:468    .text:00000058 DSD0_5_IRQHandler
../Startup/startup_XMC4500.s:470    .text:0000005a DSD0_6_IRQHandler
../Startup/startup_XMC4500.s:472    .text:0000005c DSD0_7_IRQHandler
../Startup/startup_XMC4500.s:474    .text:0000005e DAC0_0_IRQHandler
../Startup/startup_XMC4500.s:476    .text:00000060 DAC0_1_IRQHandler
../Startup/startup_XMC4500.s:478    .text:00000062 CCU40_0_IRQHandler
../Startup/startup_XMC4500.s:480    .text:00000064 CCU40_1_IRQHandler
../Startup/startup_XMC4500.s:482    .text:00000066 CCU40_2_IRQHandler
../Startup/startup_XMC4500.s:484    .text:00000068 CCU40_3_IRQHandler
../Startup/startup_XMC4500.s:486    .text:0000006a CCU41_0_IRQHandler
../Startup/startup_XMC4500.s:488    .text:0000006c CCU41_1_IRQHandler
../Startup/startup_XMC4500.s:490    .text:0000006e CCU41_2_IRQHandler
../Startup/startup_XMC4500.s:492    .text:00000070 CCU41_3_IRQHandler
../Startup/startup_XMC4500.s:494    .text:00000072 CCU42_0_IRQHandler
../Startup/startup_XMC4500.s:496    .text:00000074 CCU42_1_IRQHandler
../Startup/startup_XMC4500.s:498    .text:00000076 CCU42_2_IRQHandler
../Startup/startup_XMC4500.s:500    .text:00000078 CCU42_3_IRQHandler
../Startup/startup_XMC4500.s:502    .text:0000007a CCU43_0_IRQHandler
../Startup/startup_XMC4500.s:504    .text:0000007c CCU43_1_IRQHandler
../Startup/startup_XMC4500.s:506    .text:0000007e CCU43_2_IRQHandler
../Startup/startup_XMC4500.s:508    .text:00000080 CCU43_3_IRQHandler
../Startup/startup_XMC4500.s:510    .text:00000082 CCU80_0_IRQHandler
../Startup/startup_XMC4500.s:512    .text:00000084 CCU80_1_IRQHandler
../Startup/startup_XMC4500.s:514    .text:00000086 CCU80_2_IRQHandler
../Startup/startup_XMC4500.s:516    .text:00000088 CCU80_3_IRQHandler
../Startup/startup_XMC4500.s:518    .text:0000008a CCU81_0_IRQHandler
../Startup/startup_XMC4500.s:520    .text:0000008c CCU81_1_IRQHandler
../Startup/startup_XMC4500.s:522    .text:0000008e CCU81_2_IRQHandler
../Startup/startup_XMC4500.s:524    .text:00000090 CCU81_3_IRQHandler
../Startup/startup_XMC4500.s:526    .text:00000092 POSIF0_0_IRQHandler
../Startup/startup_XMC4500.s:528    .text:00000094 POSIF0_1_IRQHandler
../Startup/startup_XMC4500.s:530    .text:00000096 POSIF1_0_IRQHandler
../Startup/startup_XMC4500.s:532    .text:00000098 POSIF1_1_IRQHandler
../Startup/startup_XMC4500.s:534    .text:0000009a CAN0_0_IRQHandler
../Startup/startup_XMC4500.s:536    .text:0000009c CAN0_1_IRQHandler
../Startup/startup_XMC4500.s:538    .text:0000009e CAN0_2_IRQHandler
../Startup/startup_XMC4500.s:540    .text:000000a0 CAN0_3_IRQHandler
../Startup/startup_XMC4500.s:542    .text:000000a2 CAN0_4_IRQHandler
../Startup/startup_XMC4500.s:544    .text:000000a4 CAN0_5_IRQHandler
../Startup/startup_XMC4500.s:546    .text:000000a6 CAN0_6_IRQHandler
../Startup/startup_XMC4500.s:548    .text:000000a8 CAN0_7_IRQHandler
../Startup/startup_XMC4500.s:550    .text:000000aa USIC0_0_IRQHandler
../Startup/startup_XMC4500.s:552    .text:000000ac USIC0_1_IRQHandler
../Startup/startup_XMC4500.s:554    .text:000000ae USIC0_2_IRQHandler
../Startup/startup_XMC4500.s:556    .text:000000b0 USIC0_3_IRQHandler
../Startup/startup_XMC4500.s:558    .text:000000b2 USIC0_4_IRQHandler
../Startup/startup_XMC4500.s:560    .text:000000b4 USIC0_5_IRQHandler
../Startup/startup_XMC4500.s:562    .text:000000b6 USIC1_0_IRQHandler
../Startup/startup_XMC4500.s:564    .text:000000b8 USIC1_1_IRQHandler
../Startup/startup_XMC4500.s:566    .text:000000ba USIC1_2_IRQHandler
../Startup/startup_XMC4500.s:568    .text:000000bc USIC1_3_IRQHandler
../Startup/startup_XMC4500.s:570    .text:000000be USIC1_4_IRQHandler
../Startup/startup_XMC4500.s:572    .text:000000c0 USIC1_5_IRQHandler
../Startup/startup_XMC4500.s:574    .text:000000c2 USIC2_0_IRQHandler
../Startup/startup_XMC4500.s:576    .text:000000c4 USIC2_1_IRQHandler
../Startup/startup_XMC4500.s:578    .text:000000c6 USIC2_2_IRQHandler
../Startup/startup_XMC4500.s:580    .text:000000c8 USIC2_3_IRQHandler
../Startup/startup_XMC4500.s:582    .text:000000ca USIC2_4_IRQHandler
../Startup/startup_XMC4500.s:584    .text:000000cc USIC2_5_IRQHandler
../Startup/startup_XMC4500.s:586    .text:000000ce LEDTS0_0_IRQHandler
../Startup/startup_XMC4500.s:588    .text:000000d0 FCE0_0_IRQHandler
../Startup/startup_XMC4500.s:590    .text:000000d2 GPDMA0_0_IRQHandler
../Startup/startup_XMC4500.s:592    .text:000000d4 SDMMC0_0_IRQHandler
../Startup/startup_XMC4500.s:594    .text:000000d6 USB0_0_IRQHandler
../Startup/startup_XMC4500.s:596    .text:000000d8 ETH0_0_IRQHandler
../Startup/startup_XMC4500.s:598    .text:000000da GPDMA1_0_IRQHandler
                   .Xmc4500.reset:00000000 $d
../Startup/startup_XMC4500.s:259    .Xmc4500.reset:00000200 $t
../Startup/startup_XMC4500.s:628    .XmcStartup:00000000 SystemInit_DAVE3
../Startup/startup_XMC4500.s:309    .Xmc4500.postreset:00000022 __Xmc4500_Program_Loader
../Startup/startup_XMC4500.s:274    .Xmc4500.reset:00000210 $d
         .ARM.exidx.Xmc4500.reset:00000000 $d
../Startup/startup_XMC4500.s:282    .Xmc4500.postreset:00000000 __COPY_FLASH2RAM
../Startup/startup_XMC4500.s:283    .Xmc4500.postreset:00000000 .fnstart
../Startup/startup_XMC4500.s:286    .Xmc4500.postreset:00000000 $t
../Startup/startup_XMC4500.s:306    .Xmc4500.postreset:00000020 SKIPCOPY
../Startup/startup_XMC4500.s:289    .Xmc4500.postreset:00000006 STARTCOPY
../Startup/startup_XMC4500.s:297    .Xmc4500.postreset:0000000a COPYLOOP
../Startup/startup_XMC4500.s:346    .Xmc4500.postreset:00000058 SKIPCLEAR
../Startup/startup_XMC4500.s:335    .Xmc4500.postreset:00000040 STARTCLEAR
../Startup/startup_XMC4500.s:339    .Xmc4500.postreset:00000048 CLEARLOOP
                            *ABS*:e000ed08 SCB_VTOR
../Startup/startup_XMC4500.s:362    .Xmc4500.postreset:00000072 $d
     .ARM.exidx.Xmc4500.postreset:00000000 $d
../Startup/startup_XMC4500.s:375    .text:00000000 $t
../Startup/startup_XMC4500.s:615    .text:000000dc AllowPLLInitByStartup
../Startup/startup_XMC4500.s:629    .XmcStartup:00000000 $t
../Startup/startup_XMC4500.s:637    *ABS*:58004000 PREF_PCON
../Startup/startup_XMC4500.s:638    *ABS*:5000413c SCU_GCU_PEEN
../Startup/startup_XMC4500.s:639    *ABS*:50004150 SCU_GCU_PEFLAG
../Startup/startup_XMC4500.s:640    *ABS*:58002014 FLASH_FCON
                   .debug_aranges:0000000c $d

UNDEFINED SYMBOLS
__Xmc4500_stack
SystemInit
eROData
__Xmc4500_sData
__Xmc4500_Data_Size
__ram_code_load
__ram_code_start
__ram_code_size
__Xmc4500_sBSS
__Xmc4500_BSS_Size
__libc_init_array
main
