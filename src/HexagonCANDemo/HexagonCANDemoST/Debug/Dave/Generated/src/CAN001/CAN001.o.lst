   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"CAN001.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CAN001_lAllocateMOtoNodeList,"ax",%progbits
  20              		.align	2
  21              		.thumb
  22              		.thumb_func
  24              	CAN001_lAllocateMOtoNodeList:
  25              	.LFB112:
  26              		.file 1 "../Dave/Generated/src/CAN001/CAN001.c"
   1:../Dave/Generated/src/CAN001/CAN001.c **** /*******************************************************************************
   2:../Dave/Generated/src/CAN001/CAN001.c **** **  DAVE App Name : CAN001       App Version: 1.0.12               
   3:../Dave/Generated/src/CAN001/CAN001.c **** **  This file is generated by DAVE, User modification to this file will be    **
   4:../Dave/Generated/src/CAN001/CAN001.c **** **  overwritten at the next code generation.                                  **
   5:../Dave/Generated/src/CAN001/CAN001.c **** *******************************************************************************/
   6:../Dave/Generated/src/CAN001/CAN001.c **** 
   7:../Dave/Generated/src/CAN001/CAN001.c **** /*CODE_BLOCK_BEGIN[CAN001.c]*/
   8:../Dave/Generated/src/CAN001/CAN001.c **** /*******************************************************************************
   9:../Dave/Generated/src/CAN001/CAN001.c ****  Copyright (c) 2014, Infineon Technologies AG                                 **
  10:../Dave/Generated/src/CAN001/CAN001.c ****  All rights reserved.                                                         **
  11:../Dave/Generated/src/CAN001/CAN001.c ****                                                                               **
  12:../Dave/Generated/src/CAN001/CAN001.c ****  Redistribution and use in source and binary forms, with or without           **
  13:../Dave/Generated/src/CAN001/CAN001.c ****  modification,are permitted provided that the following conditions are met:   **
  14:../Dave/Generated/src/CAN001/CAN001.c ****                                                                               **
  15:../Dave/Generated/src/CAN001/CAN001.c ****  *Redistributions of source code must retain the above copyright notice,      **
  16:../Dave/Generated/src/CAN001/CAN001.c ****  this list of conditions and the following disclaimer.                        **
  17:../Dave/Generated/src/CAN001/CAN001.c ****  *Redistributions in binary form must reproduce the above copyright notice,   **
  18:../Dave/Generated/src/CAN001/CAN001.c ****  this list of conditions and the following disclaimer in the documentation    **
  19:../Dave/Generated/src/CAN001/CAN001.c ****  and/or other materials provided with the distribution.                       **
  20:../Dave/Generated/src/CAN001/CAN001.c ****  *Neither the name of the copyright holders nor the names of its contributors **
  21:../Dave/Generated/src/CAN001/CAN001.c ****  may be used to endorse or promote products derived from this software without** 
  22:../Dave/Generated/src/CAN001/CAN001.c ****  specific prior written permission.                                           **
  23:../Dave/Generated/src/CAN001/CAN001.c ****                                                                               **
  24:../Dave/Generated/src/CAN001/CAN001.c ****  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"  **
  25:../Dave/Generated/src/CAN001/CAN001.c ****  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE    **
  26:../Dave/Generated/src/CAN001/CAN001.c ****  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE   **
  27:../Dave/Generated/src/CAN001/CAN001.c ****  ARE  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE   **
  28:../Dave/Generated/src/CAN001/CAN001.c ****  LIABLE  FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR         **
  29:../Dave/Generated/src/CAN001/CAN001.c ****  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF         **
  30:../Dave/Generated/src/CAN001/CAN001.c ****  SUBSTITUTE GOODS OR  SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS    **
  31:../Dave/Generated/src/CAN001/CAN001.c ****  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN      **
  32:../Dave/Generated/src/CAN001/CAN001.c ****  CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)       **
  33:../Dave/Generated/src/CAN001/CAN001.c ****  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE   **
  34:../Dave/Generated/src/CAN001/CAN001.c ****  POSSIBILITY OF SUCH DAMAGE.                                                  **
  35:../Dave/Generated/src/CAN001/CAN001.c ****                                                                               **
  36:../Dave/Generated/src/CAN001/CAN001.c ****  To improve the quality of the software, users are encouraged to share        **
  37:../Dave/Generated/src/CAN001/CAN001.c ****  modifications, enhancements or bug fixes with Infineon Technologies AG       **
  38:../Dave/Generated/src/CAN001/CAN001.c ****  dave@infineon.com).                                                          **
  39:../Dave/Generated/src/CAN001/CAN001.c ****                                                                               **
  40:../Dave/Generated/src/CAN001/CAN001.c **** ********************************************************************************
  41:../Dave/Generated/src/CAN001/CAN001.c **** **                                                                            **
  42:../Dave/Generated/src/CAN001/CAN001.c **** **                                                                            **
  43:../Dave/Generated/src/CAN001/CAN001.c **** ** PLATFORM : Infineon XMC4000 Series   			                          **
  44:../Dave/Generated/src/CAN001/CAN001.c **** **                                                                            **
  45:../Dave/Generated/src/CAN001/CAN001.c **** ** COMPILER : Compiler Independent                                            **
  46:../Dave/Generated/src/CAN001/CAN001.c **** **                                                                            **
  47:../Dave/Generated/src/CAN001/CAN001.c **** ** AUTHOR   : App Developer                                                   **
  48:../Dave/Generated/src/CAN001/CAN001.c **** **                                                                            **
  49:../Dave/Generated/src/CAN001/CAN001.c **** ** MAY BE CHANGED BY USER [yes/no]: Yes                                       **
  50:../Dave/Generated/src/CAN001/CAN001.c **** **                                                                            **
  51:../Dave/Generated/src/CAN001/CAN001.c **** ** MODIFICATION DATE : Jan 20, 2014                                           **
  52:../Dave/Generated/src/CAN001/CAN001.c **** **                                                                            **
  53:../Dave/Generated/src/CAN001/CAN001.c **** *******************************************************************************/
  54:../Dave/Generated/src/CAN001/CAN001.c **** /*******************************************************************************
  55:../Dave/Generated/src/CAN001/CAN001.c **** **                      Author(s) Identity                                    **
  56:../Dave/Generated/src/CAN001/CAN001.c **** ********************************************************************************
  57:../Dave/Generated/src/CAN001/CAN001.c **** **                                                                            **
  58:../Dave/Generated/src/CAN001/CAN001.c **** ** Initials     Name                                                          **
  59:../Dave/Generated/src/CAN001/CAN001.c **** ** ---------------------------------------------------------------------------**
  60:../Dave/Generated/src/CAN001/CAN001.c **** ** NPJ        App Developer                                                   **
  61:../Dave/Generated/src/CAN001/CAN001.c **** **                                                                            **
  62:../Dave/Generated/src/CAN001/CAN001.c **** *******************************************************************************/
  63:../Dave/Generated/src/CAN001/CAN001.c **** /*
  64:../Dave/Generated/src/CAN001/CAN001.c **** * Version History : 
  65:../Dave/Generated/src/CAN001/CAN001.c **** * 12 Dec 2012	 v1.0.2	  1. Initial revision		  								 
  66:../Dave/Generated/src/CAN001/CAN001.c **** *                                                                          
  67:../Dave/Generated/src/CAN001/CAN001.c **** * 30 May 2013	 v1.0.4	  1. MISRA fixes.
  68:../Dave/Generated/src/CAN001/CAN001.c **** *                         2. Fixes concerned with the Rx pin(14.3) manual configuration issue. 
  69:../Dave/Generated/src/CAN001/CAN001.c **** *   
  70:../Dave/Generated/src/CAN001/CAN001.c **** * 21 Jun 2013    v1.0.6   1. Reset of INIT & CCE bit has been removed as it shall be handled in   
  71:../Dave/Generated/src/CAN001/CAN001.c **** *                            MULTIPLEXER.c file of DaveSupport app.
  72:../Dave/Generated/src/CAN001/CAN001.c **** *                         2. Removed the code concerned with PORTx_PDRx & PORTx_IOCRx register modi
  73:../Dave/Generated/src/CAN001/CAN001.c **** * 22 Aug 2013    v1.0.8   1. Fixes w.r.t incorrect code generation of the CAN NodeId due to multipl
  74:../Dave/Generated/src/CAN001/CAN001.c **** *                            reference created by the data model to a proxy register
  75:../Dave/Generated/src/CAN001/CAN001.c **** * 20 Jan 2014    v1.0.10   1. C++ support added.
  76:../Dave/Generated/src/CAN001/CAN001.c **** *                          2. Delay in app instantiation is resolved.
  77:../Dave/Generated/src/CAN001/CAN001.c **** *                          3. DBG002 App changes are taken care
  78:../Dave/Generated/src/CAN001/CAN001.c **** */
  79:../Dave/Generated/src/CAN001/CAN001.c **** /**
  80:../Dave/Generated/src/CAN001/CAN001.c ****  * @file   CAN001.c
  81:../Dave/Generated/src/CAN001/CAN001.c ****  * 
  82:../Dave/Generated/src/CAN001/CAN001.c ****  * @App Version CAN001 <1.0.12>
  83:../Dave/Generated/src/CAN001/CAN001.c ****  *
  84:../Dave/Generated/src/CAN001/CAN001.c ****  * @brief  CAN_Basic_CAN001 App provides non reentrant API's to configure the 
  85:../Dave/Generated/src/CAN001/CAN001.c ****  *         CAN Nodes which can be used in a non RTOS environment. It provides 
  86:../Dave/Generated/src/CAN001/CAN001.c ****  *         simple APIs to Configure CAN Nodes and to Send /Receive CAN Message 
  87:../Dave/Generated/src/CAN001/CAN001.c ****  *         objects.
  88:../Dave/Generated/src/CAN001/CAN001.c ****  *
  89:../Dave/Generated/src/CAN001/CAN001.c ****  */
  90:../Dave/Generated/src/CAN001/CAN001.c **** /*******************************************************************************
  91:../Dave/Generated/src/CAN001/CAN001.c ****  ** INCLUDE FILES                                                             **
  92:../Dave/Generated/src/CAN001/CAN001.c ****  ******************************************************************************/
  93:../Dave/Generated/src/CAN001/CAN001.c **** 
  94:../Dave/Generated/src/CAN001/CAN001.c **** /** Inclusion of header file */
  95:../Dave/Generated/src/CAN001/CAN001.c **** #include <DAVE3.h>
  96:../Dave/Generated/src/CAN001/CAN001.c **** 
  97:../Dave/Generated/src/CAN001/CAN001.c ****   
  98:../Dave/Generated/src/CAN001/CAN001.c **** /*****************************************************************************
  99:../Dave/Generated/src/CAN001/CAN001.c ****               DUMMY DEFINTIONS OF DEBUG LOG MACROS
 100:../Dave/Generated/src/CAN001/CAN001.c **** *****************************************************************************/
 101:../Dave/Generated/src/CAN001/CAN001.c **** /*****************************************************************************
 102:../Dave/Generated/src/CAN001/CAN001.c ****               DUMMY DEFINTIONS OF DEBUG LOG MACROS
 103:../Dave/Generated/src/CAN001/CAN001.c **** *****************************************************************************/
 104:../Dave/Generated/src/CAN001/CAN001.c **** /*These definitions are included here to avoid compilation errors,
 105:../Dave/Generated/src/CAN001/CAN001.c ****  since the DBG002 app is not part of the project. All the macros are defined
 106:../Dave/Generated/src/CAN001/CAN001.c ****  as empty*/ 
 107:../Dave/Generated/src/CAN001/CAN001.c **** #ifndef _DBG002_H_
 108:../Dave/Generated/src/CAN001/CAN001.c **** 
 109:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_MESSAGEID_LITERAL
 110:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_RegisterCallBack(A,B,C)
 111:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_I(e) 
 112:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_IG(e,g) 
 113:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_IH(e,h) 
 114:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_IP(e,p) 
 115:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_IGH(e,g,h) 
 116:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_IGP(e,g,p) 
 117:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_IHP(e,h,p) 
 118:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_IGHP(e,g,h,p) 
 119:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_N(e) 
 120:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_NG(e,g) 
 121:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_NH(e,h) 
 122:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_NP(e,p) 
 123:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_NGH(e,g,h) 
 124:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_NGP(e,g,p) 
 125:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_NHP(e,h,p) 
 126:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_NGHP(e,g,h,p) 
 127:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_ID(e) 
 128:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_IS(e) 
 129:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_ISG(e,g) 
 130:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_SAFETY_CRITICAL(groupid,messageid,length,value)
 131:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_CRITICAL(groupid,messageid,length,value)
 132:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_ERROR(groupid,messageid,length,value)
 133:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_WARNING(groupid,messageid,length,value)
 134:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_INFO(groupid,messageid,length,value)
 135:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_TRACE(groupid,messageid,length,value)
 136:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_FUNCTION_ENTRY(GID, Status) 
 137:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_FUNCTION_EXIT(GID, Status) 
 138:../Dave/Generated/src/CAN001/CAN001.c **** 
 139:../Dave/Generated/src/CAN001/CAN001.c **** #endif/* End of defintions of dummy Debug Log macros*/                  
 140:../Dave/Generated/src/CAN001/CAN001.c **** 
 141:../Dave/Generated/src/CAN001/CAN001.c **** 
 142:../Dave/Generated/src/CAN001/CAN001.c **** /*******************************************************************************
 143:../Dave/Generated/src/CAN001/CAN001.c **** **                      Private Macro Definitions                             **
 144:../Dave/Generated/src/CAN001/CAN001.c **** *******************************************************************************/
 145:../Dave/Generated/src/CAN001/CAN001.c **** #define APP_GID DBG002_GID_CAN001
 146:../Dave/Generated/src/CAN001/CAN001.c **** 
 147:../Dave/Generated/src/CAN001/CAN001.c **** /* message objects status mask */
 148:../Dave/Generated/src/CAN001/CAN001.c **** #define CAN001_CLEAR_MO_STATUS_MASK    (0x0000001BU)
 149:../Dave/Generated/src/CAN001/CAN001.c **** /* Node Status mask */
 150:../Dave/Generated/src/CAN001/CAN001.c **** #define CAN001_CLEAR_NODE_STATUS_MASK  (0x000003E0U)
 151:../Dave/Generated/src/CAN001/CAN001.c **** /* Macro to Enable */
 152:../Dave/Generated/src/CAN001/CAN001.c **** #define CAN001_LIST_BEGIN_BITMASK (0x000000FFU)
 153:../Dave/Generated/src/CAN001/CAN001.c **** /* Panel command for dynamic MO allocation */
 154:../Dave/Generated/src/CAN001/CAN001.c **** #define CAN001_PANCMD_STATIC_MO_ALLOC (0x00000002U)
 155:../Dave/Generated/src/CAN001/CAN001.c **** /* Panel command for MO deallocation */
 156:../Dave/Generated/src/CAN001/CAN001.c **** #define CAN001_PANCMD_DYN_MO_DEALLOC (0x00000004U)
 157:../Dave/Generated/src/CAN001/CAN001.c **** 
 158:../Dave/Generated/src/CAN001/CAN001.c **** 
 159:../Dave/Generated/src/CAN001/CAN001.c **** /*******************************************************************************
 160:../Dave/Generated/src/CAN001/CAN001.c **** **                      Private Type Definitions                              **
 161:../Dave/Generated/src/CAN001/CAN001.c **** *******************************************************************************/
 162:../Dave/Generated/src/CAN001/CAN001.c **** 
 163:../Dave/Generated/src/CAN001/CAN001.c **** 
 164:../Dave/Generated/src/CAN001/CAN001.c **** /*******************************************************************************
 165:../Dave/Generated/src/CAN001/CAN001.c **** **                 Private Function Declarations:
 166:../Dave/Generated/src/CAN001/CAN001.c **** *******************************************************************************/
 167:../Dave/Generated/src/CAN001/CAN001.c **** /**
 168:../Dave/Generated/src/CAN001/CAN001.c ****  * @ingroup CAN001_privatefunc
 169:../Dave/Generated/src/CAN001/CAN001.c ****  * @{
 170:../Dave/Generated/src/CAN001/CAN001.c ****  */
 171:../Dave/Generated/src/CAN001/CAN001.c ****  
 172:../Dave/Generated/src/CAN001/CAN001.c **** /**
 173:../Dave/Generated/src/CAN001/CAN001.c ****  * @brief      Function to allocate message object from free list to node list
 174:../Dave/Generated/src/CAN001/CAN001.c ****  *              
 175:../Dave/Generated/src/CAN001/CAN001.c ****  * @param[in]  List Node list no
 176:../Dave/Generated/src/CAN001/CAN001.c ****  * @param[in]  MsgObjnr Message object number to be allocated to node list
 177:../Dave/Generated/src/CAN001/CAN001.c ****  *
 178:../Dave/Generated/src/CAN001/CAN001.c ****  * @return     status_t 
 179:../Dave/Generated/src/CAN001/CAN001.c ****  *             MO number allocated
 180:../Dave/Generated/src/CAN001/CAN001.c ****  * <b>Reentrant: NO </b><BR>
 181:../Dave/Generated/src/CAN001/CAN001.c ****  * <b>Sync/Async:  Synchronous</b>
 182:../Dave/Generated/src/CAN001/CAN001.c ****  *
 183:../Dave/Generated/src/CAN001/CAN001.c ****  */
 184:../Dave/Generated/src/CAN001/CAN001.c **** static void CAN001_lAllocateMOtoNodeList(uint8_t List,uint8_t MsgObjnr);
 185:../Dave/Generated/src/CAN001/CAN001.c **** 
 186:../Dave/Generated/src/CAN001/CAN001.c **** /**
 187:../Dave/Generated/src/CAN001/CAN001.c ****  * @brief      Function to deallocate MO from Node list to free list
 188:../Dave/Generated/src/CAN001/CAN001.c ****  *              
 189:../Dave/Generated/src/CAN001/CAN001.c ****  * @param[inout]  MsgObjnr Message object number to be deallocated to free list
 190:../Dave/Generated/src/CAN001/CAN001.c ****  *
 191:../Dave/Generated/src/CAN001/CAN001.c ****  * @return     void
 192:../Dave/Generated/src/CAN001/CAN001.c ****  *            
 193:../Dave/Generated/src/CAN001/CAN001.c ****  * <b>Reentrant: NO </b><BR>
 194:../Dave/Generated/src/CAN001/CAN001.c ****  * <b>Sync/Async:  Synchronous</b>
 195:../Dave/Generated/src/CAN001/CAN001.c ****  *
 196:../Dave/Generated/src/CAN001/CAN001.c ****  */
 197:../Dave/Generated/src/CAN001/CAN001.c **** static void CAN001_lDeallocateMsgObj(uint32_t MsgObjnr);
 198:../Dave/Generated/src/CAN001/CAN001.c **** 
 199:../Dave/Generated/src/CAN001/CAN001.c **** /**
 200:../Dave/Generated/src/CAN001/CAN001.c ****  * @brief      Function to configure message object registers
 201:../Dave/Generated/src/CAN001/CAN001.c ****  *              
 202:../Dave/Generated/src/CAN001/CAN001.c ****  * @param[in]  MsgObjptr Pointer to message object data structure
 203:../Dave/Generated/src/CAN001/CAN001.c ****  * @param[in]  MsgObjnr Actual message object number
 204:../Dave/Generated/src/CAN001/CAN001.c ****  *
 205:../Dave/Generated/src/CAN001/CAN001.c ****  * @return     void
 206:../Dave/Generated/src/CAN001/CAN001.c ****  *            
 207:../Dave/Generated/src/CAN001/CAN001.c ****  * <b>Reentrant: NO </b><BR>
 208:../Dave/Generated/src/CAN001/CAN001.c ****  * <b>Sync/Async:  Synchronous</b>
 209:../Dave/Generated/src/CAN001/CAN001.c ****  *
 210:../Dave/Generated/src/CAN001/CAN001.c ****  */
 211:../Dave/Generated/src/CAN001/CAN001.c **** static void CAN001_lConfigMORegs
 212:../Dave/Generated/src/CAN001/CAN001.c **** (
 213:../Dave/Generated/src/CAN001/CAN001.c ****   const CAN001_MessageHandleType* MsgObjptr,
 214:../Dave/Generated/src/CAN001/CAN001.c ****   uint8_t MsgObjnr
 215:../Dave/Generated/src/CAN001/CAN001.c **** );
 216:../Dave/Generated/src/CAN001/CAN001.c **** 
 217:../Dave/Generated/src/CAN001/CAN001.c **** 
 218:../Dave/Generated/src/CAN001/CAN001.c **** /**
 219:../Dave/Generated/src/CAN001/CAN001.c ****  * @brief      Function to initialize node as per UI configuration
 220:../Dave/Generated/src/CAN001/CAN001.c ****  *              
 221:../Dave/Generated/src/CAN001/CAN001.c ****  * @param[in] Handle Node configuration structure
 222:../Dave/Generated/src/CAN001/CAN001.c ****  *
 223:../Dave/Generated/src/CAN001/CAN001.c ****  * @return     void
 224:../Dave/Generated/src/CAN001/CAN001.c ****  *            
 225:../Dave/Generated/src/CAN001/CAN001.c ****  * <b>Reentrant: NO </b><BR>
 226:../Dave/Generated/src/CAN001/CAN001.c ****  * <b>Sync/Async:  Synchronous</b>
 227:../Dave/Generated/src/CAN001/CAN001.c ****  *
 228:../Dave/Generated/src/CAN001/CAN001.c ****  */
 229:../Dave/Generated/src/CAN001/CAN001.c **** static void CAN001_lNodeInit(const CAN001_HandleType* Handle);
 230:../Dave/Generated/src/CAN001/CAN001.c **** /**
 231:../Dave/Generated/src/CAN001/CAN001.c ****  *@}
 232:../Dave/Generated/src/CAN001/CAN001.c ****  */
 233:../Dave/Generated/src/CAN001/CAN001.c **** 
 234:../Dave/Generated/src/CAN001/CAN001.c **** /*******************************************************************************
 235:../Dave/Generated/src/CAN001/CAN001.c **** **                      Global Constant Definitions                           **
 236:../Dave/Generated/src/CAN001/CAN001.c **** *******************************************************************************/
 237:../Dave/Generated/src/CAN001/CAN001.c **** 
 238:../Dave/Generated/src/CAN001/CAN001.c **** /*******************************************************************************
 239:../Dave/Generated/src/CAN001/CAN001.c **** **                      Global Variable Definitions                           **
 240:../Dave/Generated/src/CAN001/CAN001.c **** *******************************************************************************/
 241:../Dave/Generated/src/CAN001/CAN001.c **** 
 242:../Dave/Generated/src/CAN001/CAN001.c **** /*******************************************************************************
 243:../Dave/Generated/src/CAN001/CAN001.c **** **                      Private Constant Definitions                          **
 244:../Dave/Generated/src/CAN001/CAN001.c **** *******************************************************************************/
 245:../Dave/Generated/src/CAN001/CAN001.c **** 
 246:../Dave/Generated/src/CAN001/CAN001.c **** /*******************************************************************************
 247:../Dave/Generated/src/CAN001/CAN001.c **** **                 Function like macro definitions                            **
 248:../Dave/Generated/src/CAN001/CAN001.c **** *******************************************************************************/
 249:../Dave/Generated/src/CAN001/CAN001.c **** /*******************************************************************************
 250:../Dave/Generated/src/CAN001/CAN001.c **** **                      Private Function Definitions                          **
 251:../Dave/Generated/src/CAN001/CAN001.c **** *******************************************************************************/
 252:../Dave/Generated/src/CAN001/CAN001.c **** 
 253:../Dave/Generated/src/CAN001/CAN001.c **** 
 254:../Dave/Generated/src/CAN001/CAN001.c **** /* Function to allocate message object from free list to node list */
 255:../Dave/Generated/src/CAN001/CAN001.c **** static void CAN001_lAllocateMOtoNodeList(uint8_t List, uint8_t MsgObjnr)
 256:../Dave/Generated/src/CAN001/CAN001.c **** {
  27              		.loc 1 256 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 7, -4
  36 0002 83B0     		sub	sp, sp, #12
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 16
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  42 0006 0246     		mov	r2, r0
  43 0008 0B46     		mov	r3, r1
  44 000a FA71     		strb	r2, [r7, #7]
  45 000c BB71     		strb	r3, [r7, #6]
 257:../Dave/Generated/src/CAN001/CAN001.c ****   /* <<<DD_CAN001_nonAPI_1>>> */
 258:../Dave/Generated/src/CAN001/CAN001.c ****   /* Panel Command for dynamic allocation of MO to node list */
 259:../Dave/Generated/src/CAN001/CAN001.c ****   CAN->PANCTR = ((((uint32_t)List + 1U) << CAN_PANCTR_PANAR2_Pos)| \
  46              		.loc 1 259 0
  47 000e 4FF48043 		mov	r3, #16384
  48 0012 C4F60103 		movt	r3, 18433
  49 0016 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
  50 0018 02F10102 		add	r2, r2, #1
  51 001c 4FEA0261 		lsl	r1, r2, #24
 260:../Dave/Generated/src/CAN001/CAN001.c **** 		                   ((uint32_t)MsgObjnr << CAN_PANCTR_PANAR1_Pos) | \
  52              		.loc 1 260 0
  53 0020 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
  54 0022 4FEA0242 		lsl	r2, r2, #16
 259:../Dave/Generated/src/CAN001/CAN001.c ****   CAN->PANCTR = ((((uint32_t)List + 1U) << CAN_PANCTR_PANAR2_Pos)| \
  55              		.loc 1 259 0
  56 0026 0A43     		orrs	r2, r2, r1
  57              		.loc 1 260 0
  58 0028 42F00202 		orr	r2, r2, #2
 259:../Dave/Generated/src/CAN001/CAN001.c ****   CAN->PANCTR = ((((uint32_t)List + 1U) << CAN_PANCTR_PANAR2_Pos)| \
  59              		.loc 1 259 0
  60 002c C3F8C421 		str	r2, [r3, #452]
 261:../Dave/Generated/src/CAN001/CAN001.c ****                            (CAN001_PANCMD_STATIC_MO_ALLOC));
 262:../Dave/Generated/src/CAN001/CAN001.c ****   /* wait until panel as done the command */
 263:../Dave/Generated/src/CAN001/CAN001.c ****   while ( (CAN->PANCTR & CAN_PANCTR_BUSY_Msk))
  61              		.loc 1 263 0
  62 0030 00BF     		nop
  63              	.L2:
  64              		.loc 1 263 0 is_stmt 0 discriminator 1
  65 0032 4FF48043 		mov	r3, #16384
  66 0036 C4F60103 		movt	r3, 18433
  67 003a D3F8C431 		ldr	r3, [r3, #452]
  68 003e 03F48073 		and	r3, r3, #256
  69 0042 002B     		cmp	r3, #0
  70 0044 F5D1     		bne	.L2
 264:../Dave/Generated/src/CAN001/CAN001.c ****   {}
 265:../Dave/Generated/src/CAN001/CAN001.c **** }
  71              		.loc 1 265 0 is_stmt 1
  72 0046 07F10C07 		add	r7, r7, #12
  73 004a BD46     		mov	sp, r7
  74 004c 80BC     		pop	{r7}
  75 004e 7047     		bx	lr
  76              		.cfi_endproc
  77              	.LFE112:
  79              		.section	.text.CAN001_lDeallocateMsgObj,"ax",%progbits
  80              		.align	2
  81              		.thumb
  82              		.thumb_func
  84              	CAN001_lDeallocateMsgObj:
  85              	.LFB113:
 266:../Dave/Generated/src/CAN001/CAN001.c **** 
 267:../Dave/Generated/src/CAN001/CAN001.c **** 
 268:../Dave/Generated/src/CAN001/CAN001.c **** /* Function to deallocate MO from Node list to free list */ 
 269:../Dave/Generated/src/CAN001/CAN001.c **** static void CAN001_lDeallocateMsgObj(uint32_t MsgObjnr)
 270:../Dave/Generated/src/CAN001/CAN001.c **** { 
  86              		.loc 1 270 0
  87              		.cfi_startproc
  88              		@ args = 0, pretend = 0, frame = 16
  89              		@ frame_needed = 1, uses_anonymous_args = 0
  90              		@ link register save eliminated.
  91 0000 80B4     		push	{r7}
  92              	.LCFI3:
  93              		.cfi_def_cfa_offset 4
  94              		.cfi_offset 7, -4
  95 0002 85B0     		sub	sp, sp, #20
  96              	.LCFI4:
  97              		.cfi_def_cfa_offset 24
  98 0004 00AF     		add	r7, sp, #0
  99              	.LCFI5:
 100              		.cfi_def_cfa_register 7
 101 0006 7860     		str	r0, [r7, #4]
 271:../Dave/Generated/src/CAN001/CAN001.c **** 	uint32_t FirstMoInList0 = 0U;
 102              		.loc 1 271 0
 103 0008 4FF00003 		mov	r3, #0
 104 000c FB60     		str	r3, [r7, #12]
 272:../Dave/Generated/src/CAN001/CAN001.c ****   /* <<<DD_CAN001_nonAPI_2>>> */
 273:../Dave/Generated/src/CAN001/CAN001.c ****   FirstMoInList0 = (CAN->LIST[0] & CAN001_LIST_BEGIN_BITMASK);
 105              		.loc 1 273 0
 106 000e 4FF48043 		mov	r3, #16384
 107 0012 C4F60103 		movt	r3, 18433
 108 0016 D3F80031 		ldr	r3, [r3, #256]
 109 001a DBB2     		uxtb	r3, r3
 110 001c FB60     		str	r3, [r7, #12]
 274:../Dave/Generated/src/CAN001/CAN001.c ****   /* Panel Command for deallocation of MO from Node List */
 275:../Dave/Generated/src/CAN001/CAN001.c ****   CAN->PANCTR = ((FirstMoInList0 << CAN_PANCTR_PANAR2_Pos)| \
 111              		.loc 1 275 0
 112 001e 4FF48043 		mov	r3, #16384
 113 0022 C4F60103 		movt	r3, 18433
 114 0026 FA68     		ldr	r2, [r7, #12]
 115 0028 4FEA0261 		lsl	r1, r2, #24
 276:../Dave/Generated/src/CAN001/CAN001.c ****                            ((uint32_t)MsgObjnr << CAN_PANCTR_PANAR1_Pos) | \
 116              		.loc 1 276 0
 117 002c 7A68     		ldr	r2, [r7, #4]
 118 002e 4FEA0242 		lsl	r2, r2, #16
 275:../Dave/Generated/src/CAN001/CAN001.c ****   CAN->PANCTR = ((FirstMoInList0 << CAN_PANCTR_PANAR2_Pos)| \
 119              		.loc 1 275 0
 120 0032 0A43     		orrs	r2, r2, r1
 121              		.loc 1 276 0
 122 0034 42F00402 		orr	r2, r2, #4
 275:../Dave/Generated/src/CAN001/CAN001.c ****   CAN->PANCTR = ((FirstMoInList0 << CAN_PANCTR_PANAR2_Pos)| \
 123              		.loc 1 275 0
 124 0038 C3F8C421 		str	r2, [r3, #452]
 277:../Dave/Generated/src/CAN001/CAN001.c ****                            (CAN001_PANCMD_DYN_MO_DEALLOC));
 278:../Dave/Generated/src/CAN001/CAN001.c ****     /* wait until panel as done the command */
 279:../Dave/Generated/src/CAN001/CAN001.c ****    while ( (CAN->PANCTR & CAN_PANCTR_BUSY_Msk))
 125              		.loc 1 279 0
 126 003c 00BF     		nop
 127              	.L4:
 128              		.loc 1 279 0 is_stmt 0 discriminator 1
 129 003e 4FF48043 		mov	r3, #16384
 130 0042 C4F60103 		movt	r3, 18433
 131 0046 D3F8C431 		ldr	r3, [r3, #452]
 132 004a 03F48073 		and	r3, r3, #256
 133 004e 002B     		cmp	r3, #0
 134 0050 F5D1     		bne	.L4
 280:../Dave/Generated/src/CAN001/CAN001.c ****     {}
 281:../Dave/Generated/src/CAN001/CAN001.c **** }
 135              		.loc 1 281 0 is_stmt 1
 136 0052 07F11407 		add	r7, r7, #20
 137 0056 BD46     		mov	sp, r7
 138 0058 80BC     		pop	{r7}
 139 005a 7047     		bx	lr
 140              		.cfi_endproc
 141              	.LFE113:
 143              		.section	.text.CAN001_lConfigMORegs,"ax",%progbits
 144              		.align	2
 145              		.thumb
 146              		.thumb_func
 148              	CAN001_lConfigMORegs:
 149              	.LFB114:
 282:../Dave/Generated/src/CAN001/CAN001.c **** 
 283:../Dave/Generated/src/CAN001/CAN001.c **** /* Function to configure message object registers */
 284:../Dave/Generated/src/CAN001/CAN001.c **** static void CAN001_lConfigMORegs(const CAN001_MessageHandleType* MsgObjptr, uint8_t MsgObjnr)
 285:../Dave/Generated/src/CAN001/CAN001.c **** { 
 150              		.loc 1 285 0
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 16
 153              		@ frame_needed = 1, uses_anonymous_args = 0
 154              		@ link register save eliminated.
 155 0000 80B4     		push	{r7}
 156              	.LCFI6:
 157              		.cfi_def_cfa_offset 4
 158              		.cfi_offset 7, -4
 159 0002 85B0     		sub	sp, sp, #20
 160              	.LCFI7:
 161              		.cfi_def_cfa_offset 24
 162 0004 00AF     		add	r7, sp, #0
 163              	.LCFI8:
 164              		.cfi_def_cfa_register 7
 165 0006 7860     		str	r0, [r7, #4]
 166 0008 0B46     		mov	r3, r1
 167 000a FB70     		strb	r3, [r7, #3]
 286:../Dave/Generated/src/CAN001/CAN001.c ****     CAN_MO_TypeDef* CAN_MOxRegs = GET_MO_OFFSET(MsgObjnr);
 168              		.loc 1 286 0
 169 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 170 000e 03F11073 		add	r3, r3, #37748736
 171 0012 03F52863 		add	r3, r3, #2688
 172 0016 4FEA4313 		lsl	r3, r3, #5
 173 001a BB60     		str	r3, [r7, #8]
 287:../Dave/Generated/src/CAN001/CAN001.c **** 	  uint32_t Count = 0U;
 174              		.loc 1 287 0
 175 001c 4FF00003 		mov	r3, #0
 176 0020 FB60     		str	r3, [r7, #12]
 288:../Dave/Generated/src/CAN001/CAN001.c **** 	  /* <<<DD_CAN001_nonAPI_3>>> */  
 289:../Dave/Generated/src/CAN001/CAN001.c ****     /* Disable Message object */
 290:../Dave/Generated/src/CAN001/CAN001.c ****     CAN_MOxRegs->MOCTR = CAN_MO_MOCTR_RESMSGVAL_Msk;   
 177              		.loc 1 290 0
 178 0022 BB68     		ldr	r3, [r7, #8]
 179 0024 4FF02002 		mov	r2, #32
 180 0028 DA61     		str	r2, [r3, #28]
 291:../Dave/Generated/src/CAN001/CAN001.c ****     if ((CAN_FrameType)MsgObjptr->IDExten == STANDARDTYPE)
 181              		.loc 1 291 0
 182 002a 7B68     		ldr	r3, [r7, #4]
 183 002c 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 184 002e 002B     		cmp	r3, #0
 185 0030 25D1     		bne	.L6
 292:../Dave/Generated/src/CAN001/CAN001.c ****     {
 293:../Dave/Generated/src/CAN001/CAN001.c ****       /* Configure standard identifier and identifier mask*/
 294:../Dave/Generated/src/CAN001/CAN001.c ****       CAN_MOxRegs->MOAR = ((((uint32_t)2UL << CAN_MO_MOAR_PRI_Pos) & \
 295:../Dave/Generated/src/CAN001/CAN001.c ****                            (uint32_t)CAN_MO_MOAR_PRI_Msk) | \
 296:../Dave/Generated/src/CAN001/CAN001.c ****                            ((uint32_t)(MsgObjptr->Identifier << CAN_MO_MOAR_STDID_Pos) \
 186              		.loc 1 296 0
 187 0032 7B68     		ldr	r3, [r7, #4]
 188 0034 1B68     		ldr	r3, [r3, #0]
 189 0036 4FEA8342 		lsl	r2, r3, #18
 297:../Dave/Generated/src/CAN001/CAN001.c ****                            & (uint32_t)CAN_MO_MOAR_STDID_Msk));
 190              		.loc 1 297 0
 191 003a 4FF00003 		mov	r3, #0
 192 003e C1F6FC73 		movt	r3, 8188
 193 0042 1340     		ands	r3, r3, r2
 295:../Dave/Generated/src/CAN001/CAN001.c ****                            (uint32_t)CAN_MO_MOAR_PRI_Msk) | \
 194              		.loc 1 295 0
 195 0044 43F00042 		orr	r2, r3, #-2147483648
 294:../Dave/Generated/src/CAN001/CAN001.c ****       CAN_MOxRegs->MOAR = ((((uint32_t)2UL << CAN_MO_MOAR_PRI_Pos) & \
 196              		.loc 1 294 0
 197 0048 BB68     		ldr	r3, [r7, #8]
 198 004a 9A61     		str	r2, [r3, #24]
 298:../Dave/Generated/src/CAN001/CAN001.c ****       if(MsgObjptr->IDEMask == 1U)
 199              		.loc 1 298 0
 200 004c 7B68     		ldr	r3, [r7, #4]
 201 004e 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 202 0050 012B     		cmp	r3, #1
 203 0052 0DD1     		bne	.L7
 299:../Dave/Generated/src/CAN001/CAN001.c ****       {
 300:../Dave/Generated/src/CAN001/CAN001.c ****         CAN_MOxRegs->MOAMR = ((((uint32_t)1UL << CAN_MO_MOAMR_MIDE_Pos) & \
 301:../Dave/Generated/src/CAN001/CAN001.c ****         		             (uint32_t)CAN_MO_MOAMR_MIDE_Msk) | \
 302:../Dave/Generated/src/CAN001/CAN001.c ****                             ((uint32_t)(MsgObjptr->IDMask << CAN_MO_MOAR_STDID_Pos) \
 204              		.loc 1 302 0
 205 0054 7B68     		ldr	r3, [r7, #4]
 206 0056 5B68     		ldr	r3, [r3, #4]
 207 0058 4FEA8342 		lsl	r2, r3, #18
 303:../Dave/Generated/src/CAN001/CAN001.c ****                             & (uint32_t)CAN_MO_MOAR_STDID_Msk));
 208              		.loc 1 303 0
 209 005c 4FF00003 		mov	r3, #0
 210 0060 C1F6FC73 		movt	r3, 8188
 211 0064 1340     		ands	r3, r3, r2
 301:../Dave/Generated/src/CAN001/CAN001.c ****         		             (uint32_t)CAN_MO_MOAMR_MIDE_Msk) | \
 212              		.loc 1 301 0
 213 0066 43F00052 		orr	r2, r3, #536870912
 300:../Dave/Generated/src/CAN001/CAN001.c ****         CAN_MOxRegs->MOAMR = ((((uint32_t)1UL << CAN_MO_MOAMR_MIDE_Pos) & \
 214              		.loc 1 300 0
 215 006a BB68     		ldr	r3, [r7, #8]
 216 006c DA60     		str	r2, [r3, #12]
 217 006e 1BE0     		b	.L8
 218              	.L7:
 304:../Dave/Generated/src/CAN001/CAN001.c ****       }
 305:../Dave/Generated/src/CAN001/CAN001.c ****       else
 306:../Dave/Generated/src/CAN001/CAN001.c ****       {
 307:../Dave/Generated/src/CAN001/CAN001.c ****         CAN_MOxRegs->MOAMR = ((((uint32_t)0UL << CAN_MO_MOAMR_MIDE_Pos) & \
 308:../Dave/Generated/src/CAN001/CAN001.c ****         		           (uint32_t)CAN_MO_MOAMR_MIDE_Msk) | \
 309:../Dave/Generated/src/CAN001/CAN001.c ****                             ((uint32_t)CAN_MO_MOAMR_AM_Msk & (uint32_t)MsgObjptr->IDMask));
 219              		.loc 1 309 0
 220 0070 7B68     		ldr	r3, [r7, #4]
 221 0072 5B68     		ldr	r3, [r3, #4]
 308:../Dave/Generated/src/CAN001/CAN001.c ****         		           (uint32_t)CAN_MO_MOAMR_MIDE_Msk) | \
 222              		.loc 1 308 0
 223 0074 23F06042 		bic	r2, r3, #-536870912
 307:../Dave/Generated/src/CAN001/CAN001.c ****         CAN_MOxRegs->MOAMR = ((((uint32_t)0UL << CAN_MO_MOAMR_MIDE_Pos) & \
 224              		.loc 1 307 0
 225 0078 BB68     		ldr	r3, [r7, #8]
 226 007a DA60     		str	r2, [r3, #12]
 227 007c 14E0     		b	.L8
 228              	.L6:
 310:../Dave/Generated/src/CAN001/CAN001.c ****       }                      
 311:../Dave/Generated/src/CAN001/CAN001.c ****     } /* if (MsgObjptr->IDExten == STANDARDTYPE) */
 312:../Dave/Generated/src/CAN001/CAN001.c ****     else
 313:../Dave/Generated/src/CAN001/CAN001.c ****     {
 314:../Dave/Generated/src/CAN001/CAN001.c ****         /* Configure Extended identifier and identifier mask*/
 315:../Dave/Generated/src/CAN001/CAN001.c ****       CAN_MOxRegs->MOAR = ((((uint32_t)2UL << CAN_MO_MOAR_PRI_Pos) & \
 316:../Dave/Generated/src/CAN001/CAN001.c ****     		                (uint32_t)CAN_MO_MOAR_PRI_Msk) | \
 317:../Dave/Generated/src/CAN001/CAN001.c ****                            ((uint32_t)(CAN_MO_MOAR_ID_Msk & MsgObjptr->Identifier)) | \
 229              		.loc 1 317 0
 230 007e 7B68     		ldr	r3, [r7, #4]
 231 0080 1B68     		ldr	r3, [r3, #0]
 232 0082 23F06043 		bic	r3, r3, #-536870912
 233 0086 43F02042 		orr	r2, r3, #-1610612736
 315:../Dave/Generated/src/CAN001/CAN001.c ****       CAN_MOxRegs->MOAR = ((((uint32_t)2UL << CAN_MO_MOAR_PRI_Pos) & \
 234              		.loc 1 315 0
 235 008a BB68     		ldr	r3, [r7, #8]
 236 008c 9A61     		str	r2, [r3, #24]
 318:../Dave/Generated/src/CAN001/CAN001.c ****                             (((uint32_t)1UL << CAN_MO_MOAR_IDE_Pos ) & \
 319:../Dave/Generated/src/CAN001/CAN001.c ****                             		(uint32_t)CAN_MO_MOAR_IDE_Msk));
 320:../Dave/Generated/src/CAN001/CAN001.c ****       CAN_MOxRegs->MOAMR = (((uint32_t)((uint32_t)MsgObjptr->IDEMask << CAN_MO_MOAMR_MIDE_Pos) & \
 237              		.loc 1 320 0
 238 008e 7B68     		ldr	r3, [r7, #4]
 239 0090 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 240 0092 4FEA4373 		lsl	r3, r3, #29
 241 0096 03F00052 		and	r2, r3, #536870912
 321:../Dave/Generated/src/CAN001/CAN001.c ****     		  (uint32_t)CAN_MO_MOAMR_MIDE_Msk) | \
 322:../Dave/Generated/src/CAN001/CAN001.c ****     		  (uint32_t)(CAN_MO_MOAMR_AM_Msk & MsgObjptr->IDMask));
 242              		.loc 1 322 0
 243 009a 7B68     		ldr	r3, [r7, #4]
 244 009c 5B68     		ldr	r3, [r3, #4]
 245 009e 23F06043 		bic	r3, r3, #-536870912
 321:../Dave/Generated/src/CAN001/CAN001.c ****     		  (uint32_t)CAN_MO_MOAMR_MIDE_Msk) | \
 246              		.loc 1 321 0
 247 00a2 1A43     		orrs	r2, r2, r3
 320:../Dave/Generated/src/CAN001/CAN001.c ****       CAN_MOxRegs->MOAMR = (((uint32_t)((uint32_t)MsgObjptr->IDEMask << CAN_MO_MOAMR_MIDE_Pos) & \
 248              		.loc 1 320 0
 249 00a4 BB68     		ldr	r3, [r7, #8]
 250 00a6 DA60     		str	r2, [r3, #12]
 251              	.L8:
 323:../Dave/Generated/src/CAN001/CAN001.c ****     }
 324:../Dave/Generated/src/CAN001/CAN001.c ****       /* Check whether message object is transmit message object */
 325:../Dave/Generated/src/CAN001/CAN001.c ****       /*<<<DD_CAN001_API_3_2>>>*/
 326:../Dave/Generated/src/CAN001/CAN001.c ****     if (MsgObjptr->MsgObjType == TRANSMSGOBJ)
 252              		.loc 1 326 0
 253 00a8 7B68     		ldr	r3, [r7, #4]
 254 00aa 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 255 00ac 012B     		cmp	r3, #1
 256 00ae 77D1     		bne	.L9
 327:../Dave/Generated/src/CAN001/CAN001.c ****   
 328:../Dave/Generated/src/CAN001/CAN001.c ****     {
 329:../Dave/Generated/src/CAN001/CAN001.c ****       /* Configure data length */
 330:../Dave/Generated/src/CAN001/CAN001.c ****       WR_REG(CAN_MOxRegs->MOFCR, (uint32_t)CAN_MO_MOFCR_DLC_Msk, \
 257              		.loc 1 330 0
 258 00b0 7B68     		ldr	r3, [r7, #4]
 259 00b2 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 260 00b4 4FEA0363 		lsl	r3, r3, #24
 261 00b8 03F07062 		and	r2, r3, #251658240
 262 00bc BB68     		ldr	r3, [r7, #8]
 263 00be 1B68     		ldr	r3, [r3, #0]
 264 00c0 23F07063 		bic	r3, r3, #251658240
 265 00c4 1A43     		orrs	r2, r2, r3
 266 00c6 BB68     		ldr	r3, [r7, #8]
 267 00c8 1A60     		str	r2, [r3, #0]
 331:../Dave/Generated/src/CAN001/CAN001.c ****                             CAN_MO_MOFCR_DLC_Pos, (uint32_t)MsgObjptr->DataLength);
 332:../Dave/Generated/src/CAN001/CAN001.c ****       /* Configure Data registers*/
 333:../Dave/Generated/src/CAN001/CAN001.c ****       for(Count = 0U; Count < MsgObjptr->DataLength; Count++) 
 268              		.loc 1 333 0
 269 00ca 4FF00003 		mov	r3, #0
 270 00ce FB60     		str	r3, [r7, #12]
 271 00d0 59E0     		b	.L10
 272              	.L13:
 334:../Dave/Generated/src/CAN001/CAN001.c ****       {
 335:../Dave/Generated/src/CAN001/CAN001.c ****         if(Count < 4U)
 273              		.loc 1 335 0
 274 00d2 FB68     		ldr	r3, [r7, #12]
 275 00d4 032B     		cmp	r3, #3
 276 00d6 23D8     		bhi	.L11
 336:../Dave/Generated/src/CAN001/CAN001.c ****         {
 337:../Dave/Generated/src/CAN001/CAN001.c ****           WR_REG(CAN_MOxRegs->MODATAL, (uint32_t)((uint32_t)CAN_MO_MODATAL_DB0_Msk << (Count*8U)), 
 277              		.loc 1 337 0
 278 00d8 7A68     		ldr	r2, [r7, #4]
 279 00da FB68     		ldr	r3, [r7, #12]
 280 00dc D318     		adds	r3, r2, r3
 281 00de 03F10803 		add	r3, r3, #8
 282 00e2 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 283 00e4 1A46     		mov	r2, r3
 284 00e6 FB68     		ldr	r3, [r7, #12]
 285 00e8 4FEAC303 		lsl	r3, r3, #3
 286 00ec 02FA03F2 		lsl	r2, r2, r3
 287 00f0 FB68     		ldr	r3, [r7, #12]
 288 00f2 4FEAC303 		lsl	r3, r3, #3
 289 00f6 4FF0FF01 		mov	r1, #255
 290 00fa 01FA03F3 		lsl	r3, r1, r3
 291 00fe 1A40     		ands	r2, r2, r3
 292 0100 BB68     		ldr	r3, [r7, #8]
 293 0102 1969     		ldr	r1, [r3, #16]
 294 0104 FB68     		ldr	r3, [r7, #12]
 295 0106 4FEAC303 		lsl	r3, r3, #3
 296 010a 4FF0FF00 		mov	r0, #255
 297 010e 00FA03F3 		lsl	r3, r0, r3
 298 0112 6FEA0303 		mvn	r3, r3
 299 0116 0B40     		ands	r3, r3, r1
 300 0118 1A43     		orrs	r2, r2, r3
 301 011a BB68     		ldr	r3, [r7, #8]
 302 011c 1A61     		str	r2, [r3, #16]
 303 011e 2EE0     		b	.L12
 304              	.L11:
 338:../Dave/Generated/src/CAN001/CAN001.c ****                                         (Count*8U),(uint32_t)MsgObjptr->data[Count]);
 339:../Dave/Generated/src/CAN001/CAN001.c ****         }
 340:../Dave/Generated/src/CAN001/CAN001.c ****         else
 341:../Dave/Generated/src/CAN001/CAN001.c ****         {
 342:../Dave/Generated/src/CAN001/CAN001.c ****           WR_REG(CAN_MOxRegs->MODATAH, (uint32_t)(CAN_MO_MODATAL_DB0_Msk << ((Count-4U)*8U)), \
 305              		.loc 1 342 0
 306 0120 7A68     		ldr	r2, [r7, #4]
 307 0122 FB68     		ldr	r3, [r7, #12]
 308 0124 D318     		adds	r3, r2, r3
 309 0126 03F10803 		add	r3, r3, #8
 310 012a DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 311 012c 1A46     		mov	r2, r3
 312 012e FB68     		ldr	r3, [r7, #12]
 313 0130 03F10053 		add	r3, r3, #536870912
 314 0134 A3F10403 		sub	r3, r3, #4
 315 0138 4FEAC303 		lsl	r3, r3, #3
 316 013c 02FA03F2 		lsl	r2, r2, r3
 317 0140 FB68     		ldr	r3, [r7, #12]
 318 0142 03F10053 		add	r3, r3, #536870912
 319 0146 A3F10403 		sub	r3, r3, #4
 320 014a 4FEAC303 		lsl	r3, r3, #3
 321 014e 4FF0FF01 		mov	r1, #255
 322 0152 01FA03F3 		lsl	r3, r1, r3
 323 0156 1A40     		ands	r2, r2, r3
 324 0158 BB68     		ldr	r3, [r7, #8]
 325 015a 5969     		ldr	r1, [r3, #20]
 326 015c FB68     		ldr	r3, [r7, #12]
 327 015e 03F10053 		add	r3, r3, #536870912
 328 0162 A3F10403 		sub	r3, r3, #4
 329 0166 4FEAC303 		lsl	r3, r3, #3
 330 016a 4FF0FF00 		mov	r0, #255
 331 016e 00FA03F3 		lsl	r3, r0, r3
 332 0172 6FEA0303 		mvn	r3, r3
 333 0176 0B40     		ands	r3, r3, r1
 334 0178 1A43     		orrs	r2, r2, r3
 335 017a BB68     		ldr	r3, [r7, #8]
 336 017c 5A61     		str	r2, [r3, #20]
 337              	.L12:
 333:../Dave/Generated/src/CAN001/CAN001.c ****       for(Count = 0U; Count < MsgObjptr->DataLength; Count++) 
 338              		.loc 1 333 0
 339 017e FB68     		ldr	r3, [r7, #12]
 340 0180 03F10103 		add	r3, r3, #1
 341 0184 FB60     		str	r3, [r7, #12]
 342              	.L10:
 333:../Dave/Generated/src/CAN001/CAN001.c ****       for(Count = 0U; Count < MsgObjptr->DataLength; Count++) 
 343              		.loc 1 333 0 is_stmt 0 discriminator 1
 344 0186 7B68     		ldr	r3, [r7, #4]
 345 0188 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 346 018a 1A46     		mov	r2, r3
 347 018c FB68     		ldr	r3, [r7, #12]
 348 018e 9A42     		cmp	r2, r3
 349 0190 9FD8     		bhi	.L13
 343:../Dave/Generated/src/CAN001/CAN001.c ****                                     ((Count-4U)*8U), (uint32_t)MsgObjptr->data[Count]);
 344:../Dave/Generated/src/CAN001/CAN001.c ****         } /* if(Count < 4) */
 345:../Dave/Generated/src/CAN001/CAN001.c ****       }  /* for(Count = 0; Count < MsgObjptr->DataLength; Count++) */
 346:../Dave/Generated/src/CAN001/CAN001.c ****       /* Set MO as Transmit message object and set NEWDAT bit */
 347:../Dave/Generated/src/CAN001/CAN001.c ****       CAN_MOxRegs->MOCTR = (CAN_MO_MOCTR_SETDIR_Msk | \
 350              		.loc 1 347 0 is_stmt 1
 351 0192 BA68     		ldr	r2, [r7, #8]
 352 0194 4FF00003 		mov	r3, #0
 353 0198 C0F60803 		movt	r3, 2056
 354 019c D361     		str	r3, [r2, #28]
 355 019e 03E0     		b	.L14
 356              	.L9:
 348:../Dave/Generated/src/CAN001/CAN001.c ****                                                    CAN_MO_MOCTR_SETNEWDAT_Msk);
 349:../Dave/Generated/src/CAN001/CAN001.c ****     }/*if (MsgType == TRANSMSGOBJ)*/
 350:../Dave/Generated/src/CAN001/CAN001.c ****     /*<<<DD_CAN001_API_3_3>>>*/
 351:../Dave/Generated/src/CAN001/CAN001.c ****     else
 352:../Dave/Generated/src/CAN001/CAN001.c ****     { 
 353:../Dave/Generated/src/CAN001/CAN001.c ****       /* Set MO as Receive message object and set RXEN bit */
 354:../Dave/Generated/src/CAN001/CAN001.c ****       CAN_MOxRegs->MOCTR = CAN_MO_MOCTR_RESDIR_Msk;
 357              		.loc 1 354 0
 358 01a0 BB68     		ldr	r3, [r7, #8]
 359 01a2 4FF40062 		mov	r2, #2048
 360 01a6 DA61     		str	r2, [r3, #28]
 361              	.L14:
 355:../Dave/Generated/src/CAN001/CAN001.c ****     } /*if(MsgType == RECMSGOBJ)*/
 356:../Dave/Generated/src/CAN001/CAN001.c ****     /* Reset RTSEL and Set MSGVAL ,TXEN0 and TXEN1 bits */
 357:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_MOxRegs->MOCTR = (CAN_MO_MOCTR_SETTXEN0_Msk | \
 362              		.loc 1 357 0
 363 01a8 BB68     		ldr	r3, [r7, #8]
 364 01aa 4FF0D462 		mov	r2, #111149056
 365 01ae DA61     		str	r2, [r3, #28]
 358:../Dave/Generated/src/CAN001/CAN001.c ****                         CAN_MO_MOCTR_SETTXEN1_Msk | \
 359:../Dave/Generated/src/CAN001/CAN001.c ****                         CAN_MO_MOCTR_SETRXEN_Msk | \
 360:../Dave/Generated/src/CAN001/CAN001.c ****                         CAN_MO_MOCTR_SETMSGVAL_Msk );
 361:../Dave/Generated/src/CAN001/CAN001.c **** }
 366              		.loc 1 361 0
 367 01b0 07F11407 		add	r7, r7, #20
 368 01b4 BD46     		mov	sp, r7
 369 01b6 80BC     		pop	{r7}
 370 01b8 7047     		bx	lr
 371              		.cfi_endproc
 372              	.LFE114:
 374 01ba 00BF     		.section	.text.CAN001_lNodeInit,"ax",%progbits
 375              		.align	2
 376              		.thumb
 377              		.thumb_func
 379              	CAN001_lNodeInit:
 380              	.LFB115:
 362:../Dave/Generated/src/CAN001/CAN001.c **** 
 363:../Dave/Generated/src/CAN001/CAN001.c **** /* This function will initialize node with the given handle */                 
 364:../Dave/Generated/src/CAN001/CAN001.c **** static void CAN001_lNodeInit(const CAN001_HandleType* Handle)
 365:../Dave/Generated/src/CAN001/CAN001.c ****  {
 381              		.loc 1 365 0
 382              		.cfi_startproc
 383              		@ args = 0, pretend = 0, frame = 24
 384              		@ frame_needed = 1, uses_anonymous_args = 0
 385 0000 80B5     		push	{r7, lr}
 386              	.LCFI9:
 387              		.cfi_def_cfa_offset 8
 388              		.cfi_offset 7, -8
 389              		.cfi_offset 14, -4
 390 0002 86B0     		sub	sp, sp, #24
 391              	.LCFI10:
 392              		.cfi_def_cfa_offset 32
 393 0004 00AF     		add	r7, sp, #0
 394              	.LCFI11:
 395              		.cfi_def_cfa_register 7
 396 0006 7860     		str	r0, [r7, #4]
 366:../Dave/Generated/src/CAN001/CAN001.c ****   uint32_t Count  = 0U;
 397              		.loc 1 366 0
 398 0008 4FF00003 		mov	r3, #0
 399 000c 7B61     		str	r3, [r7, #20]
 367:../Dave/Generated/src/CAN001/CAN001.c ****   uint8_t MsgNo;
 368:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_MO_TypeDef* CAN_MOxRegs = CAN_MO0;
 400              		.loc 1 368 0
 401 000e 4FF4A043 		mov	r3, #20480
 402 0012 C4F60103 		movt	r3, 18433
 403 0016 3B61     		str	r3, [r7, #16]
 369:../Dave/Generated/src/CAN001/CAN001.c ****   /* <<<DD_CAN001_nonAPI_4>>> */
 370:../Dave/Generated/src/CAN001/CAN001.c ****   /* Map to node register offset as per node ID */
 371:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_NODE_TypeDef* CAN_NodexRegs = Handle->CanNodeRegs;
 404              		.loc 1 371 0
 405 0018 7B68     		ldr	r3, [r7, #4]
 406 001a 9B68     		ldr	r3, [r3, #8]
 407 001c FB60     		str	r3, [r7, #12]
 372:../Dave/Generated/src/CAN001/CAN001.c ****  
 373:../Dave/Generated/src/CAN001/CAN001.c ****   /* wait until panel has finished initialization */
 374:../Dave/Generated/src/CAN001/CAN001.c ****   while ( (CAN->PANCTR & CAN_PANCTR_BUSY_Msk))
 408              		.loc 1 374 0
 409 001e 00BF     		nop
 410              	.L16:
 411              		.loc 1 374 0 is_stmt 0 discriminator 1
 412 0020 4FF48043 		mov	r3, #16384
 413 0024 C4F60103 		movt	r3, 18433
 414 0028 D3F8C431 		ldr	r3, [r3, #452]
 415 002c 03F48073 		and	r3, r3, #256
 416 0030 002B     		cmp	r3, #0
 417 0032 F5D1     		bne	.L16
 375:../Dave/Generated/src/CAN001/CAN001.c **** 	{}
 376:../Dave/Generated/src/CAN001/CAN001.c ****   /* set CCE and INIT bit NCR for node configuration */
 377:../Dave/Generated/src/CAN001/CAN001.c ****    /* Enable Alert and last error code interrupt */
 378:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_NodexRegs->NCR |= ((uint32_t)CAN_NODE_NCR_INIT_Msk | (uint32_t)CAN_NODE_NCR_CCE_Msk);
 418              		.loc 1 378 0 is_stmt 1
 419 0034 FB68     		ldr	r3, [r7, #12]
 420 0036 1B68     		ldr	r3, [r3, #0]
 421 0038 43F04102 		orr	r2, r3, #65
 422 003c FB68     		ldr	r3, [r7, #12]
 423 003e 1A60     		str	r2, [r3, #0]
 379:../Dave/Generated/src/CAN001/CAN001.c ****   /* Configure bit timing register */
 380:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_NodexRegs->NBTR = ((uint32_t)Handle->BaudRate.DIV8 << \
 424              		.loc 1 380 0
 425 0040 7B68     		ldr	r3, [r7, #4]
 426 0042 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 427 0044 4FEAC332 		lsl	r2, r3, #15
 381:../Dave/Generated/src/CAN001/CAN001.c ****                                           CAN_NODE_NBTR_DIV8_Pos) | \
 382:../Dave/Generated/src/CAN001/CAN001.c ****                          ((uint32_t)Handle->BaudRate.TimeSEG2 << \
 428              		.loc 1 382 0
 429 0048 7B68     		ldr	r3, [r7, #4]
 430 004a DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 431 004c 4FEA0333 		lsl	r3, r3, #12
 381:../Dave/Generated/src/CAN001/CAN001.c ****                                           CAN_NODE_NBTR_DIV8_Pos) | \
 432              		.loc 1 381 0
 433 0050 1A43     		orrs	r2, r2, r3
 383:../Dave/Generated/src/CAN001/CAN001.c ****                                           CAN_NODE_NBTR_TSEG2_Pos) | \
 384:../Dave/Generated/src/CAN001/CAN001.c ****                          ((uint32_t)Handle->BaudRate.TimeSEG1 << \
 434              		.loc 1 384 0
 435 0052 7B68     		ldr	r3, [r7, #4]
 436 0054 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 437 0056 4FEA0323 		lsl	r3, r3, #8
 383:../Dave/Generated/src/CAN001/CAN001.c ****                                           CAN_NODE_NBTR_TSEG2_Pos) | \
 438              		.loc 1 383 0
 439 005a 1A43     		orrs	r2, r2, r3
 385:../Dave/Generated/src/CAN001/CAN001.c ****                                           CAN_NODE_NBTR_TSEG1_Pos) | \
 386:../Dave/Generated/src/CAN001/CAN001.c ****                          ((uint32_t)Handle->BaudRate.SyncJumpWidth << \
 440              		.loc 1 386 0
 441 005c 7B68     		ldr	r3, [r7, #4]
 442 005e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 443 0060 4FEA8313 		lsl	r3, r3, #6
 385:../Dave/Generated/src/CAN001/CAN001.c ****                                           CAN_NODE_NBTR_TSEG1_Pos) | \
 444              		.loc 1 385 0
 445 0064 1A43     		orrs	r2, r2, r3
 387:../Dave/Generated/src/CAN001/CAN001.c ****                                             CAN_NODE_NBTR_SJW_Pos) | \
 388:../Dave/Generated/src/CAN001/CAN001.c ****                          (uint32_t)Handle->BaudRate.BaudRatePresc;
 446              		.loc 1 388 0
 447 0066 7B68     		ldr	r3, [r7, #4]
 448 0068 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 387:../Dave/Generated/src/CAN001/CAN001.c ****                                             CAN_NODE_NBTR_SJW_Pos) | \
 449              		.loc 1 387 0
 450 006a 1A43     		orrs	r2, r2, r3
 380:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_NodexRegs->NBTR = ((uint32_t)Handle->BaudRate.DIV8 << \
 451              		.loc 1 380 0
 452 006c FB68     		ldr	r3, [r7, #12]
 453 006e 1A61     		str	r2, [r3, #16]
 389:../Dave/Generated/src/CAN001/CAN001.c ****   /* Check whether loop back mode is to be enabled */
 390:../Dave/Generated/src/CAN001/CAN001.c ****   if ( Handle->LoopBackModeEn == CAN001_ENABLE)
 454              		.loc 1 390 0
 455 0070 7B68     		ldr	r3, [r7, #4]
 456 0072 5B7B     		ldrb	r3, [r3, #13]	@ zero_extendqisi2
 457 0074 012B     		cmp	r3, #1
 458 0076 05D1     		bne	.L17
 391:../Dave/Generated/src/CAN001/CAN001.c ****   {
 392:../Dave/Generated/src/CAN001/CAN001.c ****     SET_BIT(CAN_NodexRegs->NPCR, CAN_NODE_NPCR_LBM_Pos);
 459              		.loc 1 392 0
 460 0078 FB68     		ldr	r3, [r7, #12]
 461 007a DB68     		ldr	r3, [r3, #12]
 462 007c 43F48072 		orr	r2, r3, #256
 463 0080 FB68     		ldr	r3, [r7, #12]
 464 0082 DA60     		str	r2, [r3, #12]
 465              	.L17:
 393:../Dave/Generated/src/CAN001/CAN001.c ****   }
 394:../Dave/Generated/src/CAN001/CAN001.c ****   /* Allocate required number of message object to node list 
 395:../Dave/Generated/src/CAN001/CAN001.c ****     * and configure message object */
 396:../Dave/Generated/src/CAN001/CAN001.c ****   for(Count = 0U; Count < Handle->NodeMONo; Count++)
 466              		.loc 1 396 0
 467 0084 4FF00003 		mov	r3, #0
 468 0088 7B61     		str	r3, [r7, #20]
 469 008a 27E0     		b	.L18
 470              	.L19:
 397:../Dave/Generated/src/CAN001/CAN001.c ****   {
 398:../Dave/Generated/src/CAN001/CAN001.c ****     CAN001_lAllocateMOtoNodeList(Handle->NodeID, (uint8_t)(Handle->FirstMOMapping + Count));
 471              		.loc 1 398 0 discriminator 2
 472 008c 7B68     		ldr	r3, [r7, #4]
 473 008e 1A7B     		ldrb	r2, [r3, #12]	@ zero_extendqisi2
 474 0090 7B68     		ldr	r3, [r7, #4]
 475 0092 997B     		ldrb	r1, [r3, #14]	@ zero_extendqisi2
 476 0094 7B69     		ldr	r3, [r7, #20]
 477 0096 DBB2     		uxtb	r3, r3
 478 0098 CB18     		adds	r3, r1, r3
 479 009a DBB2     		uxtb	r3, r3
 480 009c 1046     		mov	r0, r2
 481 009e 1946     		mov	r1, r3
 482 00a0 FFF7FEFF 		bl	CAN001_lAllocateMOtoNodeList
 399:../Dave/Generated/src/CAN001/CAN001.c ****     MsgNo = (uint8_t)(Handle->FirstMOMapping + Count);
 483              		.loc 1 399 0 discriminator 2
 484 00a4 7B68     		ldr	r3, [r7, #4]
 485 00a6 9A7B     		ldrb	r2, [r3, #14]	@ zero_extendqisi2
 486 00a8 7B69     		ldr	r3, [r7, #20]
 487 00aa DBB2     		uxtb	r3, r3
 488 00ac D318     		adds	r3, r2, r3
 489 00ae FB72     		strb	r3, [r7, #11]
 400:../Dave/Generated/src/CAN001/CAN001.c ****     CAN_MOxRegs = GET_MO_OFFSET(MsgNo);
 490              		.loc 1 400 0 discriminator 2
 491 00b0 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 492 00b2 03F11073 		add	r3, r3, #37748736
 493 00b6 03F52863 		add	r3, r3, #2688
 494 00ba 4FEA4313 		lsl	r3, r3, #5
 495 00be 3B61     		str	r3, [r7, #16]
 401:../Dave/Generated/src/CAN001/CAN001.c **** 	 /* Configure MPN */
 402:../Dave/Generated/src/CAN001/CAN001.c ****     CAN_MOxRegs->MOIPR = (((uint32_t)Handle->NodeID << \
 496              		.loc 1 402 0 discriminator 2
 497 00c0 7B68     		ldr	r3, [r7, #4]
 498 00c2 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 499 00c4 4FEA4332 		lsl	r2, r3, #13
 403:../Dave/Generated/src/CAN001/CAN001.c ****                           (CAN_MO_MOIPR_MPN_Pos + 5)) | \
 404:../Dave/Generated/src/CAN001/CAN001.c ****                           (Count << CAN_MO_MOIPR_MPN_Pos));
 500              		.loc 1 404 0 discriminator 2
 501 00c8 7B69     		ldr	r3, [r7, #20]
 502 00ca 4FEA0323 		lsl	r3, r3, #8
 403:../Dave/Generated/src/CAN001/CAN001.c ****                           (CAN_MO_MOIPR_MPN_Pos + 5)) | \
 503              		.loc 1 403 0 discriminator 2
 504 00ce 1A43     		orrs	r2, r2, r3
 402:../Dave/Generated/src/CAN001/CAN001.c ****     CAN_MOxRegs->MOIPR = (((uint32_t)Handle->NodeID << \
 505              		.loc 1 402 0 discriminator 2
 506 00d0 3B69     		ldr	r3, [r7, #16]
 507 00d2 9A60     		str	r2, [r3, #8]
 396:../Dave/Generated/src/CAN001/CAN001.c ****   for(Count = 0U; Count < Handle->NodeMONo; Count++)
 508              		.loc 1 396 0 discriminator 2
 509 00d4 7B69     		ldr	r3, [r7, #20]
 510 00d6 03F10103 		add	r3, r3, #1
 511 00da 7B61     		str	r3, [r7, #20]
 512              	.L18:
 396:../Dave/Generated/src/CAN001/CAN001.c ****   for(Count = 0U; Count < Handle->NodeMONo; Count++)
 513              		.loc 1 396 0 is_stmt 0 discriminator 1
 514 00dc 7B68     		ldr	r3, [r7, #4]
 515 00de DB7B     		ldrb	r3, [r3, #15]	@ zero_extendqisi2
 516 00e0 1A46     		mov	r2, r3
 517 00e2 7B69     		ldr	r3, [r7, #20]
 518 00e4 9A42     		cmp	r2, r3
 519 00e6 D1D8     		bhi	.L19
 405:../Dave/Generated/src/CAN001/CAN001.c ****   }
 406:../Dave/Generated/src/CAN001/CAN001.c **** 
 407:../Dave/Generated/src/CAN001/CAN001.c **** }
 520              		.loc 1 407 0 is_stmt 1
 521 00e8 07F11807 		add	r7, r7, #24
 522 00ec BD46     		mov	sp, r7
 523 00ee 80BD     		pop	{r7, pc}
 524              		.cfi_endproc
 525              	.LFE115:
 527              		.section	.text.CAN001_Init,"ax",%progbits
 528              		.align	2
 529              		.global	CAN001_Init
 530              		.thumb
 531              		.thumb_func
 533              	CAN001_Init:
 534              	.LFB116:
 408:../Dave/Generated/src/CAN001/CAN001.c ****  
 409:../Dave/Generated/src/CAN001/CAN001.c **** /*******************************************************************************
 410:../Dave/Generated/src/CAN001/CAN001.c **** **                      Public Function Definitions                           **
 411:../Dave/Generated/src/CAN001/CAN001.c **** *******************************************************************************/
 412:../Dave/Generated/src/CAN001/CAN001.c **** 
 413:../Dave/Generated/src/CAN001/CAN001.c **** 
 414:../Dave/Generated/src/CAN001/CAN001.c **** /** @ingroup CAN001_publicfunc
 415:../Dave/Generated/src/CAN001/CAN001.c ****  * @{
 416:../Dave/Generated/src/CAN001/CAN001.c ****  */
 417:../Dave/Generated/src/CAN001/CAN001.c **** 
 418:../Dave/Generated/src/CAN001/CAN001.c **** 
 419:../Dave/Generated/src/CAN001/CAN001.c **** /* This function will initialize node with the given handle */                 
 420:../Dave/Generated/src/CAN001/CAN001.c **** void CAN001_Init(void)
 421:../Dave/Generated/src/CAN001/CAN001.c **** {
 535              		.loc 1 421 0
 536              		.cfi_startproc
 537              		@ args = 0, pretend = 0, frame = 0
 538              		@ frame_needed = 1, uses_anonymous_args = 0
 539 0000 80B5     		push	{r7, lr}
 540              	.LCFI12:
 541              		.cfi_def_cfa_offset 8
 542              		.cfi_offset 7, -8
 543              		.cfi_offset 14, -4
 544 0002 00AF     		add	r7, sp, #0
 545              	.LCFI13:
 546              		.cfi_def_cfa_register 7
 422:../Dave/Generated/src/CAN001/CAN001.c ****    /* Calling CANGLOBAL App Initialization */
 423:../Dave/Generated/src/CAN001/CAN001.c ****    CANGLOBAL_Init();
 547              		.loc 1 423 0
 548 0004 FFF7FEFF 		bl	CANGLOBAL_Init
 424:../Dave/Generated/src/CAN001/CAN001.c **** 
 425:../Dave/Generated/src/CAN001/CAN001.c ****    /* Node2 initialization */
 426:../Dave/Generated/src/CAN001/CAN001.c ****    CAN001_lNodeInit(&CAN001_Handle0);
 549              		.loc 1 426 0
 550 0008 40F20000 		movw	r0, #:lower16:CAN001_Handle0
 551 000c C0F20000 		movt	r0, #:upper16:CAN001_Handle0
 552 0010 FFF7FEFF 		bl	CAN001_lNodeInit
 427:../Dave/Generated/src/CAN001/CAN001.c ****    /* LMO1 Initialization */
 428:../Dave/Generated/src/CAN001/CAN001.c ****    (void)CAN001_ConfigMsgObj(&CAN001_Handle0,&CAN001_MessageHandle0_1,1U);
 553              		.loc 1 428 0
 554 0014 40F20000 		movw	r0, #:lower16:CAN001_Handle0
 555 0018 C0F20000 		movt	r0, #:upper16:CAN001_Handle0
 556 001c 40F20001 		movw	r1, #:lower16:CAN001_MessageHandle0_1
 557 0020 C0F20001 		movt	r1, #:upper16:CAN001_MessageHandle0_1
 558 0024 4FF00102 		mov	r2, #1
 559 0028 FFF7FEFF 		bl	CAN001_ConfigMsgObj
 429:../Dave/Generated/src/CAN001/CAN001.c ****    /* LMO2 Initialization */
 430:../Dave/Generated/src/CAN001/CAN001.c ****    (void)CAN001_ConfigMsgObj(&CAN001_Handle0,&CAN001_MessageHandle0_2,2U);
 560              		.loc 1 430 0
 561 002c 40F20000 		movw	r0, #:lower16:CAN001_Handle0
 562 0030 C0F20000 		movt	r0, #:upper16:CAN001_Handle0
 563 0034 40F20001 		movw	r1, #:lower16:CAN001_MessageHandle0_2
 564 0038 C0F20001 		movt	r1, #:upper16:CAN001_MessageHandle0_2
 565 003c 4FF00202 		mov	r2, #2
 566 0040 FFF7FEFF 		bl	CAN001_ConfigMsgObj
 431:../Dave/Generated/src/CAN001/CAN001.c ****    /* LMO3 Initialization */
 432:../Dave/Generated/src/CAN001/CAN001.c ****    (void)CAN001_ConfigMsgObj(&CAN001_Handle0,&CAN001_MessageHandle0_3,3U);
 567              		.loc 1 432 0
 568 0044 40F20000 		movw	r0, #:lower16:CAN001_Handle0
 569 0048 C0F20000 		movt	r0, #:upper16:CAN001_Handle0
 570 004c 40F20001 		movw	r1, #:lower16:CAN001_MessageHandle0_3
 571 0050 C0F20001 		movt	r1, #:upper16:CAN001_MessageHandle0_3
 572 0054 4FF00302 		mov	r2, #3
 573 0058 FFF7FEFF 		bl	CAN001_ConfigMsgObj
 433:../Dave/Generated/src/CAN001/CAN001.c ****    /* LMO4 Initialization */
 434:../Dave/Generated/src/CAN001/CAN001.c ****    (void)CAN001_ConfigMsgObj(&CAN001_Handle0,&CAN001_MessageHandle0_4,4U);
 574              		.loc 1 434 0
 575 005c 40F20000 		movw	r0, #:lower16:CAN001_Handle0
 576 0060 C0F20000 		movt	r0, #:upper16:CAN001_Handle0
 577 0064 40F20001 		movw	r1, #:lower16:CAN001_MessageHandle0_4
 578 0068 C0F20001 		movt	r1, #:upper16:CAN001_MessageHandle0_4
 579 006c 4FF00402 		mov	r2, #4
 580 0070 FFF7FEFF 		bl	CAN001_ConfigMsgObj
 435:../Dave/Generated/src/CAN001/CAN001.c ****    /* LMO5 Initialization */
 436:../Dave/Generated/src/CAN001/CAN001.c ****    (void)CAN001_ConfigMsgObj(&CAN001_Handle0,&CAN001_MessageHandle0_5,5U);
 581              		.loc 1 436 0
 582 0074 40F20000 		movw	r0, #:lower16:CAN001_Handle0
 583 0078 C0F20000 		movt	r0, #:upper16:CAN001_Handle0
 584 007c 40F20001 		movw	r1, #:lower16:CAN001_MessageHandle0_5
 585 0080 C0F20001 		movt	r1, #:upper16:CAN001_MessageHandle0_5
 586 0084 4FF00502 		mov	r2, #5
 587 0088 FFF7FEFF 		bl	CAN001_ConfigMsgObj
 437:../Dave/Generated/src/CAN001/CAN001.c ****    /* LMO6 Initialization */
 438:../Dave/Generated/src/CAN001/CAN001.c ****    (void)CAN001_ConfigMsgObj(&CAN001_Handle0,&CAN001_MessageHandle0_6,6U);
 588              		.loc 1 438 0
 589 008c 40F20000 		movw	r0, #:lower16:CAN001_Handle0
 590 0090 C0F20000 		movt	r0, #:upper16:CAN001_Handle0
 591 0094 40F20001 		movw	r1, #:lower16:CAN001_MessageHandle0_6
 592 0098 C0F20001 		movt	r1, #:upper16:CAN001_MessageHandle0_6
 593 009c 4FF00602 		mov	r2, #6
 594 00a0 FFF7FEFF 		bl	CAN001_ConfigMsgObj
 439:../Dave/Generated/src/CAN001/CAN001.c ****    /* LMO7 Initialization */
 440:../Dave/Generated/src/CAN001/CAN001.c ****    (void)CAN001_ConfigMsgObj(&CAN001_Handle0,&CAN001_MessageHandle0_7,7U);
 595              		.loc 1 440 0
 596 00a4 40F20000 		movw	r0, #:lower16:CAN001_Handle0
 597 00a8 C0F20000 		movt	r0, #:upper16:CAN001_Handle0
 598 00ac 40F20001 		movw	r1, #:lower16:CAN001_MessageHandle0_7
 599 00b0 C0F20001 		movt	r1, #:upper16:CAN001_MessageHandle0_7
 600 00b4 4FF00702 		mov	r2, #7
 601 00b8 FFF7FEFF 		bl	CAN001_ConfigMsgObj
 441:../Dave/Generated/src/CAN001/CAN001.c ****    /* LMO8 Initialization */
 442:../Dave/Generated/src/CAN001/CAN001.c ****    (void)CAN001_ConfigMsgObj(&CAN001_Handle0,&CAN001_MessageHandle0_8,8U);
 602              		.loc 1 442 0
 603 00bc 40F20000 		movw	r0, #:lower16:CAN001_Handle0
 604 00c0 C0F20000 		movt	r0, #:upper16:CAN001_Handle0
 605 00c4 40F20001 		movw	r1, #:lower16:CAN001_MessageHandle0_8
 606 00c8 C0F20001 		movt	r1, #:upper16:CAN001_MessageHandle0_8
 607 00cc 4FF00802 		mov	r2, #8
 608 00d0 FFF7FEFF 		bl	CAN001_ConfigMsgObj
 443:../Dave/Generated/src/CAN001/CAN001.c ****    /* LMO9 Initialization */
 444:../Dave/Generated/src/CAN001/CAN001.c ****    (void)CAN001_ConfigMsgObj(&CAN001_Handle0,&CAN001_MessageHandle0_9,9U);
 609              		.loc 1 444 0
 610 00d4 40F20000 		movw	r0, #:lower16:CAN001_Handle0
 611 00d8 C0F20000 		movt	r0, #:upper16:CAN001_Handle0
 612 00dc 40F20001 		movw	r1, #:lower16:CAN001_MessageHandle0_9
 613 00e0 C0F20001 		movt	r1, #:upper16:CAN001_MessageHandle0_9
 614 00e4 4FF00902 		mov	r2, #9
 615 00e8 FFF7FEFF 		bl	CAN001_ConfigMsgObj
 445:../Dave/Generated/src/CAN001/CAN001.c ****    /* LMO10 Initialization */
 446:../Dave/Generated/src/CAN001/CAN001.c ****    (void)CAN001_ConfigMsgObj(&CAN001_Handle0,&CAN001_MessageHandle0_10,10U);
 616              		.loc 1 446 0
 617 00ec 40F20000 		movw	r0, #:lower16:CAN001_Handle0
 618 00f0 C0F20000 		movt	r0, #:upper16:CAN001_Handle0
 619 00f4 40F20001 		movw	r1, #:lower16:CAN001_MessageHandle0_10
 620 00f8 C0F20001 		movt	r1, #:upper16:CAN001_MessageHandle0_10
 621 00fc 4FF00A02 		mov	r2, #10
 622 0100 FFF7FEFF 		bl	CAN001_ConfigMsgObj
 447:../Dave/Generated/src/CAN001/CAN001.c ****   
 448:../Dave/Generated/src/CAN001/CAN001.c **** }
 623              		.loc 1 448 0
 624 0104 80BD     		pop	{r7, pc}
 625              		.cfi_endproc
 626              	.LFE116:
 628 0106 00BF     		.section	.text.CAN001_NodeDeInit,"ax",%progbits
 629              		.align	2
 630              		.global	CAN001_NodeDeInit
 631              		.thumb
 632              		.thumb_func
 634              	CAN001_NodeDeInit:
 635              	.LFB117:
 449:../Dave/Generated/src/CAN001/CAN001.c ****   
 450:../Dave/Generated/src/CAN001/CAN001.c ****        
 451:../Dave/Generated/src/CAN001/CAN001.c ****   
 452:../Dave/Generated/src/CAN001/CAN001.c **** /* This function will deinitialize node with the given handle */
 453:../Dave/Generated/src/CAN001/CAN001.c **** /*<<<DD_CAN001_API_2>>>*/ 
 454:../Dave/Generated/src/CAN001/CAN001.c **** void CAN001_NodeDeInit(const CAN001_HandleType* Handle)
 455:../Dave/Generated/src/CAN001/CAN001.c **** {
 636              		.loc 1 455 0
 637              		.cfi_startproc
 638              		@ args = 0, pretend = 0, frame = 32
 639              		@ frame_needed = 1, uses_anonymous_args = 0
 640 0000 80B5     		push	{r7, lr}
 641              	.LCFI14:
 642              		.cfi_def_cfa_offset 8
 643              		.cfi_offset 7, -8
 644              		.cfi_offset 14, -4
 645 0002 88B0     		sub	sp, sp, #32
 646              	.LCFI15:
 647              		.cfi_def_cfa_offset 40
 648 0004 00AF     		add	r7, sp, #0
 649              	.LCFI16:
 650              		.cfi_def_cfa_register 7
 651 0006 7860     		str	r0, [r7, #4]
 456:../Dave/Generated/src/CAN001/CAN001.c ****   int32_t Count = 0;
 652              		.loc 1 456 0
 653 0008 4FF00003 		mov	r3, #0
 654 000c FB61     		str	r3, [r7, #28]
 457:../Dave/Generated/src/CAN001/CAN001.c ****   uint8_t MsgNo;
 458:../Dave/Generated/src/CAN001/CAN001.c ****   uint32_t*	MsgPndRegOffset = 0;
 655              		.loc 1 458 0
 656 000e 4FF00003 		mov	r3, #0
 657 0012 BB61     		str	r3, [r7, #24]
 459:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_MO_TypeDef* CAN_MOxRegs = CAN_MO0;
 658              		.loc 1 459 0
 659 0014 4FF4A043 		mov	r3, #20480
 660 0018 C4F60103 		movt	r3, 18433
 661 001c 7B61     		str	r3, [r7, #20]
 460:../Dave/Generated/src/CAN001/CAN001.c ****   /* Map to node register offser as per node ID */
 461:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_NODE_TypeDef* CAN_NodexRegs = Handle->CanNodeRegs;
 662              		.loc 1 461 0
 663 001e 7B68     		ldr	r3, [r7, #4]
 664 0020 9B68     		ldr	r3, [r3, #8]
 665 0022 3B61     		str	r3, [r7, #16]
 462:../Dave/Generated/src/CAN001/CAN001.c **** 
 463:../Dave/Generated/src/CAN001/CAN001.c ****   /* Reset all message object registers and deallocate to free list */
 464:../Dave/Generated/src/CAN001/CAN001.c ****   for(Count = (int32_t)(Handle->NodeMONo)-1; Count >= 0; Count--)
 666              		.loc 1 464 0
 667 0024 7B68     		ldr	r3, [r7, #4]
 668 0026 DB7B     		ldrb	r3, [r3, #15]	@ zero_extendqisi2
 669 0028 03F1FF33 		add	r3, r3, #-1
 670 002c FB61     		str	r3, [r7, #28]
 671 002e 36E0     		b	.L22
 672              	.L23:
 465:../Dave/Generated/src/CAN001/CAN001.c ****   {
 466:../Dave/Generated/src/CAN001/CAN001.c **** 	MsgNo = (uint8_t)(Handle->FirstMOMapping+(uint32_t)Count);
 673              		.loc 1 466 0 discriminator 2
 674 0030 7B68     		ldr	r3, [r7, #4]
 675 0032 9A7B     		ldrb	r2, [r3, #14]	@ zero_extendqisi2
 676 0034 FB69     		ldr	r3, [r7, #28]
 677 0036 DBB2     		uxtb	r3, r3
 678 0038 D318     		adds	r3, r2, r3
 679 003a FB73     		strb	r3, [r7, #15]
 467:../Dave/Generated/src/CAN001/CAN001.c ****     /* Mapping to message object offset value*/
 468:../Dave/Generated/src/CAN001/CAN001.c ****     CAN_MOxRegs = GET_MO_OFFSET(MsgNo);
 680              		.loc 1 468 0 discriminator 2
 681 003c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 682 003e 03F11073 		add	r3, r3, #37748736
 683 0042 03F52863 		add	r3, r3, #2688
 684 0046 4FEA4313 		lsl	r3, r3, #5
 685 004a 7B61     		str	r3, [r7, #20]
 469:../Dave/Generated/src/CAN001/CAN001.c ****     /* Reset all message objects registers */
 470:../Dave/Generated/src/CAN001/CAN001.c ****     CAN_MOxRegs->MOFCR =  (0x00000000U);			 		
 686              		.loc 1 470 0 discriminator 2
 687 004c 7B69     		ldr	r3, [r7, #20]
 688 004e 4FF00002 		mov	r2, #0
 689 0052 1A60     		str	r2, [r3, #0]
 471:../Dave/Generated/src/CAN001/CAN001.c ****     CAN_MOxRegs->MOIPR &= (0x000000FFU);			 
 690              		.loc 1 471 0 discriminator 2
 691 0054 7B69     		ldr	r3, [r7, #20]
 692 0056 9B68     		ldr	r3, [r3, #8]
 693 0058 DAB2     		uxtb	r2, r3
 694 005a 7B69     		ldr	r3, [r7, #20]
 695 005c 9A60     		str	r2, [r3, #8]
 472:../Dave/Generated/src/CAN001/CAN001.c ****     CAN_MOxRegs->MOAMR = (0x3FFFFFFFU);			 
 696              		.loc 1 472 0 discriminator 2
 697 005e 7B69     		ldr	r3, [r7, #20]
 698 0060 6FF04042 		mvn	r2, #-1073741824
 699 0064 DA60     		str	r2, [r3, #12]
 473:../Dave/Generated/src/CAN001/CAN001.c ****     CAN_MOxRegs->MODATAL = (0x00000000U);	
 700              		.loc 1 473 0 discriminator 2
 701 0066 7B69     		ldr	r3, [r7, #20]
 702 0068 4FF00002 		mov	r2, #0
 703 006c 1A61     		str	r2, [r3, #16]
 474:../Dave/Generated/src/CAN001/CAN001.c ****     CAN_MOxRegs->MODATAH = (0x00000000U);	
 704              		.loc 1 474 0 discriminator 2
 705 006e 7B69     		ldr	r3, [r7, #20]
 706 0070 4FF00002 		mov	r2, #0
 707 0074 5A61     		str	r2, [r3, #20]
 475:../Dave/Generated/src/CAN001/CAN001.c ****     CAN_MOxRegs->MOAR = (0x00000000U);   
 708              		.loc 1 475 0 discriminator 2
 709 0076 7B69     		ldr	r3, [r7, #20]
 710 0078 4FF00002 		mov	r2, #0
 711 007c 9A61     		str	r2, [r3, #24]
 476:../Dave/Generated/src/CAN001/CAN001.c ****     CAN_MOxRegs->MOCTR = (0x00000FFFU);
 712              		.loc 1 476 0 discriminator 2
 713 007e 7B69     		ldr	r3, [r7, #20]
 714 0080 40F6FF72 		movw	r2, #4095
 715 0084 DA61     		str	r2, [r3, #28]
 477:../Dave/Generated/src/CAN001/CAN001.c ****     CAN001_lDeallocateMsgObj(Handle->FirstMOMapping+(uint32_t)Count);
 716              		.loc 1 477 0 discriminator 2
 717 0086 7B68     		ldr	r3, [r7, #4]
 718 0088 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
 719 008a 1A46     		mov	r2, r3
 720 008c FB69     		ldr	r3, [r7, #28]
 721 008e D318     		adds	r3, r2, r3
 722 0090 1846     		mov	r0, r3
 723 0092 FFF7FEFF 		bl	CAN001_lDeallocateMsgObj
 464:../Dave/Generated/src/CAN001/CAN001.c ****   for(Count = (int32_t)(Handle->NodeMONo)-1; Count >= 0; Count--)
 724              		.loc 1 464 0 discriminator 2
 725 0096 FB69     		ldr	r3, [r7, #28]
 726 0098 03F1FF33 		add	r3, r3, #-1
 727 009c FB61     		str	r3, [r7, #28]
 728              	.L22:
 464:../Dave/Generated/src/CAN001/CAN001.c ****   for(Count = (int32_t)(Handle->NodeMONo)-1; Count >= 0; Count--)
 729              		.loc 1 464 0 is_stmt 0 discriminator 1
 730 009e FB69     		ldr	r3, [r7, #28]
 731 00a0 002B     		cmp	r3, #0
 732 00a2 C5DA     		bge	.L23
 478:../Dave/Generated/src/CAN001/CAN001.c ****   }
 479:../Dave/Generated/src/CAN001/CAN001.c ****   /* set CCE and INIT bit NCR for disconnecting the node */
 480:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_NodexRegs->NCR = (0x00000041U);
 733              		.loc 1 480 0 is_stmt 1
 734 00a4 3B69     		ldr	r3, [r7, #16]
 735 00a6 4FF04102 		mov	r2, #65
 736 00aa 1A60     		str	r2, [r3, #0]
 481:../Dave/Generated/src/CAN001/CAN001.c ****   /* reset all node registers */
 482:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_NodexRegs->NSR = (0x00000000U);
 737              		.loc 1 482 0
 738 00ac 3B69     		ldr	r3, [r7, #16]
 739 00ae 4FF00002 		mov	r2, #0
 740 00b2 5A60     		str	r2, [r3, #4]
 483:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_NodexRegs->NPCR &= (0x0000000FU);
 741              		.loc 1 483 0
 742 00b4 3B69     		ldr	r3, [r7, #16]
 743 00b6 DB68     		ldr	r3, [r3, #12]
 744 00b8 03F00F02 		and	r2, r3, #15
 745 00bc 3B69     		ldr	r3, [r7, #16]
 746 00be DA60     		str	r2, [r3, #12]
 484:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_NodexRegs->NECNT = (0x00600000U);
 747              		.loc 1 484 0
 748 00c0 3B69     		ldr	r3, [r7, #16]
 749 00c2 4FF4C002 		mov	r2, #6291456
 750 00c6 5A61     		str	r2, [r3, #20]
 485:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_NodexRegs->NFCR = (0x00000000U);
 751              		.loc 1 485 0
 752 00c8 3B69     		ldr	r3, [r7, #16]
 753 00ca 4FF00002 		mov	r2, #0
 754 00ce 9A61     		str	r2, [r3, #24]
 486:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_NodexRegs->NBTR = (0x00000000U);
 755              		.loc 1 486 0
 756 00d0 3B69     		ldr	r3, [r7, #16]
 757 00d2 4FF00002 		mov	r2, #0
 758 00d6 1A61     		str	r2, [r3, #16]
 487:../Dave/Generated/src/CAN001/CAN001.c ****   MsgPndRegOffset = GET_MSGPND_OFFSET(Handle->NodeID);
 759              		.loc 1 487 0
 760 00d8 7B68     		ldr	r3, [r7, #4]
 761 00da 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 762 00dc 1A46     		mov	r2, r3
 763 00de 45F25003 		movw	r3, #20560
 764 00e2 C1F20023 		movt	r3, 4608
 765 00e6 D318     		adds	r3, r2, r3
 766 00e8 4FEA8303 		lsl	r3, r3, #2
 767 00ec BB61     		str	r3, [r7, #24]
 488:../Dave/Generated/src/CAN001/CAN001.c ****   (*MsgPndRegOffset) = (0x00000000U);
 768              		.loc 1 488 0
 769 00ee BB69     		ldr	r3, [r7, #24]
 770 00f0 4FF00002 		mov	r2, #0
 771 00f4 1A60     		str	r2, [r3, #0]
 489:../Dave/Generated/src/CAN001/CAN001.c ****   
 490:../Dave/Generated/src/CAN001/CAN001.c **** }    
 772              		.loc 1 490 0
 773 00f6 07F12007 		add	r7, r7, #32
 774 00fa BD46     		mov	sp, r7
 775 00fc 80BD     		pop	{r7, pc}
 776              		.cfi_endproc
 777              	.LFE117:
 779 00fe 00BF     		.section	.text.CAN001_ConfigMsgObj,"ax",%progbits
 780              		.align	2
 781              		.global	CAN001_ConfigMsgObj
 782              		.thumb
 783              		.thumb_func
 785              	CAN001_ConfigMsgObj:
 786              	.LFB118:
 491:../Dave/Generated/src/CAN001/CAN001.c ****  /* 		
 492:../Dave/Generated/src/CAN001/CAN001.c ****  *  			 This function is will configure message object as per the message handle
 493:../Dave/Generated/src/CAN001/CAN001.c ****  *  passed to the function. Function will either Enable or Disable as per
 494:../Dave/Generated/src/CAN001/CAN001.c ****  *  input parameter
 495:../Dave/Generated/src/CAN001/CAN001.c ****  */
 496:../Dave/Generated/src/CAN001/CAN001.c **** 
 497:../Dave/Generated/src/CAN001/CAN001.c **** status_t CAN001_ConfigMsgObj
 498:../Dave/Generated/src/CAN001/CAN001.c **** (
 499:../Dave/Generated/src/CAN001/CAN001.c ****   const CAN001_HandleType* Handle, 
 500:../Dave/Generated/src/CAN001/CAN001.c ****   const CAN001_MessageHandleType* SwMsgObjptr,
 501:../Dave/Generated/src/CAN001/CAN001.c ****   uint8_t MsgObjnr
 502:../Dave/Generated/src/CAN001/CAN001.c ****  )
 503:../Dave/Generated/src/CAN001/CAN001.c **** {
 787              		.loc 1 503 0
 788              		.cfi_startproc
 789              		@ args = 0, pretend = 0, frame = 32
 790              		@ frame_needed = 1, uses_anonymous_args = 0
 791 0000 80B5     		push	{r7, lr}
 792              	.LCFI17:
 793              		.cfi_def_cfa_offset 8
 794              		.cfi_offset 7, -8
 795              		.cfi_offset 14, -4
 796 0002 88B0     		sub	sp, sp, #32
 797              	.LCFI18:
 798              		.cfi_def_cfa_offset 40
 799 0004 00AF     		add	r7, sp, #0
 800              	.LCFI19:
 801              		.cfi_def_cfa_register 7
 802 0006 F860     		str	r0, [r7, #12]
 803 0008 B960     		str	r1, [r7, #8]
 804 000a 1346     		mov	r3, r2
 805 000c FB71     		strb	r3, [r7, #7]
 504:../Dave/Generated/src/CAN001/CAN001.c ****   uint32_t Error = (uint32_t)CAN001_MO_NOT_FOUND;
 806              		.loc 1 504 0
 807 000e 4FF00203 		mov	r3, #2
 808 0012 FB61     		str	r3, [r7, #28]
 505:../Dave/Generated/src/CAN001/CAN001.c ****   uint8_t MsgNo = (uint8_t)(Handle->FirstMOMapping+(MsgObjnr-1U));
 809              		.loc 1 505 0
 810 0014 FB68     		ldr	r3, [r7, #12]
 811 0016 9A7B     		ldrb	r2, [r3, #14]	@ zero_extendqisi2
 812 0018 FB79     		ldrb	r3, [r7, #7]
 813 001a D318     		adds	r3, r2, r3
 814 001c DBB2     		uxtb	r3, r3
 815 001e 03F1FF33 		add	r3, r3, #-1
 816 0022 FB76     		strb	r3, [r7, #27]
 506:../Dave/Generated/src/CAN001/CAN001.c **** 	/* Mapping to message object offset value*/
 507:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_MO_TypeDef* CAN_MOxRegs = \
 508:../Dave/Generated/src/CAN001/CAN001.c ****                       GET_MO_OFFSET(MsgNo);
 817              		.loc 1 508 0
 818 0024 FB7E     		ldrb	r3, [r7, #27]	@ zero_extendqisi2
 819 0026 03F11073 		add	r3, r3, #37748736
 820 002a 03F52863 		add	r3, r3, #2688
 821 002e 4FEA4313 		lsl	r3, r3, #5
 507:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_MO_TypeDef* CAN_MOxRegs = \
 822              		.loc 1 507 0
 823 0032 7B61     		str	r3, [r7, #20]
 509:../Dave/Generated/src/CAN001/CAN001.c ****                       
 510:../Dave/Generated/src/CAN001/CAN001.c ****   DBG002_N((MsgObjnr == 0U)||(MsgObjnr > Handle->NodeMONo));
 511:../Dave/Generated/src/CAN001/CAN001.c ****     
 512:../Dave/Generated/src/CAN001/CAN001.c ****   if (((SwMsgObjptr->IDExten != (uint8_t)STANDARDTYPE) && \
 824              		.loc 1 512 0
 825 0034 BB68     		ldr	r3, [r7, #8]
 826 0036 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 827 0038 002B     		cmp	r3, #0
 828 003a 03D0     		beq	.L25
 513:../Dave/Generated/src/CAN001/CAN001.c ****                                         (SwMsgObjptr->IDExten != (uint8_t)EXTENDEDTYPE))
 829              		.loc 1 513 0 discriminator 1
 830 003c BB68     		ldr	r3, [r7, #8]
 831 003e 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 512:../Dave/Generated/src/CAN001/CAN001.c ****   if (((SwMsgObjptr->IDExten != (uint8_t)STANDARDTYPE) && \
 832              		.loc 1 512 0 discriminator 1
 833 0040 012B     		cmp	r3, #1
 834 0042 0FD1     		bne	.L26
 835              	.L25:
 514:../Dave/Generated/src/CAN001/CAN001.c ****     ||((SwMsgObjptr->MsgObjEN != CAN001_ENABLE) && (SwMsgObjptr->MsgObjEN != CAN001_DISABLE))
 836              		.loc 1 514 0
 837 0044 BB68     		ldr	r3, [r7, #8]
 838 0046 DB7C     		ldrb	r3, [r3, #19]	@ zero_extendqisi2
 839 0048 012B     		cmp	r3, #1
 840 004a 03D0     		beq	.L27
 841              		.loc 1 514 0 is_stmt 0 discriminator 1
 842 004c BB68     		ldr	r3, [r7, #8]
 843 004e DB7C     		ldrb	r3, [r3, #19]	@ zero_extendqisi2
 844 0050 002B     		cmp	r3, #0
 845 0052 07D1     		bne	.L26
 846              	.L27:
 515:../Dave/Generated/src/CAN001/CAN001.c ****     ||((SwMsgObjptr->MsgObjType != RECMSGOBJ) && (SwMsgObjptr->MsgObjType != TRANSMSGOBJ)))
 847              		.loc 1 515 0 is_stmt 1
 848 0054 BB68     		ldr	r3, [r7, #8]
 849 0056 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 850 0058 002B     		cmp	r3, #0
 851 005a 07D0     		beq	.L28
 852              		.loc 1 515 0 is_stmt 0 discriminator 1
 853 005c BB68     		ldr	r3, [r7, #8]
 854 005e 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 855 0060 012B     		cmp	r3, #1
 856 0062 03D0     		beq	.L28
 857              	.L26:
 516:../Dave/Generated/src/CAN001/CAN001.c ****   {
 517:../Dave/Generated/src/CAN001/CAN001.c ****     Error =  (uint32_t)CAN001_INVALID_INPUT;
 858              		.loc 1 517 0 is_stmt 1
 859 0064 4FF00603 		mov	r3, #6
 860 0068 FB61     		str	r3, [r7, #28]
 861 006a 1AE0     		b	.L29
 862              	.L28:
 518:../Dave/Generated/src/CAN001/CAN001.c ****     ERROR(DBG002_GID_CAN001,Error, 0, NULL);
 519:../Dave/Generated/src/CAN001/CAN001.c ****   }
 520:../Dave/Generated/src/CAN001/CAN001.c ****   /* check if message object is to be disabled */
 521:../Dave/Generated/src/CAN001/CAN001.c ****   /*<<<DD_CAN001_API_3_1>>>*/
 522:../Dave/Generated/src/CAN001/CAN001.c ****   else if (SwMsgObjptr->MsgObjEN == CAN001_DISABLE)
 863              		.loc 1 522 0
 864 006c BB68     		ldr	r3, [r7, #8]
 865 006e DB7C     		ldrb	r3, [r3, #19]	@ zero_extendqisi2
 866 0070 002B     		cmp	r3, #0
 867 0072 07D1     		bne	.L30
 523:../Dave/Generated/src/CAN001/CAN001.c ****   {
 524:../Dave/Generated/src/CAN001/CAN001.c ****     /* Reset MSGVAL bit */
 525:../Dave/Generated/src/CAN001/CAN001.c ****     CAN_MOxRegs->MOCTR = CAN_MO_MOCTR_RESMSGVAL_Msk;
 868              		.loc 1 525 0
 869 0074 7B69     		ldr	r3, [r7, #20]
 870 0076 4FF02002 		mov	r2, #32
 871 007a DA61     		str	r2, [r3, #28]
 526:../Dave/Generated/src/CAN001/CAN001.c ****     Error = (uint32_t)DAVEApp_SUCCESS;
 872              		.loc 1 526 0
 873 007c 4FF00003 		mov	r3, #0
 874 0080 FB61     		str	r3, [r7, #28]
 875 0082 0EE0     		b	.L29
 876              	.L30:
 527:../Dave/Generated/src/CAN001/CAN001.c ****   } /* if (SwMsgObjptr->MsgObjEN == CAN001_DISABLE) */
 528:../Dave/Generated/src/CAN001/CAN001.c ****   else
 529:../Dave/Generated/src/CAN001/CAN001.c ****   {
 530:../Dave/Generated/src/CAN001/CAN001.c ****     CAN001_lConfigMORegs(SwMsgObjptr, (uint8_t)(Handle->FirstMOMapping+(MsgObjnr-1U)));
 877              		.loc 1 530 0
 878 0084 FB68     		ldr	r3, [r7, #12]
 879 0086 9A7B     		ldrb	r2, [r3, #14]	@ zero_extendqisi2
 880 0088 FB79     		ldrb	r3, [r7, #7]
 881 008a D318     		adds	r3, r2, r3
 882 008c DBB2     		uxtb	r3, r3
 883 008e 03F1FF33 		add	r3, r3, #-1
 884 0092 DBB2     		uxtb	r3, r3
 885 0094 B868     		ldr	r0, [r7, #8]
 886 0096 1946     		mov	r1, r3
 887 0098 FFF7FEFF 		bl	CAN001_lConfigMORegs
 531:../Dave/Generated/src/CAN001/CAN001.c ****     Error = (uint32_t)DAVEApp_SUCCESS;
 888              		.loc 1 531 0
 889 009c 4FF00003 		mov	r3, #0
 890 00a0 FB61     		str	r3, [r7, #28]
 891              	.L29:
 532:../Dave/Generated/src/CAN001/CAN001.c ****   } /*if (SwMsgObjptr->MsgObjEN == CAN001_ENABLE)*/
 533:../Dave/Generated/src/CAN001/CAN001.c ****   
 534:../Dave/Generated/src/CAN001/CAN001.c ****   return Error;
 892              		.loc 1 534 0
 893 00a2 FB69     		ldr	r3, [r7, #28]
 535:../Dave/Generated/src/CAN001/CAN001.c **** }
 894              		.loc 1 535 0
 895 00a4 1846     		mov	r0, r3
 896 00a6 07F12007 		add	r7, r7, #32
 897 00aa BD46     		mov	sp, r7
 898 00ac 80BD     		pop	{r7, pc}
 899              		.cfi_endproc
 900              	.LFE118:
 902 00ae 00BF     		.section	.text.CAN001_SendDataFrame,"ax",%progbits
 903              		.align	2
 904              		.global	CAN001_SendDataFrame
 905              		.thumb
 906              		.thumb_func
 908              	CAN001_SendDataFrame:
 909              	.LFB119:
 536:../Dave/Generated/src/CAN001/CAN001.c **** 	
 537:../Dave/Generated/src/CAN001/CAN001.c **** 
 538:../Dave/Generated/src/CAN001/CAN001.c ****  /*
 539:../Dave/Generated/src/CAN001/CAN001.c ****  *	This function is will put a transmit request to transmit message object 
 540:../Dave/Generated/src/CAN001/CAN001.c ****  *  for sending data frame
 541:../Dave/Generated/src/CAN001/CAN001.c ****  */
 542:../Dave/Generated/src/CAN001/CAN001.c **** 
 543:../Dave/Generated/src/CAN001/CAN001.c ****  
 544:../Dave/Generated/src/CAN001/CAN001.c **** status_t CAN001_SendDataFrame(const CAN001_HandleType* Handle, uint8_t MsgObjnr)
 545:../Dave/Generated/src/CAN001/CAN001.c **** {
 910              		.loc 1 545 0
 911              		.cfi_startproc
 912              		@ args = 0, pretend = 0, frame = 24
 913              		@ frame_needed = 1, uses_anonymous_args = 0
 914              		@ link register save eliminated.
 915 0000 80B4     		push	{r7}
 916              	.LCFI20:
 917              		.cfi_def_cfa_offset 4
 918              		.cfi_offset 7, -4
 919 0002 87B0     		sub	sp, sp, #28
 920              	.LCFI21:
 921              		.cfi_def_cfa_offset 32
 922 0004 00AF     		add	r7, sp, #0
 923              	.LCFI22:
 924              		.cfi_def_cfa_register 7
 925 0006 7860     		str	r0, [r7, #4]
 926 0008 0B46     		mov	r3, r1
 927 000a FB70     		strb	r3, [r7, #3]
 546:../Dave/Generated/src/CAN001/CAN001.c ****   uint32_t Error = (uint32_t)CAN001_ERROR;
 928              		.loc 1 546 0
 929 000c 4FF00503 		mov	r3, #5
 930 0010 7B61     		str	r3, [r7, #20]
 547:../Dave/Generated/src/CAN001/CAN001.c ****   uint8_t MsgNo = (uint8_t)(Handle->FirstMOMapping+(MsgObjnr-1U));
 931              		.loc 1 547 0
 932 0012 7B68     		ldr	r3, [r7, #4]
 933 0014 9A7B     		ldrb	r2, [r3, #14]	@ zero_extendqisi2
 934 0016 FB78     		ldrb	r3, [r7, #3]
 935 0018 D318     		adds	r3, r2, r3
 936 001a DBB2     		uxtb	r3, r3
 937 001c 03F1FF33 		add	r3, r3, #-1
 938 0020 FB74     		strb	r3, [r7, #19]
 548:../Dave/Generated/src/CAN001/CAN001.c ****   /* Mapping to message object offset value*/
 549:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_MO_TypeDef* CAN_MOxRegs = \
 550:../Dave/Generated/src/CAN001/CAN001.c ****                   GET_MO_OFFSET(MsgNo);
 939              		.loc 1 550 0
 940 0022 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 941 0024 03F11073 		add	r3, r3, #37748736
 942 0028 03F52863 		add	r3, r3, #2688
 943 002c 4FEA4313 		lsl	r3, r3, #5
 549:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_MO_TypeDef* CAN_MOxRegs = \
 944              		.loc 1 549 0
 945 0030 FB60     		str	r3, [r7, #12]
 551:../Dave/Generated/src/CAN001/CAN001.c ****   
 552:../Dave/Generated/src/CAN001/CAN001.c ****   DBG002_N((MsgObjnr == 0U)||(MsgObjnr > Handle->NodeMONo));
 553:../Dave/Generated/src/CAN001/CAN001.c ****   /* check if message object is not a transmit message object */
 554:../Dave/Generated/src/CAN001/CAN001.c ****   /*<<<DD_CAN001_API_4_1>>>*/
 555:../Dave/Generated/src/CAN001/CAN001.c ****   if( RD_REG(CAN_MOxRegs->MOSTAT, CAN_MO_MOSTAT_DIR_Msk, \
 946              		.loc 1 555 0
 947 0032 FB68     		ldr	r3, [r7, #12]
 948 0034 DB69     		ldr	r3, [r3, #28]
 949 0036 03F40063 		and	r3, r3, #2048
 950 003a 4FEAD323 		lsr	r3, r3, #11
 951 003e 012B     		cmp	r3, #1
 952 0040 03D0     		beq	.L33
 556:../Dave/Generated/src/CAN001/CAN001.c ****                                         CAN_MO_MOSTAT_DIR_Pos) != (uint32_t)TRANSMSGOBJ)
 557:../Dave/Generated/src/CAN001/CAN001.c ****   {
 558:../Dave/Generated/src/CAN001/CAN001.c ****     Error = (uint32_t)CAN001_MO_NOT_ACCEPTABLE;
 953              		.loc 1 558 0
 954 0042 4FF00103 		mov	r3, #1
 955 0046 7B61     		str	r3, [r7, #20]
 956 0048 1EE0     		b	.L34
 957              	.L33:
 559:../Dave/Generated/src/CAN001/CAN001.c ****     DBG002_ERROR(APP_GID, DBG002_MESSAGEID_LITERAL, sizeof(Error), &Error); 
 560:../Dave/Generated/src/CAN001/CAN001.c ****   }
 561:../Dave/Generated/src/CAN001/CAN001.c ****   /* check if message is disabled */
 562:../Dave/Generated/src/CAN001/CAN001.c ****   else if( RD_REG(CAN_MOxRegs->MOSTAT, CAN_MO_MOSTAT_MSGVAL_Msk, \
 958              		.loc 1 562 0
 959 004a FB68     		ldr	r3, [r7, #12]
 960 004c DB69     		ldr	r3, [r3, #28]
 961 004e 03F02003 		and	r3, r3, #32
 962 0052 4FEA5313 		lsr	r3, r3, #5
 963 0056 002B     		cmp	r3, #0
 964 0058 03D1     		bne	.L35
 563:../Dave/Generated/src/CAN001/CAN001.c ****                                               CAN_MO_MOSTAT_MSGVAL_Pos) == 0U)    
 564:../Dave/Generated/src/CAN001/CAN001.c ****   {
 565:../Dave/Generated/src/CAN001/CAN001.c ****     Error = (uint32_t)CAN001_MSGOBJ_DISABLED;
 965              		.loc 1 565 0
 966 005a 4FF00303 		mov	r3, #3
 967 005e 7B61     		str	r3, [r7, #20]
 968 0060 12E0     		b	.L34
 969              	.L35:
 566:../Dave/Generated/src/CAN001/CAN001.c ****     DBG002_INFO(APP_GID, DBG002_MESSAGEID_LITERAL, sizeof(Error), &Error);
 567:../Dave/Generated/src/CAN001/CAN001.c ****   }
 568:../Dave/Generated/src/CAN001/CAN001.c ****   /* check if transmission is ongoing on message object */
 569:../Dave/Generated/src/CAN001/CAN001.c ****   /*<<<DD_CAN001_API_4_2>>>*/
 570:../Dave/Generated/src/CAN001/CAN001.c ****   else if( RD_REG(CAN_MOxRegs->MOSTAT, CAN_MO_MOSTAT_TXRQ_Msk, \
 970              		.loc 1 570 0
 971 0062 FB68     		ldr	r3, [r7, #12]
 972 0064 DB69     		ldr	r3, [r3, #28]
 973 0066 03F48073 		and	r3, r3, #256
 974 006a 4FEA1323 		lsr	r3, r3, #8
 975 006e 012B     		cmp	r3, #1
 976 0070 03D1     		bne	.L36
 571:../Dave/Generated/src/CAN001/CAN001.c ****                                                  CAN_MO_MOSTAT_TXRQ_Pos) == 1U)  
 572:../Dave/Generated/src/CAN001/CAN001.c ****   {
 573:../Dave/Generated/src/CAN001/CAN001.c ****     Error = (uint32_t)CAN001_MO_BUSY;
 977              		.loc 1 573 0
 978 0072 4FF00403 		mov	r3, #4
 979 0076 7B61     		str	r3, [r7, #20]
 980 0078 06E0     		b	.L34
 981              	.L36:
 574:../Dave/Generated/src/CAN001/CAN001.c ****     DBG002_INFO(APP_GID, DBG002_MESSAGEID_LITERAL, sizeof(Error), &Error);
 575:../Dave/Generated/src/CAN001/CAN001.c ****   }
 576:../Dave/Generated/src/CAN001/CAN001.c ****   else
 577:../Dave/Generated/src/CAN001/CAN001.c ****   {
 578:../Dave/Generated/src/CAN001/CAN001.c ****     /* set TXRQ bit */
 579:../Dave/Generated/src/CAN001/CAN001.c ****     /*<<<DD_CAN001_API_4_3>>>*/
 580:../Dave/Generated/src/CAN001/CAN001.c ****     CAN_MOxRegs->MOCTR = CAN_MO_MOCTR_SETTXRQ_Msk;
 982              		.loc 1 580 0
 983 007a FB68     		ldr	r3, [r7, #12]
 984 007c 4FF08072 		mov	r2, #16777216
 985 0080 DA61     		str	r2, [r3, #28]
 581:../Dave/Generated/src/CAN001/CAN001.c ****     Error = (uint32_t)DAVEApp_SUCCESS;
 986              		.loc 1 581 0
 987 0082 4FF00003 		mov	r3, #0
 988 0086 7B61     		str	r3, [r7, #20]
 989              	.L34:
 582:../Dave/Generated/src/CAN001/CAN001.c ****   }
 583:../Dave/Generated/src/CAN001/CAN001.c ****  
 584:../Dave/Generated/src/CAN001/CAN001.c ****   return Error;
 990              		.loc 1 584 0
 991 0088 7B69     		ldr	r3, [r7, #20]
 585:../Dave/Generated/src/CAN001/CAN001.c **** }
 992              		.loc 1 585 0
 993 008a 1846     		mov	r0, r3
 994 008c 07F11C07 		add	r7, r7, #28
 995 0090 BD46     		mov	sp, r7
 996 0092 80BC     		pop	{r7}
 997 0094 7047     		bx	lr
 998              		.cfi_endproc
 999              	.LFE119:
 1001 0096 00BF     		.section	.text.CAN001_SendRemoteFrame,"ax",%progbits
 1002              		.align	2
 1003              		.global	CAN001_SendRemoteFrame
 1004              		.thumb
 1005              		.thumb_func
 1007              	CAN001_SendRemoteFrame:
 1008              	.LFB120:
 586:../Dave/Generated/src/CAN001/CAN001.c **** 		
 587:../Dave/Generated/src/CAN001/CAN001.c **** /*
 588:../Dave/Generated/src/CAN001/CAN001.c ****  *	This function is will put a transmit request to receive message object     
 589:../Dave/Generated/src/CAN001/CAN001.c ****  *  for sending remote frame
 590:../Dave/Generated/src/CAN001/CAN001.c ****  */
 591:../Dave/Generated/src/CAN001/CAN001.c **** 
 592:../Dave/Generated/src/CAN001/CAN001.c **** status_t CAN001_SendRemoteFrame(const CAN001_HandleType* Handle, uint8_t MsgObjnr)
 593:../Dave/Generated/src/CAN001/CAN001.c **** {
 1009              		.loc 1 593 0
 1010              		.cfi_startproc
 1011              		@ args = 0, pretend = 0, frame = 24
 1012              		@ frame_needed = 1, uses_anonymous_args = 0
 1013              		@ link register save eliminated.
 1014 0000 80B4     		push	{r7}
 1015              	.LCFI23:
 1016              		.cfi_def_cfa_offset 4
 1017              		.cfi_offset 7, -4
 1018 0002 87B0     		sub	sp, sp, #28
 1019              	.LCFI24:
 1020              		.cfi_def_cfa_offset 32
 1021 0004 00AF     		add	r7, sp, #0
 1022              	.LCFI25:
 1023              		.cfi_def_cfa_register 7
 1024 0006 7860     		str	r0, [r7, #4]
 1025 0008 0B46     		mov	r3, r1
 1026 000a FB70     		strb	r3, [r7, #3]
 594:../Dave/Generated/src/CAN001/CAN001.c ****   uint32_t Error = 0U;
 1027              		.loc 1 594 0
 1028 000c 4FF00003 		mov	r3, #0
 1029 0010 7B61     		str	r3, [r7, #20]
 595:../Dave/Generated/src/CAN001/CAN001.c ****   uint8_t MsgNo = (uint8_t)(Handle->FirstMOMapping+(MsgObjnr-1U));
 1030              		.loc 1 595 0
 1031 0012 7B68     		ldr	r3, [r7, #4]
 1032 0014 9A7B     		ldrb	r2, [r3, #14]	@ zero_extendqisi2
 1033 0016 FB78     		ldrb	r3, [r7, #3]
 1034 0018 D318     		adds	r3, r2, r3
 1035 001a DBB2     		uxtb	r3, r3
 1036 001c 03F1FF33 		add	r3, r3, #-1
 1037 0020 FB74     		strb	r3, [r7, #19]
 596:../Dave/Generated/src/CAN001/CAN001.c ****   /* Mapping to message object offset value*/
 597:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_MO_TypeDef* CAN_MOxRegs = \
 598:../Dave/Generated/src/CAN001/CAN001.c ****                   GET_MO_OFFSET(MsgNo);
 1038              		.loc 1 598 0
 1039 0022 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 1040 0024 03F11073 		add	r3, r3, #37748736
 1041 0028 03F52863 		add	r3, r3, #2688
 1042 002c 4FEA4313 		lsl	r3, r3, #5
 597:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_MO_TypeDef* CAN_MOxRegs = \
 1043              		.loc 1 597 0
 1044 0030 FB60     		str	r3, [r7, #12]
 599:../Dave/Generated/src/CAN001/CAN001.c ****  
 600:../Dave/Generated/src/CAN001/CAN001.c ****   DBG002_N ((MsgObjnr == 0U)||(MsgObjnr > Handle->NodeMONo));
 601:../Dave/Generated/src/CAN001/CAN001.c ****   /* check if message object is a receive message object */
 602:../Dave/Generated/src/CAN001/CAN001.c ****   /*<<<DD_CAN001_API_5_1>>>*/
 603:../Dave/Generated/src/CAN001/CAN001.c ****   if( RD_REG(CAN_MOxRegs->MOSTAT, CAN_MO_MOSTAT_DIR_Msk, \
 1045              		.loc 1 603 0
 1046 0032 FB68     		ldr	r3, [r7, #12]
 1047 0034 DB69     		ldr	r3, [r3, #28]
 1048 0036 03F40063 		and	r3, r3, #2048
 1049 003a 4FEAD323 		lsr	r3, r3, #11
 1050 003e 002B     		cmp	r3, #0
 1051 0040 03D0     		beq	.L39
 604:../Dave/Generated/src/CAN001/CAN001.c ****                                         CAN_MO_MOSTAT_DIR_Pos) != (uint32_t)RECMSGOBJ)
 605:../Dave/Generated/src/CAN001/CAN001.c ****   {
 606:../Dave/Generated/src/CAN001/CAN001.c ****     Error = (uint32_t)CAN001_MO_NOT_ACCEPTABLE;
 1052              		.loc 1 606 0
 1053 0042 4FF00103 		mov	r3, #1
 1054 0046 7B61     		str	r3, [r7, #20]
 1055 0048 1EE0     		b	.L40
 1056              	.L39:
 607:../Dave/Generated/src/CAN001/CAN001.c ****     DBG002_ERROR(APP_GID, DBG002_MESSAGEID_LITERAL, sizeof(Error), &Error); 
 608:../Dave/Generated/src/CAN001/CAN001.c ****   }
 609:../Dave/Generated/src/CAN001/CAN001.c ****   /* check if message is disabled */
 610:../Dave/Generated/src/CAN001/CAN001.c ****   else if( RD_REG(CAN_MOxRegs->MOSTAT, CAN_MO_MOSTAT_MSGVAL_Msk, \
 1057              		.loc 1 610 0
 1058 004a FB68     		ldr	r3, [r7, #12]
 1059 004c DB69     		ldr	r3, [r3, #28]
 1060 004e 03F02003 		and	r3, r3, #32
 1061 0052 4FEA5313 		lsr	r3, r3, #5
 1062 0056 002B     		cmp	r3, #0
 1063 0058 03D1     		bne	.L41
 611:../Dave/Generated/src/CAN001/CAN001.c ****                                               CAN_MO_MOSTAT_MSGVAL_Pos) == 0U)    		
 612:../Dave/Generated/src/CAN001/CAN001.c ****   {
 613:../Dave/Generated/src/CAN001/CAN001.c ****     Error = (uint32_t)CAN001_MSGOBJ_DISABLED;
 1064              		.loc 1 613 0
 1065 005a 4FF00303 		mov	r3, #3
 1066 005e 7B61     		str	r3, [r7, #20]
 1067 0060 12E0     		b	.L40
 1068              	.L41:
 614:../Dave/Generated/src/CAN001/CAN001.c ****     DBG002_INFO(APP_GID, DBG002_MESSAGEID_LITERAL, sizeof(Error), &Error);
 615:../Dave/Generated/src/CAN001/CAN001.c ****   }
 616:../Dave/Generated/src/CAN001/CAN001.c ****   /* check if transmission is ongoing on message object */
 617:../Dave/Generated/src/CAN001/CAN001.c ****   /*<<<DD_CAN001_API_5_2>>>*/
 618:../Dave/Generated/src/CAN001/CAN001.c ****   else if( RD_REG(CAN_MOxRegs->MOSTAT, CAN_MO_MOSTAT_TXRQ_Msk, \
 1069              		.loc 1 618 0
 1070 0062 FB68     		ldr	r3, [r7, #12]
 1071 0064 DB69     		ldr	r3, [r3, #28]
 1072 0066 03F48073 		and	r3, r3, #256
 1073 006a 4FEA1323 		lsr	r3, r3, #8
 1074 006e 012B     		cmp	r3, #1
 1075 0070 03D1     		bne	.L42
 619:../Dave/Generated/src/CAN001/CAN001.c ****                                                 CAN_MO_MOSTAT_TXRQ_Pos) == 1U)  
 620:../Dave/Generated/src/CAN001/CAN001.c ****   {
 621:../Dave/Generated/src/CAN001/CAN001.c ****     Error = (uint32_t)CAN001_MO_BUSY;
 1076              		.loc 1 621 0
 1077 0072 4FF00403 		mov	r3, #4
 1078 0076 7B61     		str	r3, [r7, #20]
 1079 0078 06E0     		b	.L40
 1080              	.L42:
 622:../Dave/Generated/src/CAN001/CAN001.c ****     DBG002_INFO(APP_GID, DBG002_MESSAGEID_LITERAL, sizeof(Error), &Error);
 623:../Dave/Generated/src/CAN001/CAN001.c ****   }
 624:../Dave/Generated/src/CAN001/CAN001.c ****   else
 625:../Dave/Generated/src/CAN001/CAN001.c ****   {
 626:../Dave/Generated/src/CAN001/CAN001.c ****     /* Put transmit request to message object */
 627:../Dave/Generated/src/CAN001/CAN001.c ****     /*<<<DD_CAN001_API_5_3>>>*/
 628:../Dave/Generated/src/CAN001/CAN001.c ****     CAN_MOxRegs->MOCTR = CAN_MO_MOCTR_SETTXRQ_Msk;
 1081              		.loc 1 628 0
 1082 007a FB68     		ldr	r3, [r7, #12]
 1083 007c 4FF08072 		mov	r2, #16777216
 1084 0080 DA61     		str	r2, [r3, #28]
 629:../Dave/Generated/src/CAN001/CAN001.c ****     Error = (uint32_t)DAVEApp_SUCCESS;
 1085              		.loc 1 629 0
 1086 0082 4FF00003 		mov	r3, #0
 1087 0086 7B61     		str	r3, [r7, #20]
 1088              	.L40:
 630:../Dave/Generated/src/CAN001/CAN001.c ****   }
 631:../Dave/Generated/src/CAN001/CAN001.c ****  
 632:../Dave/Generated/src/CAN001/CAN001.c ****   return Error;
 1089              		.loc 1 632 0
 1090 0088 7B69     		ldr	r3, [r7, #20]
 633:../Dave/Generated/src/CAN001/CAN001.c **** }
 1091              		.loc 1 633 0
 1092 008a 1846     		mov	r0, r3
 1093 008c 07F11C07 		add	r7, r7, #28
 1094 0090 BD46     		mov	sp, r7
 1095 0092 80BC     		pop	{r7}
 1096 0094 7047     		bx	lr
 1097              		.cfi_endproc
 1098              	.LFE120:
 1100 0096 00BF     		.section	.text.CAN001_ReadMsgObj,"ax",%progbits
 1101              		.align	2
 1102              		.global	CAN001_ReadMsgObj
 1103              		.thumb
 1104              		.thumb_func
 1106              	CAN001_ReadMsgObj:
 1107              	.LFB121:
 634:../Dave/Generated/src/CAN001/CAN001.c **** 
 635:../Dave/Generated/src/CAN001/CAN001.c **** /*
 636:../Dave/Generated/src/CAN001/CAN001.c ****  *	This function is will read the message object data bytes 
 637:../Dave/Generated/src/CAN001/CAN001.c ****  *  into message pointer passed as input parameter
 638:../Dave/Generated/src/CAN001/CAN001.c ****  */
 639:../Dave/Generated/src/CAN001/CAN001.c **** 
 640:../Dave/Generated/src/CAN001/CAN001.c **** status_t CAN001_ReadMsgObj
 641:../Dave/Generated/src/CAN001/CAN001.c **** (
 642:../Dave/Generated/src/CAN001/CAN001.c ****  const CAN001_HandleType* Handle,
 643:../Dave/Generated/src/CAN001/CAN001.c ****  CAN001_MessageHandleType* SwMsgObjptr,
 644:../Dave/Generated/src/CAN001/CAN001.c ****  uint8_t MsgObjnr
 645:../Dave/Generated/src/CAN001/CAN001.c **** )
 646:../Dave/Generated/src/CAN001/CAN001.c **** {
 1108              		.loc 1 646 0
 1109              		.cfi_startproc
 1110              		@ args = 0, pretend = 0, frame = 32
 1111              		@ frame_needed = 1, uses_anonymous_args = 0
 1112              		@ link register save eliminated.
 1113 0000 80B4     		push	{r7}
 1114              	.LCFI26:
 1115              		.cfi_def_cfa_offset 4
 1116              		.cfi_offset 7, -4
 1117 0002 89B0     		sub	sp, sp, #36
 1118              	.LCFI27:
 1119              		.cfi_def_cfa_offset 40
 1120 0004 00AF     		add	r7, sp, #0
 1121              	.LCFI28:
 1122              		.cfi_def_cfa_register 7
 1123 0006 F860     		str	r0, [r7, #12]
 1124 0008 B960     		str	r1, [r7, #8]
 1125 000a 1346     		mov	r3, r2
 1126 000c FB71     		strb	r3, [r7, #7]
 647:../Dave/Generated/src/CAN001/CAN001.c ****   uint32_t Error = (uint32_t)CAN001_ERROR;
 1127              		.loc 1 647 0
 1128 000e 4FF00503 		mov	r3, #5
 1129 0012 FB61     		str	r3, [r7, #28]
 648:../Dave/Generated/src/CAN001/CAN001.c ****   uint32_t Count = 0U;
 1130              		.loc 1 648 0
 1131 0014 4FF00003 		mov	r3, #0
 1132 0018 BB61     		str	r3, [r7, #24]
 649:../Dave/Generated/src/CAN001/CAN001.c ****   bool RxPnd = 0U;
 1133              		.loc 1 649 0
 1134 001a 4FF00003 		mov	r3, #0
 1135 001e FB75     		strb	r3, [r7, #23]
 650:../Dave/Generated/src/CAN001/CAN001.c ****   bool NewData = 0U;
 1136              		.loc 1 650 0
 1137 0020 4FF00003 		mov	r3, #0
 1138 0024 BB75     		strb	r3, [r7, #22]
 651:../Dave/Generated/src/CAN001/CAN001.c ****   uint8_t MsgNo = (uint8_t)(Handle->FirstMOMapping+(MsgObjnr-1U));
 1139              		.loc 1 651 0
 1140 0026 FB68     		ldr	r3, [r7, #12]
 1141 0028 9A7B     		ldrb	r2, [r3, #14]	@ zero_extendqisi2
 1142 002a FB79     		ldrb	r3, [r7, #7]
 1143 002c D318     		adds	r3, r2, r3
 1144 002e DBB2     		uxtb	r3, r3
 1145 0030 03F1FF33 		add	r3, r3, #-1
 1146 0034 7B75     		strb	r3, [r7, #21]
 652:../Dave/Generated/src/CAN001/CAN001.c ****   /* Mapping to message object offset value*/
 653:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_MO_TypeDef* CAN_MOxRegs = \
 654:../Dave/Generated/src/CAN001/CAN001.c ****                  GET_MO_OFFSET(MsgNo);
 1147              		.loc 1 654 0
 1148 0036 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 1149 0038 03F11073 		add	r3, r3, #37748736
 1150 003c 03F52863 		add	r3, r3, #2688
 1151 0040 4FEA4313 		lsl	r3, r3, #5
 653:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_MO_TypeDef* CAN_MOxRegs = \
 1152              		.loc 1 653 0
 1153 0044 3B61     		str	r3, [r7, #16]
 655:../Dave/Generated/src/CAN001/CAN001.c ****   
 656:../Dave/Generated/src/CAN001/CAN001.c ****   DBG002_N((MsgObjnr == 0U)||(MsgObjnr > Handle->NodeMONo));
 657:../Dave/Generated/src/CAN001/CAN001.c ****   /* check if message object is a receive message object */
 658:../Dave/Generated/src/CAN001/CAN001.c ****   /*<<<DD_CAN001_API_6_1>>>*/
 659:../Dave/Generated/src/CAN001/CAN001.c ****   if( RD_REG(CAN_MOxRegs->MOSTAT, CAN_MO_MOSTAT_DIR_Msk, \
 1154              		.loc 1 659 0
 1155 0046 3B69     		ldr	r3, [r7, #16]
 1156 0048 DB69     		ldr	r3, [r3, #28]
 1157 004a 03F40063 		and	r3, r3, #2048
 1158 004e 4FEAD323 		lsr	r3, r3, #11
 1159 0052 002B     		cmp	r3, #0
 1160 0054 03D0     		beq	.L45
 660:../Dave/Generated/src/CAN001/CAN001.c ****                                    CAN_MO_MOSTAT_DIR_Pos) != (uint32_t)RECMSGOBJ)
 661:../Dave/Generated/src/CAN001/CAN001.c ****   {
 662:../Dave/Generated/src/CAN001/CAN001.c ****     Error = (uint32_t)CAN001_MO_NOT_ACCEPTABLE;
 1161              		.loc 1 662 0
 1162 0056 4FF00103 		mov	r3, #1
 1163 005a FB61     		str	r3, [r7, #28]
 1164 005c CAE0     		b	.L46
 1165              	.L45:
 663:../Dave/Generated/src/CAN001/CAN001.c ****     DBG002_ERROR(APP_GID, DBG002_MESSAGEID_LITERAL, sizeof(Error), &Error); 
 664:../Dave/Generated/src/CAN001/CAN001.c ****   }
 665:../Dave/Generated/src/CAN001/CAN001.c ****   /* check if reception is ongoing on message object */
 666:../Dave/Generated/src/CAN001/CAN001.c ****   /*<<<DD_CAN001_API_6_2>>>*/
 667:../Dave/Generated/src/CAN001/CAN001.c ****   else if( RD_REG(CAN_MOxRegs->MOSTAT, CAN_MO_MOSTAT_RXUPD_Msk, \
 1166              		.loc 1 667 0
 1167 005e 3B69     		ldr	r3, [r7, #16]
 1168 0060 DB69     		ldr	r3, [r3, #28]
 1169 0062 03F00403 		and	r3, r3, #4
 1170 0066 4FEA9303 		lsr	r3, r3, #2
 1171 006a 012B     		cmp	r3, #1
 1172 006c 03D1     		bne	.L47
 668:../Dave/Generated/src/CAN001/CAN001.c ****                                          CAN_MO_MOSTAT_RXUPD_Pos) == 1U)
 669:../Dave/Generated/src/CAN001/CAN001.c ****   {
 670:../Dave/Generated/src/CAN001/CAN001.c ****     Error = (uint32_t)CAN001_MO_BUSY;
 1173              		.loc 1 670 0
 1174 006e 4FF00403 		mov	r3, #4
 1175 0072 FB61     		str	r3, [r7, #28]
 1176 0074 BEE0     		b	.L46
 1177              	.L47:
 671:../Dave/Generated/src/CAN001/CAN001.c ****     DBG002_ERROR(APP_GID, DBG002_MESSAGEID_LITERAL, sizeof(Error), &Error); 
 672:../Dave/Generated/src/CAN001/CAN001.c ****   }
 673:../Dave/Generated/src/CAN001/CAN001.c ****   else
 674:../Dave/Generated/src/CAN001/CAN001.c ****   {
 675:../Dave/Generated/src/CAN001/CAN001.c ****     /* read message parameters */
 676:../Dave/Generated/src/CAN001/CAN001.c ****     /*<<<DD_CAN001_API_6_3>>>*/
 677:../Dave/Generated/src/CAN001/CAN001.c ****     do
 678:../Dave/Generated/src/CAN001/CAN001.c ****     {
 679:../Dave/Generated/src/CAN001/CAN001.c ****       CAN_MOxRegs->MOCTR = CAN_MO_MOCTR_RESNEWDAT_Msk;
 1178              		.loc 1 679 0
 1179 0076 3B69     		ldr	r3, [r7, #16]
 1180 0078 4FF00802 		mov	r2, #8
 1181 007c DA61     		str	r2, [r3, #28]
 680:../Dave/Generated/src/CAN001/CAN001.c ****       if((RD_REG(CAN_MOxRegs->MOAR, CAN_MO_MOAR_IDE_Msk , \
 1182              		.loc 1 680 0
 1183 007e 3B69     		ldr	r3, [r7, #16]
 1184 0080 9B69     		ldr	r3, [r3, #24]
 1185 0082 03F00053 		and	r3, r3, #536870912
 1186 0086 4FEA5373 		lsr	r3, r3, #29
 1187 008a 002B     		cmp	r3, #0
 1188 008c 2ED1     		bne	.L48
 681:../Dave/Generated/src/CAN001/CAN001.c ****                          CAN_MO_MOAR_IDE_Pos)) == 0U)
 682:../Dave/Generated/src/CAN001/CAN001.c ****       {
 683:../Dave/Generated/src/CAN001/CAN001.c ****         SwMsgObjptr->IDExten = (uint8_t)STANDARDTYPE;
 1189              		.loc 1 683 0
 1190 008e BB68     		ldr	r3, [r7, #8]
 1191 0090 4FF00002 		mov	r2, #0
 1192 0094 1A72     		strb	r2, [r3, #8]
 684:../Dave/Generated/src/CAN001/CAN001.c ****         SwMsgObjptr->Identifier = (CAN_MOxRegs->MOAR & (uint32_t)CAN_MO_MOAR_STDID_Msk) >> \
 1193              		.loc 1 684 0
 1194 0096 3B69     		ldr	r3, [r7, #16]
 1195 0098 9A69     		ldr	r2, [r3, #24]
 1196 009a 4FF00003 		mov	r3, #0
 1197 009e C1F6FC73 		movt	r3, 8188
 1198 00a2 1340     		ands	r3, r3, r2
 1199 00a4 4FEA9342 		lsr	r2, r3, #18
 1200 00a8 BB68     		ldr	r3, [r7, #8]
 1201 00aa 1A60     		str	r2, [r3, #0]
 685:../Dave/Generated/src/CAN001/CAN001.c ****                                                     CAN_MO_MOAR_STDID_Pos;
 686:../Dave/Generated/src/CAN001/CAN001.c ****         SwMsgObjptr->IDEMask = (uint8_t)((uint32_t)(CAN_MOxRegs->MOAMR & (uint32_t)CAN_MO_MOAMR_MID
 1202              		.loc 1 686 0
 1203 00ac 3B69     		ldr	r3, [r7, #16]
 1204 00ae DB68     		ldr	r3, [r3, #12]
 1205 00b0 03F00053 		and	r3, r3, #536870912
 1206 00b4 4FEA5373 		lsr	r3, r3, #29
 1207 00b8 DAB2     		uxtb	r2, r3
 1208 00ba BB68     		ldr	r3, [r7, #8]
 1209 00bc 5A72     		strb	r2, [r3, #9]
 687:../Dave/Generated/src/CAN001/CAN001.c ****                              CAN_MO_MOAMR_MIDE_Pos);
 688:../Dave/Generated/src/CAN001/CAN001.c ****         if(SwMsgObjptr->IDEMask == 1U)
 1210              		.loc 1 688 0
 1211 00be BB68     		ldr	r3, [r7, #8]
 1212 00c0 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 1213 00c2 012B     		cmp	r3, #1
 1214 00c4 0BD1     		bne	.L49
 689:../Dave/Generated/src/CAN001/CAN001.c ****         {
 690:../Dave/Generated/src/CAN001/CAN001.c ****           SwMsgObjptr->IDMask = (CAN_MOxRegs->MOAMR & (uint32_t)CAN_MO_MOAR_STDID_Msk) >> \
 1215              		.loc 1 690 0
 1216 00c6 3B69     		ldr	r3, [r7, #16]
 1217 00c8 DA68     		ldr	r2, [r3, #12]
 1218 00ca 4FF00003 		mov	r3, #0
 1219 00ce C1F6FC73 		movt	r3, 8188
 1220 00d2 1340     		ands	r3, r3, r2
 1221 00d4 4FEA9342 		lsr	r2, r3, #18
 1222 00d8 BB68     		ldr	r3, [r7, #8]
 1223 00da 5A60     		str	r2, [r3, #4]
 1224 00dc 1FE0     		b	.L50
 1225              	.L49:
 691:../Dave/Generated/src/CAN001/CAN001.c ****      	                                             CAN_MO_MOAR_STDID_Pos;
 692:../Dave/Generated/src/CAN001/CAN001.c ****         }
 693:../Dave/Generated/src/CAN001/CAN001.c ****         else
 694:../Dave/Generated/src/CAN001/CAN001.c ****         {
 695:../Dave/Generated/src/CAN001/CAN001.c ****      	   SwMsgObjptr->IDMask = CAN_MOxRegs->MOAMR & (uint32_t)CAN_MO_MOAMR_AM_Msk;
 1226              		.loc 1 695 0
 1227 00de 3B69     		ldr	r3, [r7, #16]
 1228 00e0 DB68     		ldr	r3, [r3, #12]
 1229 00e2 23F06042 		bic	r2, r3, #-536870912
 1230 00e6 BB68     		ldr	r3, [r7, #8]
 1231 00e8 5A60     		str	r2, [r3, #4]
 1232 00ea 18E0     		b	.L50
 1233              	.L48:
 696:../Dave/Generated/src/CAN001/CAN001.c ****         }
 697:../Dave/Generated/src/CAN001/CAN001.c ****       }
 698:../Dave/Generated/src/CAN001/CAN001.c ****       else
 699:../Dave/Generated/src/CAN001/CAN001.c ****       {
 700:../Dave/Generated/src/CAN001/CAN001.c ****         SwMsgObjptr->IDExten = (uint8_t)EXTENDEDTYPE;
 1234              		.loc 1 700 0
 1235 00ec BB68     		ldr	r3, [r7, #8]
 1236 00ee 4FF00102 		mov	r2, #1
 1237 00f2 1A72     		strb	r2, [r3, #8]
 701:../Dave/Generated/src/CAN001/CAN001.c ****         SwMsgObjptr->Identifier = CAN_MOxRegs->MOAR & (uint32_t)CAN_MO_MOAR_ID_Msk;
 1238              		.loc 1 701 0
 1239 00f4 3B69     		ldr	r3, [r7, #16]
 1240 00f6 9B69     		ldr	r3, [r3, #24]
 1241 00f8 23F06042 		bic	r2, r3, #-536870912
 1242 00fc BB68     		ldr	r3, [r7, #8]
 1243 00fe 1A60     		str	r2, [r3, #0]
 702:../Dave/Generated/src/CAN001/CAN001.c ****         SwMsgObjptr->IDMask = CAN_MOxRegs->MOAMR & (uint32_t)CAN_MO_MOAMR_AM_Msk;
 1244              		.loc 1 702 0
 1245 0100 3B69     		ldr	r3, [r7, #16]
 1246 0102 DB68     		ldr	r3, [r3, #12]
 1247 0104 23F06042 		bic	r2, r3, #-536870912
 1248 0108 BB68     		ldr	r3, [r7, #8]
 1249 010a 5A60     		str	r2, [r3, #4]
 703:../Dave/Generated/src/CAN001/CAN001.c ****         SwMsgObjptr->IDEMask = (uint8_t)((uint32_t)(CAN_MOxRegs->MOAMR & (uint32_t)CAN_MO_MOAMR_MID
 1250              		.loc 1 703 0
 1251 010c 3B69     		ldr	r3, [r7, #16]
 1252 010e DB68     		ldr	r3, [r3, #12]
 1253 0110 03F00053 		and	r3, r3, #536870912
 1254 0114 4FEA5373 		lsr	r3, r3, #29
 1255 0118 DAB2     		uxtb	r2, r3
 1256 011a BB68     		ldr	r3, [r7, #8]
 1257 011c 5A72     		strb	r2, [r3, #9]
 1258              	.L50:
 704:../Dave/Generated/src/CAN001/CAN001.c ****                                     CAN_MO_MOAMR_MIDE_Pos);
 705:../Dave/Generated/src/CAN001/CAN001.c ****       }
 706:../Dave/Generated/src/CAN001/CAN001.c ****       SwMsgObjptr->DataLength = (uint8_t)RD_REG(CAN_MOxRegs->MOFCR, \
 1259              		.loc 1 706 0
 1260 011e 3B69     		ldr	r3, [r7, #16]
 1261 0120 1B68     		ldr	r3, [r3, #0]
 1262 0122 03F07063 		and	r3, r3, #251658240
 1263 0126 4FEA1363 		lsr	r3, r3, #24
 1264 012a DAB2     		uxtb	r2, r3
 1265 012c BB68     		ldr	r3, [r7, #8]
 1266 012e 9A72     		strb	r2, [r3, #10]
 707:../Dave/Generated/src/CAN001/CAN001.c ****                              CAN_MO_MOFCR_DLC_Msk, CAN_MO_MOFCR_DLC_Pos);
 708:../Dave/Generated/src/CAN001/CAN001.c ****       for(Count = 0U; Count < SwMsgObjptr->DataLength; Count++)
 1267              		.loc 1 708 0
 1268 0130 4FF00003 		mov	r3, #0
 1269 0134 BB61     		str	r3, [r7, #24]
 1270 0136 3BE0     		b	.L51
 1271              	.L54:
 709:../Dave/Generated/src/CAN001/CAN001.c ****       {
 710:../Dave/Generated/src/CAN001/CAN001.c ****         if(Count < 4U)
 1272              		.loc 1 710 0
 1273 0138 BB69     		ldr	r3, [r7, #24]
 1274 013a 032B     		cmp	r3, #3
 1275 013c 16D8     		bhi	.L52
 711:../Dave/Generated/src/CAN001/CAN001.c ****         {
 712:../Dave/Generated/src/CAN001/CAN001.c ****           SwMsgObjptr->data[Count] = (uint8_t)RD_REG(CAN_MOxRegs->MODATAL, \
 1276              		.loc 1 712 0
 1277 013e 3B69     		ldr	r3, [r7, #16]
 1278 0140 1A69     		ldr	r2, [r3, #16]
 1279 0142 BB69     		ldr	r3, [r7, #24]
 1280 0144 4FEAC303 		lsl	r3, r3, #3
 1281 0148 4FF0FF01 		mov	r1, #255
 1282 014c 01FA03F3 		lsl	r3, r1, r3
 1283 0150 1A40     		ands	r2, r2, r3
 1284 0152 BB69     		ldr	r3, [r7, #24]
 1285 0154 4FEAC303 		lsl	r3, r3, #3
 1286 0158 22FA03F3 		lsr	r3, r2, r3
 1287 015c DAB2     		uxtb	r2, r3
 1288 015e B968     		ldr	r1, [r7, #8]
 1289 0160 BB69     		ldr	r3, [r7, #24]
 1290 0162 CB18     		adds	r3, r1, r3
 1291 0164 03F10803 		add	r3, r3, #8
 1292 0168 DA70     		strb	r2, [r3, #3]
 1293 016a 1DE0     		b	.L53
 1294              	.L52:
 713:../Dave/Generated/src/CAN001/CAN001.c ****                                   (CAN_MO_MODATAL_DB0_Msk << (Count*8U)), \
 714:../Dave/Generated/src/CAN001/CAN001.c ****                                                             (Count*8U));
 715:../Dave/Generated/src/CAN001/CAN001.c ****         }
 716:../Dave/Generated/src/CAN001/CAN001.c ****         else
 717:../Dave/Generated/src/CAN001/CAN001.c ****         {
 718:../Dave/Generated/src/CAN001/CAN001.c ****           SwMsgObjptr->data[Count] = (uint8_t)RD_REG(CAN_MOxRegs->MODATAH, \
 1295              		.loc 1 718 0
 1296 016c 3B69     		ldr	r3, [r7, #16]
 1297 016e 5A69     		ldr	r2, [r3, #20]
 1298 0170 BB69     		ldr	r3, [r7, #24]
 1299 0172 03F10053 		add	r3, r3, #536870912
 1300 0176 A3F10403 		sub	r3, r3, #4
 1301 017a 4FEAC303 		lsl	r3, r3, #3
 1302 017e 4FF0FF01 		mov	r1, #255
 1303 0182 01FA03F3 		lsl	r3, r1, r3
 1304 0186 1A40     		ands	r2, r2, r3
 1305 0188 BB69     		ldr	r3, [r7, #24]
 1306 018a 03F10053 		add	r3, r3, #536870912
 1307 018e A3F10403 		sub	r3, r3, #4
 1308 0192 4FEAC303 		lsl	r3, r3, #3
 1309 0196 22FA03F3 		lsr	r3, r2, r3
 1310 019a DAB2     		uxtb	r2, r3
 1311 019c B968     		ldr	r1, [r7, #8]
 1312 019e BB69     		ldr	r3, [r7, #24]
 1313 01a0 CB18     		adds	r3, r1, r3
 1314 01a2 03F10803 		add	r3, r3, #8
 1315 01a6 DA70     		strb	r2, [r3, #3]
 1316              	.L53:
 708:../Dave/Generated/src/CAN001/CAN001.c ****       for(Count = 0U; Count < SwMsgObjptr->DataLength; Count++)
 1317              		.loc 1 708 0
 1318 01a8 BB69     		ldr	r3, [r7, #24]
 1319 01aa 03F10103 		add	r3, r3, #1
 1320 01ae BB61     		str	r3, [r7, #24]
 1321              	.L51:
 708:../Dave/Generated/src/CAN001/CAN001.c ****       for(Count = 0U; Count < SwMsgObjptr->DataLength; Count++)
 1322              		.loc 1 708 0 is_stmt 0 discriminator 1
 1323 01b0 BB68     		ldr	r3, [r7, #8]
 1324 01b2 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 1325 01b4 1A46     		mov	r2, r3
 1326 01b6 BB69     		ldr	r3, [r7, #24]
 1327 01b8 9A42     		cmp	r2, r3
 1328 01ba BDD8     		bhi	.L54
 719:../Dave/Generated/src/CAN001/CAN001.c ****                                    (CAN_MO_MODATAL_DB0_Msk << ((Count-4U)*8U)) ,\
 720:../Dave/Generated/src/CAN001/CAN001.c ****                                                             ((Count-4U)*8U));
 721:../Dave/Generated/src/CAN001/CAN001.c ****         }
 722:../Dave/Generated/src/CAN001/CAN001.c ****       }
 723:../Dave/Generated/src/CAN001/CAN001.c ****       RxPnd = (bool)CHECK_RXPND_BIT();
 1329              		.loc 1 723 0 is_stmt 1
 1330 01bc 3B69     		ldr	r3, [r7, #16]
 1331 01be DB69     		ldr	r3, [r3, #28]
 1332 01c0 03F00403 		and	r3, r3, #4
 1333 01c4 4FEA9303 		lsr	r3, r3, #2
 1334 01c8 FB75     		strb	r3, [r7, #23]
 724:../Dave/Generated/src/CAN001/CAN001.c ****       NewData = (bool)CHECK_NEWDATA_BIT();
 1335              		.loc 1 724 0
 1336 01ca 3B69     		ldr	r3, [r7, #16]
 1337 01cc DB69     		ldr	r3, [r3, #28]
 1338 01ce 03F00803 		and	r3, r3, #8
 1339 01d2 4FEAD303 		lsr	r3, r3, #3
 1340 01d6 BB75     		strb	r3, [r7, #22]
 725:../Dave/Generated/src/CAN001/CAN001.c ****     } while((RxPnd != 0U) && (NewData != 0U));
 1341              		.loc 1 725 0
 1342 01d8 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1343 01da 002B     		cmp	r3, #0
 1344 01dc 03D0     		beq	.L55
 1345              		.loc 1 725 0 is_stmt 0 discriminator 1
 1346 01de BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 1347 01e0 002B     		cmp	r3, #0
 1348 01e2 7FF448AF 		bne	.L47
 1349              	.L55:
 726:../Dave/Generated/src/CAN001/CAN001.c ****      SwMsgObjptr->MsgObjType = RECMSGOBJ;
 1350              		.loc 1 726 0 is_stmt 1
 1351 01e6 BB68     		ldr	r3, [r7, #8]
 1352 01e8 4FF00002 		mov	r2, #0
 1353 01ec 1A75     		strb	r2, [r3, #20]
 727:../Dave/Generated/src/CAN001/CAN001.c ****      Error = (uint32_t)DAVEApp_SUCCESS;
 1354              		.loc 1 727 0
 1355 01ee 4FF00003 		mov	r3, #0
 1356 01f2 FB61     		str	r3, [r7, #28]
 1357              	.L46:
 728:../Dave/Generated/src/CAN001/CAN001.c ****   }
 729:../Dave/Generated/src/CAN001/CAN001.c ****  
 730:../Dave/Generated/src/CAN001/CAN001.c ****   return Error;
 1358              		.loc 1 730 0
 1359 01f4 FB69     		ldr	r3, [r7, #28]
 731:../Dave/Generated/src/CAN001/CAN001.c **** }
 1360              		.loc 1 731 0
 1361 01f6 1846     		mov	r0, r3
 1362 01f8 07F12407 		add	r7, r7, #36
 1363 01fc BD46     		mov	sp, r7
 1364 01fe 80BC     		pop	{r7}
 1365 0200 7047     		bx	lr
 1366              		.cfi_endproc
 1367              	.LFE121:
 1369 0202 00BF     		.section	.text.CAN001_UpdateMODataRegisters,"ax",%progbits
 1370              		.align	2
 1371              		.global	CAN001_UpdateMODataRegisters
 1372              		.thumb
 1373              		.thumb_func
 1375              	CAN001_UpdateMODataRegisters:
 1376              	.LFB122:
 732:../Dave/Generated/src/CAN001/CAN001.c **** 
 733:../Dave/Generated/src/CAN001/CAN001.c **** 
 734:../Dave/Generated/src/CAN001/CAN001.c **** /*  This function updates data registers of given message 
 735:../Dave/Generated/src/CAN001/CAN001.c ****  *  object
 736:../Dave/Generated/src/CAN001/CAN001.c ****  */
 737:../Dave/Generated/src/CAN001/CAN001.c **** status_t CAN001_UpdateMODataRegisters
 738:../Dave/Generated/src/CAN001/CAN001.c **** (
 739:../Dave/Generated/src/CAN001/CAN001.c ****   const CAN001_HandleType* Handle, 
 740:../Dave/Generated/src/CAN001/CAN001.c ****   uint8_t MsgObjnr,
 741:../Dave/Generated/src/CAN001/CAN001.c ****   uint8_t DataLength, 
 742:../Dave/Generated/src/CAN001/CAN001.c ****   const uint8_t* DataPtr
 743:../Dave/Generated/src/CAN001/CAN001.c **** )
 744:../Dave/Generated/src/CAN001/CAN001.c **** {
 1377              		.loc 1 744 0
 1378              		.cfi_startproc
 1379              		@ args = 0, pretend = 0, frame = 32
 1380              		@ frame_needed = 1, uses_anonymous_args = 0
 1381              		@ link register save eliminated.
 1382 0000 80B4     		push	{r7}
 1383              	.LCFI29:
 1384              		.cfi_def_cfa_offset 4
 1385              		.cfi_offset 7, -4
 1386 0002 89B0     		sub	sp, sp, #36
 1387              	.LCFI30:
 1388              		.cfi_def_cfa_offset 40
 1389 0004 00AF     		add	r7, sp, #0
 1390              	.LCFI31:
 1391              		.cfi_def_cfa_register 7
 1392 0006 F860     		str	r0, [r7, #12]
 1393 0008 7B60     		str	r3, [r7, #4]
 1394 000a 0B46     		mov	r3, r1
 1395 000c FB72     		strb	r3, [r7, #11]
 1396 000e 1346     		mov	r3, r2
 1397 0010 BB72     		strb	r3, [r7, #10]
 745:../Dave/Generated/src/CAN001/CAN001.c ****   uint32_t Error = (uint32_t)CAN001_ERROR;
 1398              		.loc 1 745 0
 1399 0012 4FF00503 		mov	r3, #5
 1400 0016 FB61     		str	r3, [r7, #28]
 746:../Dave/Generated/src/CAN001/CAN001.c ****   uint32_t Count = 0U;
 1401              		.loc 1 746 0
 1402 0018 4FF00003 		mov	r3, #0
 1403 001c BB61     		str	r3, [r7, #24]
 747:../Dave/Generated/src/CAN001/CAN001.c ****   uint8_t MsgNo = (uint8_t)(Handle->FirstMOMapping+(MsgObjnr-1U));
 1404              		.loc 1 747 0
 1405 001e FB68     		ldr	r3, [r7, #12]
 1406 0020 9A7B     		ldrb	r2, [r3, #14]	@ zero_extendqisi2
 1407 0022 FB7A     		ldrb	r3, [r7, #11]
 1408 0024 D318     		adds	r3, r2, r3
 1409 0026 DBB2     		uxtb	r3, r3
 1410 0028 03F1FF33 		add	r3, r3, #-1
 1411 002c FB75     		strb	r3, [r7, #23]
 748:../Dave/Generated/src/CAN001/CAN001.c ****   /* Mapping to message object offset value*/
 749:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_MO_TypeDef* CAN_MOxRegs = \
 750:../Dave/Generated/src/CAN001/CAN001.c ****                   GET_MO_OFFSET(MsgNo);
 1412              		.loc 1 750 0
 1413 002e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1414 0030 03F11073 		add	r3, r3, #37748736
 1415 0034 03F52863 		add	r3, r3, #2688
 1416 0038 4FEA4313 		lsl	r3, r3, #5
 749:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_MO_TypeDef* CAN_MOxRegs = \
 1417              		.loc 1 749 0
 1418 003c 3B61     		str	r3, [r7, #16]
 751:../Dave/Generated/src/CAN001/CAN001.c ****   
 752:../Dave/Generated/src/CAN001/CAN001.c ****   
 753:../Dave/Generated/src/CAN001/CAN001.c ****   DBG002_N((MsgObjnr == 0U)||(MsgObjnr > Handle->NodeMONo));
 754:../Dave/Generated/src/CAN001/CAN001.c ****   if (DataLength > 8U)
 1419              		.loc 1 754 0
 1420 003e BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
 1421 0040 082B     		cmp	r3, #8
 1422 0042 03D9     		bls	.L58
 755:../Dave/Generated/src/CAN001/CAN001.c ****   {
 756:../Dave/Generated/src/CAN001/CAN001.c ****     Error = (uint32_t)CAN001_INVALID_INPUT;
 1423              		.loc 1 756 0
 1424 0044 4FF00603 		mov	r3, #6
 1425 0048 FB61     		str	r3, [r7, #28]
 1426 004a 82E0     		b	.L59
 1427              	.L58:
 757:../Dave/Generated/src/CAN001/CAN001.c ****     DBG002_ERROR(APP_GID, DBG002_MESSAGEID_LITERAL, sizeof(Error), &Error); 
 758:../Dave/Generated/src/CAN001/CAN001.c ****   }
 759:../Dave/Generated/src/CAN001/CAN001.c ****   /* check if message object is not a transmit message object */
 760:../Dave/Generated/src/CAN001/CAN001.c ****   else if( RD_REG(CAN_MOxRegs->MOSTAT, CAN_MO_MOSTAT_DIR_Msk, \
 1428              		.loc 1 760 0
 1429 004c 3B69     		ldr	r3, [r7, #16]
 1430 004e DB69     		ldr	r3, [r3, #28]
 1431 0050 03F40063 		and	r3, r3, #2048
 1432 0054 4FEAD323 		lsr	r3, r3, #11
 1433 0058 012B     		cmp	r3, #1
 1434 005a 03D0     		beq	.L60
 761:../Dave/Generated/src/CAN001/CAN001.c ****                                         CAN_MO_MOSTAT_DIR_Pos) != (uint32_t)TRANSMSGOBJ)
 762:../Dave/Generated/src/CAN001/CAN001.c ****   {
 763:../Dave/Generated/src/CAN001/CAN001.c ****     Error = (uint32_t)CAN001_MO_NOT_ACCEPTABLE;
 1435              		.loc 1 763 0
 1436 005c 4FF00103 		mov	r3, #1
 1437 0060 FB61     		str	r3, [r7, #28]
 1438 0062 76E0     		b	.L59
 1439              	.L60:
 764:../Dave/Generated/src/CAN001/CAN001.c ****     DBG002_ERROR(APP_GID, DBG002_MESSAGEID_LITERAL, sizeof(Error), &Error); 
 765:../Dave/Generated/src/CAN001/CAN001.c ****   }
 766:../Dave/Generated/src/CAN001/CAN001.c ****   else
 767:../Dave/Generated/src/CAN001/CAN001.c ****   {
 768:../Dave/Generated/src/CAN001/CAN001.c ****     CAN_MOxRegs->MOCTR = CAN_MO_MOCTR_RESMSGVAL_Msk;   
 1440              		.loc 1 768 0
 1441 0064 3B69     		ldr	r3, [r7, #16]
 1442 0066 4FF02002 		mov	r2, #32
 1443 006a DA61     		str	r2, [r3, #28]
 769:../Dave/Generated/src/CAN001/CAN001.c ****     /* Configure data length */
 770:../Dave/Generated/src/CAN001/CAN001.c ****     WR_REG(CAN_MOxRegs->MOFCR, (uint32_t)CAN_MO_MOFCR_DLC_Msk, \
 1444              		.loc 1 770 0
 1445 006c BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
 1446 006e 4FEA0363 		lsl	r3, r3, #24
 1447 0072 03F07062 		and	r2, r3, #251658240
 1448 0076 3B69     		ldr	r3, [r7, #16]
 1449 0078 1B68     		ldr	r3, [r3, #0]
 1450 007a 23F07063 		bic	r3, r3, #251658240
 1451 007e 1A43     		orrs	r2, r2, r3
 1452 0080 3B69     		ldr	r3, [r7, #16]
 1453 0082 1A60     		str	r2, [r3, #0]
 771:../Dave/Generated/src/CAN001/CAN001.c ****                               CAN_MO_MOFCR_DLC_Pos, (uint32_t)DataLength);
 772:../Dave/Generated/src/CAN001/CAN001.c ****     for(Count = 0U; Count < DataLength; Count++) 
 1454              		.loc 1 772 0
 1455 0084 4FF00003 		mov	r3, #0
 1456 0088 BB61     		str	r3, [r7, #24]
 1457 008a 55E0     		b	.L61
 1458              	.L64:
 773:../Dave/Generated/src/CAN001/CAN001.c ****     {
 774:../Dave/Generated/src/CAN001/CAN001.c ****       if(Count < 4U)
 1459              		.loc 1 774 0
 1460 008c BB69     		ldr	r3, [r7, #24]
 1461 008e 032B     		cmp	r3, #3
 1462 0090 21D8     		bhi	.L62
 775:../Dave/Generated/src/CAN001/CAN001.c ****       {
 776:../Dave/Generated/src/CAN001/CAN001.c ****         WR_REG(CAN_MOxRegs->MODATAL, (uint32_t)(CAN_MO_MODATAL_DB0_Msk << (Count*8U)) , \
 1463              		.loc 1 776 0
 1464 0092 7A68     		ldr	r2, [r7, #4]
 1465 0094 BB69     		ldr	r3, [r7, #24]
 1466 0096 D318     		adds	r3, r2, r3
 1467 0098 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1468 009a 1A46     		mov	r2, r3
 1469 009c BB69     		ldr	r3, [r7, #24]
 1470 009e 4FEAC303 		lsl	r3, r3, #3
 1471 00a2 02FA03F2 		lsl	r2, r2, r3
 1472 00a6 BB69     		ldr	r3, [r7, #24]
 1473 00a8 4FEAC303 		lsl	r3, r3, #3
 1474 00ac 4FF0FF01 		mov	r1, #255
 1475 00b0 01FA03F3 		lsl	r3, r1, r3
 1476 00b4 1A40     		ands	r2, r2, r3
 1477 00b6 3B69     		ldr	r3, [r7, #16]
 1478 00b8 1969     		ldr	r1, [r3, #16]
 1479 00ba BB69     		ldr	r3, [r7, #24]
 1480 00bc 4FEAC303 		lsl	r3, r3, #3
 1481 00c0 4FF0FF00 		mov	r0, #255
 1482 00c4 00FA03F3 		lsl	r3, r0, r3
 1483 00c8 6FEA0303 		mvn	r3, r3
 1484 00cc 0B40     		ands	r3, r3, r1
 1485 00ce 1A43     		orrs	r2, r2, r3
 1486 00d0 3B69     		ldr	r3, [r7, #16]
 1487 00d2 1A61     		str	r2, [r3, #16]
 1488 00d4 2CE0     		b	.L63
 1489              	.L62:
 777:../Dave/Generated/src/CAN001/CAN001.c ****                                         (Count*8U), (uint32_t)(*(DataPtr + Count)));
 778:../Dave/Generated/src/CAN001/CAN001.c ****       }
 779:../Dave/Generated/src/CAN001/CAN001.c ****       else
 780:../Dave/Generated/src/CAN001/CAN001.c ****       {
 781:../Dave/Generated/src/CAN001/CAN001.c ****         WR_REG(CAN_MOxRegs->MODATAH, (uint32_t)(CAN_MO_MODATAL_DB0_Msk << ((Count-4U)*8U)), \
 1490              		.loc 1 781 0
 1491 00d6 7A68     		ldr	r2, [r7, #4]
 1492 00d8 BB69     		ldr	r3, [r7, #24]
 1493 00da D318     		adds	r3, r2, r3
 1494 00dc 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1495 00de 1A46     		mov	r2, r3
 1496 00e0 BB69     		ldr	r3, [r7, #24]
 1497 00e2 03F10053 		add	r3, r3, #536870912
 1498 00e6 A3F10403 		sub	r3, r3, #4
 1499 00ea 4FEAC303 		lsl	r3, r3, #3
 1500 00ee 02FA03F2 		lsl	r2, r2, r3
 1501 00f2 BB69     		ldr	r3, [r7, #24]
 1502 00f4 03F10053 		add	r3, r3, #536870912
 1503 00f8 A3F10403 		sub	r3, r3, #4
 1504 00fc 4FEAC303 		lsl	r3, r3, #3
 1505 0100 4FF0FF01 		mov	r1, #255
 1506 0104 01FA03F3 		lsl	r3, r1, r3
 1507 0108 1A40     		ands	r2, r2, r3
 1508 010a 3B69     		ldr	r3, [r7, #16]
 1509 010c 5969     		ldr	r1, [r3, #20]
 1510 010e BB69     		ldr	r3, [r7, #24]
 1511 0110 03F10053 		add	r3, r3, #536870912
 1512 0114 A3F10403 		sub	r3, r3, #4
 1513 0118 4FEAC303 		lsl	r3, r3, #3
 1514 011c 4FF0FF00 		mov	r0, #255
 1515 0120 00FA03F3 		lsl	r3, r0, r3
 1516 0124 6FEA0303 		mvn	r3, r3
 1517 0128 0B40     		ands	r3, r3, r1
 1518 012a 1A43     		orrs	r2, r2, r3
 1519 012c 3B69     		ldr	r3, [r7, #16]
 1520 012e 5A61     		str	r2, [r3, #20]
 1521              	.L63:
 772:../Dave/Generated/src/CAN001/CAN001.c ****     for(Count = 0U; Count < DataLength; Count++) 
 1522              		.loc 1 772 0
 1523 0130 BB69     		ldr	r3, [r7, #24]
 1524 0132 03F10103 		add	r3, r3, #1
 1525 0136 BB61     		str	r3, [r7, #24]
 1526              	.L61:
 772:../Dave/Generated/src/CAN001/CAN001.c ****     for(Count = 0U; Count < DataLength; Count++) 
 1527              		.loc 1 772 0 is_stmt 0 discriminator 1
 1528 0138 BA7A     		ldrb	r2, [r7, #10]	@ zero_extendqisi2
 1529 013a BB69     		ldr	r3, [r7, #24]
 1530 013c 9A42     		cmp	r2, r3
 1531 013e A5D8     		bhi	.L64
 782:../Dave/Generated/src/CAN001/CAN001.c ****                                    ((Count-4U)*8U), (uint32_t)(*(DataPtr + Count)));
 783:../Dave/Generated/src/CAN001/CAN001.c ****       }
 784:../Dave/Generated/src/CAN001/CAN001.c ****     }
 785:../Dave/Generated/src/CAN001/CAN001.c ****     /* Reset RTSEL and Set MSGVAL ,TXEN0 and TXEN1, NEWDATA and RXEN */
 786:../Dave/Generated/src/CAN001/CAN001.c ****     CAN_MOxRegs->MOCTR = (CAN_MO_MOCTR_SETTXEN0_Msk | \
 1532              		.loc 1 786 0 is_stmt 1
 1533 0140 3A69     		ldr	r2, [r7, #16]
 1534 0142 4FF04003 		mov	r3, #64
 1535 0146 C0F2A863 		movt	r3, 1704
 1536 014a D361     		str	r3, [r2, #28]
 787:../Dave/Generated/src/CAN001/CAN001.c ****                         CAN_MO_MOCTR_SETTXEN1_Msk | \
 788:../Dave/Generated/src/CAN001/CAN001.c ****                         CAN_MO_MOCTR_SETRXEN_Msk | \
 789:../Dave/Generated/src/CAN001/CAN001.c ****                         CAN_MO_MOCTR_SETMSGVAL_Msk | \
 790:../Dave/Generated/src/CAN001/CAN001.c ****                         CAN_MO_MOCTR_SETNEWDAT_Msk | \
 791:../Dave/Generated/src/CAN001/CAN001.c ****                         CAN_MO_MOCTR_SETRXEN_Msk | \
 792:../Dave/Generated/src/CAN001/CAN001.c ****                         CAN_MO_MOCTR_RESRTSEL_Msk);
 793:../Dave/Generated/src/CAN001/CAN001.c ****     Error = (uint32_t)DAVEApp_SUCCESS;
 1537              		.loc 1 793 0
 1538 014c 4FF00003 		mov	r3, #0
 1539 0150 FB61     		str	r3, [r7, #28]
 1540              	.L59:
 794:../Dave/Generated/src/CAN001/CAN001.c ****   }
 795:../Dave/Generated/src/CAN001/CAN001.c ****  
 796:../Dave/Generated/src/CAN001/CAN001.c ****   return Error;
 1541              		.loc 1 796 0
 1542 0152 FB69     		ldr	r3, [r7, #28]
 797:../Dave/Generated/src/CAN001/CAN001.c **** }
 1543              		.loc 1 797 0
 1544 0154 1846     		mov	r0, r3
 1545 0156 07F12407 		add	r7, r7, #36
 1546 015a BD46     		mov	sp, r7
 1547 015c 80BC     		pop	{r7}
 1548 015e 7047     		bx	lr
 1549              		.cfi_endproc
 1550              	.LFE122:
 1552              		.section	.text.CAN001_GetMOFlagStatus,"ax",%progbits
 1553              		.align	2
 1554              		.global	CAN001_GetMOFlagStatus
 1555              		.thumb
 1556              		.thumb_func
 1558              	CAN001_GetMOFlagStatus:
 1559              	.LFB123:
 798:../Dave/Generated/src/CAN001/CAN001.c **** 
 799:../Dave/Generated/src/CAN001/CAN001.c **** 
 800:../Dave/Generated/src/CAN001/CAN001.c ****     
 801:../Dave/Generated/src/CAN001/CAN001.c **** /*
 802:../Dave/Generated/src/CAN001/CAN001.c ****  *  This function is used to return the status of the message object specified. 
 803:../Dave/Generated/src/CAN001/CAN001.c ****  *  The flag value to be returned should be passed as input parameter of 
 804:../Dave/Generated/src/CAN001/CAN001.c ****  *   type MsgStatus 
 805:../Dave/Generated/src/CAN001/CAN001.c ****  */
 806:../Dave/Generated/src/CAN001/CAN001.c **** 
 807:../Dave/Generated/src/CAN001/CAN001.c **** status_t CAN001_GetMOFlagStatus
 808:../Dave/Generated/src/CAN001/CAN001.c **** (
 809:../Dave/Generated/src/CAN001/CAN001.c ****   const CAN001_HandleType* Handle, 
 810:../Dave/Generated/src/CAN001/CAN001.c ****   uint8_t MsgObjnr, 
 811:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_MsgStatusType NewMsgStatus
 812:../Dave/Generated/src/CAN001/CAN001.c ****  )
 813:../Dave/Generated/src/CAN001/CAN001.c **** {
 1560              		.loc 1 813 0
 1561              		.cfi_startproc
 1562              		@ args = 0, pretend = 0, frame = 24
 1563              		@ frame_needed = 1, uses_anonymous_args = 0
 1564              		@ link register save eliminated.
 1565 0000 80B4     		push	{r7}
 1566              	.LCFI32:
 1567              		.cfi_def_cfa_offset 4
 1568              		.cfi_offset 7, -4
 1569 0002 87B0     		sub	sp, sp, #28
 1570              	.LCFI33:
 1571              		.cfi_def_cfa_offset 32
 1572 0004 00AF     		add	r7, sp, #0
 1573              	.LCFI34:
 1574              		.cfi_def_cfa_register 7
 1575 0006 7860     		str	r0, [r7, #4]
 1576 0008 1346     		mov	r3, r2
 1577 000a 0A46     		mov	r2, r1
 1578 000c FA70     		strb	r2, [r7, #3]
 1579 000e BB70     		strb	r3, [r7, #2]
 814:../Dave/Generated/src/CAN001/CAN001.c ****   status_t Status = (uint32_t)CAN001_ERROR;
 1580              		.loc 1 814 0
 1581 0010 4FF00503 		mov	r3, #5
 1582 0014 7B61     		str	r3, [r7, #20]
 815:../Dave/Generated/src/CAN001/CAN001.c ****   uint8_t MsgNo = (uint8_t)(Handle->FirstMOMapping+(MsgObjnr-1U));
 1583              		.loc 1 815 0
 1584 0016 7B68     		ldr	r3, [r7, #4]
 1585 0018 9A7B     		ldrb	r2, [r3, #14]	@ zero_extendqisi2
 1586 001a FB78     		ldrb	r3, [r7, #3]
 1587 001c D318     		adds	r3, r2, r3
 1588 001e DBB2     		uxtb	r3, r3
 1589 0020 03F1FF33 		add	r3, r3, #-1
 1590 0024 FB74     		strb	r3, [r7, #19]
 816:../Dave/Generated/src/CAN001/CAN001.c **** 	/* Mapping to message object offset value*/
 817:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_MO_TypeDef* CAN_MOxRegs = \
 818:../Dave/Generated/src/CAN001/CAN001.c ****                   GET_MO_OFFSET(MsgNo);
 1591              		.loc 1 818 0
 1592 0026 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 1593 0028 03F11073 		add	r3, r3, #37748736
 1594 002c 03F52863 		add	r3, r3, #2688
 1595 0030 4FEA4313 		lsl	r3, r3, #5
 817:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_MO_TypeDef* CAN_MOxRegs = \
 1596              		.loc 1 817 0
 1597 0034 FB60     		str	r3, [r7, #12]
 819:../Dave/Generated/src/CAN001/CAN001.c ****    
 820:../Dave/Generated/src/CAN001/CAN001.c ****   do
 821:../Dave/Generated/src/CAN001/CAN001.c ****   {
 822:../Dave/Generated/src/CAN001/CAN001.c ****     DBG002_N((MsgObjnr == 0U)||(MsgObjnr > Handle->NodeMONo));
 823:../Dave/Generated/src/CAN001/CAN001.c ****     DBG002_N((NewMsgStatus != RECEIVE_PENDING) && (NewMsgStatus != TRANSMIT_PENDING) \
 824:../Dave/Generated/src/CAN001/CAN001.c ****       && (NewMsgStatus != NEW_DATA) && (NewMsgStatus != MESSAGE_LOST));
 825:../Dave/Generated/src/CAN001/CAN001.c **** 
 826:../Dave/Generated/src/CAN001/CAN001.c ****     /* Check message object status */
 827:../Dave/Generated/src/CAN001/CAN001.c ****     if((CAN_MOxRegs->MOSTAT & (uint32_t)NewMsgStatus) != 0U)
 1598              		.loc 1 827 0
 1599 0036 FB68     		ldr	r3, [r7, #12]
 1600 0038 DA69     		ldr	r2, [r3, #28]
 1601 003a BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 1602 003c 1340     		ands	r3, r3, r2
 1603 003e 002B     		cmp	r3, #0
 1604 0040 03D0     		beq	.L67
 828:../Dave/Generated/src/CAN001/CAN001.c ****     {
 829:../Dave/Generated/src/CAN001/CAN001.c ****       Status = (uint32_t)CAN_SET;
 1605              		.loc 1 829 0
 1606 0042 4FF00103 		mov	r3, #1
 1607 0046 7B61     		str	r3, [r7, #20]
 1608 0048 02E0     		b	.L68
 1609              	.L67:
 830:../Dave/Generated/src/CAN001/CAN001.c ****     }
 831:../Dave/Generated/src/CAN001/CAN001.c ****     else
 832:../Dave/Generated/src/CAN001/CAN001.c ****     {
 833:../Dave/Generated/src/CAN001/CAN001.c ****       Status = (uint32_t)CAN_RESET;
 1610              		.loc 1 833 0
 1611 004a 4FF00003 		mov	r3, #0
 1612 004e 7B61     		str	r3, [r7, #20]
 1613              	.L68:
 834:../Dave/Generated/src/CAN001/CAN001.c ****     }
 835:../Dave/Generated/src/CAN001/CAN001.c ****   }while(0);
 836:../Dave/Generated/src/CAN001/CAN001.c **** 
 837:../Dave/Generated/src/CAN001/CAN001.c ****   return Status;
 1614              		.loc 1 837 0
 1615 0050 7B69     		ldr	r3, [r7, #20]
 838:../Dave/Generated/src/CAN001/CAN001.c **** }
 1616              		.loc 1 838 0
 1617 0052 1846     		mov	r0, r3
 1618 0054 07F11C07 		add	r7, r7, #28
 1619 0058 BD46     		mov	sp, r7
 1620 005a 80BC     		pop	{r7}
 1621 005c 7047     		bx	lr
 1622              		.cfi_endproc
 1623              	.LFE123:
 1625 005e 00BF     		.section	.text.CAN001_GetNodeFlagStatus,"ax",%progbits
 1626              		.align	2
 1627              		.global	CAN001_GetNodeFlagStatus
 1628              		.thumb
 1629              		.thumb_func
 1631              	CAN001_GetNodeFlagStatus:
 1632              	.LFB124:
 839:../Dave/Generated/src/CAN001/CAN001.c **** 
 840:../Dave/Generated/src/CAN001/CAN001.c **** /*  This function is used to return the status of the node specified.
 841:../Dave/Generated/src/CAN001/CAN001.c ****  *   The flag value to be returned should be passed as input parameter 
 842:../Dave/Generated/src/CAN001/CAN001.c ****  *   of type MsgStatusType.
 843:../Dave/Generated/src/CAN001/CAN001.c ****  */
 844:../Dave/Generated/src/CAN001/CAN001.c **** 
 845:../Dave/Generated/src/CAN001/CAN001.c **** status_t CAN001_GetNodeFlagStatus
 846:../Dave/Generated/src/CAN001/CAN001.c **** (
 847:../Dave/Generated/src/CAN001/CAN001.c ****   const CAN001_HandleType* Handle, 
 848:../Dave/Generated/src/CAN001/CAN001.c ****   CAN001_NodeStatusType NewNodeStatus
 849:../Dave/Generated/src/CAN001/CAN001.c **** )
 850:../Dave/Generated/src/CAN001/CAN001.c **** {
 1633              		.loc 1 850 0
 1634              		.cfi_startproc
 1635              		@ args = 0, pretend = 0, frame = 16
 1636              		@ frame_needed = 1, uses_anonymous_args = 0
 1637              		@ link register save eliminated.
 1638 0000 80B4     		push	{r7}
 1639              	.LCFI35:
 1640              		.cfi_def_cfa_offset 4
 1641              		.cfi_offset 7, -4
 1642 0002 85B0     		sub	sp, sp, #20
 1643              	.LCFI36:
 1644              		.cfi_def_cfa_offset 24
 1645 0004 00AF     		add	r7, sp, #0
 1646              	.LCFI37:
 1647              		.cfi_def_cfa_register 7
 1648 0006 7860     		str	r0, [r7, #4]
 1649 0008 0B46     		mov	r3, r1
 1650 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 851:../Dave/Generated/src/CAN001/CAN001.c ****   status_t Status = (uint32_t)CAN001_ERROR;
 1651              		.loc 1 851 0
 1652 000c 4FF00503 		mov	r3, #5
 1653 0010 FB60     		str	r3, [r7, #12]
 852:../Dave/Generated/src/CAN001/CAN001.c ****   /* Mapping to Node Register offset value*/  
 853:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_NODE_TypeDef* CAN_NodexRegs = Handle->CanNodeRegs;
 1654              		.loc 1 853 0
 1655 0012 7B68     		ldr	r3, [r7, #4]
 1656 0014 9B68     		ldr	r3, [r3, #8]
 1657 0016 BB60     		str	r3, [r7, #8]
 854:../Dave/Generated/src/CAN001/CAN001.c ****  
 855:../Dave/Generated/src/CAN001/CAN001.c ****   DBG002_N((NewNodeStatus != CAN001_ALERT_STATUS) && (NewNodeStatus != CAN001_ERROR_WARN_STATUS) \
 856:../Dave/Generated/src/CAN001/CAN001.c ****      && (NewNodeStatus != CAN001_BUS_OFF_STATUS) && (NewNodeStatus  != CAN001_LIST_LENGTH_ERROR)\
 857:../Dave/Generated/src/CAN001/CAN001.c ****      && (NewNodeStatus != CAN001_LIST_OBJECT_ERROR));
 858:../Dave/Generated/src/CAN001/CAN001.c **** 
 859:../Dave/Generated/src/CAN001/CAN001.c ****   /* Check Node status */
 860:../Dave/Generated/src/CAN001/CAN001.c ****   if ((CAN_NodexRegs->NSR & (uint32_t)NewNodeStatus) != 0U)
 1658              		.loc 1 860 0
 1659 0018 BB68     		ldr	r3, [r7, #8]
 1660 001a 5A68     		ldr	r2, [r3, #4]
 1661 001c 7B88     		ldrh	r3, [r7, #2]
 1662 001e 1340     		ands	r3, r3, r2
 1663 0020 002B     		cmp	r3, #0
 1664 0022 03D0     		beq	.L71
 861:../Dave/Generated/src/CAN001/CAN001.c ****   {
 862:../Dave/Generated/src/CAN001/CAN001.c ****     Status = (uint32_t)CAN_SET;
 1665              		.loc 1 862 0
 1666 0024 4FF00103 		mov	r3, #1
 1667 0028 FB60     		str	r3, [r7, #12]
 1668 002a 02E0     		b	.L72
 1669              	.L71:
 863:../Dave/Generated/src/CAN001/CAN001.c ****   }
 864:../Dave/Generated/src/CAN001/CAN001.c ****   else 
 865:../Dave/Generated/src/CAN001/CAN001.c ****   {
 866:../Dave/Generated/src/CAN001/CAN001.c ****     Status = (uint32_t)CAN_RESET;
 1670              		.loc 1 866 0
 1671 002c 4FF00003 		mov	r3, #0
 1672 0030 FB60     		str	r3, [r7, #12]
 1673              	.L72:
 867:../Dave/Generated/src/CAN001/CAN001.c ****   }          
 868:../Dave/Generated/src/CAN001/CAN001.c **** 
 869:../Dave/Generated/src/CAN001/CAN001.c ****   return Status;
 1674              		.loc 1 869 0
 1675 0032 FB68     		ldr	r3, [r7, #12]
 870:../Dave/Generated/src/CAN001/CAN001.c **** }
 1676              		.loc 1 870 0
 1677 0034 1846     		mov	r0, r3
 1678 0036 07F11407 		add	r7, r7, #20
 1679 003a BD46     		mov	sp, r7
 1680 003c 80BC     		pop	{r7}
 1681 003e 7047     		bx	lr
 1682              		.cfi_endproc
 1683              	.LFE124:
 1685              		.section	.text.CAN001_GetMOPndRegisterBitStatus,"ax",%progbits
 1686              		.align	2
 1687              		.global	CAN001_GetMOPndRegisterBitStatus
 1688              		.thumb
 1689              		.thumb_func
 1691              	CAN001_GetMOPndRegisterBitStatus:
 1692              	.LFB125:
 871:../Dave/Generated/src/CAN001/CAN001.c **** 
 872:../Dave/Generated/src/CAN001/CAN001.c **** 
 873:../Dave/Generated/src/CAN001/CAN001.c **** 
 874:../Dave/Generated/src/CAN001/CAN001.c **** /*  This function will return the message object's message 
 875:../Dave/Generated/src/CAN001/CAN001.c ****  *  pending register bit value
 876:../Dave/Generated/src/CAN001/CAN001.c ****  */
 877:../Dave/Generated/src/CAN001/CAN001.c **** 
 878:../Dave/Generated/src/CAN001/CAN001.c **** status_t CAN001_GetMOPndRegisterBitStatus
 879:../Dave/Generated/src/CAN001/CAN001.c **** (
 880:../Dave/Generated/src/CAN001/CAN001.c ****   const CAN001_HandleType* Handle, 
 881:../Dave/Generated/src/CAN001/CAN001.c ****   uint8_t MsgObjnr
 882:../Dave/Generated/src/CAN001/CAN001.c **** )
 883:../Dave/Generated/src/CAN001/CAN001.c **** {
 1693              		.loc 1 883 0
 1694              		.cfi_startproc
 1695              		@ args = 0, pretend = 0, frame = 16
 1696              		@ frame_needed = 1, uses_anonymous_args = 0
 1697              		@ link register save eliminated.
 1698 0000 80B4     		push	{r7}
 1699              	.LCFI38:
 1700              		.cfi_def_cfa_offset 4
 1701              		.cfi_offset 7, -4
 1702 0002 85B0     		sub	sp, sp, #20
 1703              	.LCFI39:
 1704              		.cfi_def_cfa_offset 24
 1705 0004 00AF     		add	r7, sp, #0
 1706              	.LCFI40:
 1707              		.cfi_def_cfa_register 7
 1708 0006 7860     		str	r0, [r7, #4]
 1709 0008 0B46     		mov	r3, r1
 1710 000a FB70     		strb	r3, [r7, #3]
 884:../Dave/Generated/src/CAN001/CAN001.c ****   status_t Status = (uint32_t)CAN001_ERROR;
 1711              		.loc 1 884 0
 1712 000c 4FF00503 		mov	r3, #5
 1713 0010 FB60     		str	r3, [r7, #12]
 885:../Dave/Generated/src/CAN001/CAN001.c ****   uint32_t* MsgPndRegOffset;
 886:../Dave/Generated/src/CAN001/CAN001.c ****   
 887:../Dave/Generated/src/CAN001/CAN001.c ****   DBG002_N((MsgObjnr == 0U)||(MsgObjnr > Handle->NodeMONo));
 888:../Dave/Generated/src/CAN001/CAN001.c ****   MsgPndRegOffset = GET_MSGPND_OFFSET(Handle->NodeID);
 1714              		.loc 1 888 0
 1715 0012 7B68     		ldr	r3, [r7, #4]
 1716 0014 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 1717 0016 1A46     		mov	r2, r3
 1718 0018 45F25003 		movw	r3, #20560
 1719 001c C1F20023 		movt	r3, 4608
 1720 0020 D318     		adds	r3, r2, r3
 1721 0022 4FEA8303 		lsl	r3, r3, #2
 1722 0026 BB60     		str	r3, [r7, #8]
 889:../Dave/Generated/src/CAN001/CAN001.c ****   Status = RD_REG((*MsgPndRegOffset), (CAN_MSPND_PND_Msk << (MsgObjnr-1U)), \
 1723              		.loc 1 889 0
 1724 0028 BB68     		ldr	r3, [r7, #8]
 1725 002a 1A68     		ldr	r2, [r3, #0]
 1726 002c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1727 002e 03F1FF33 		add	r3, r3, #-1
 1728 0032 4FF0FF31 		mov	r1, #-1
 1729 0036 01FA03F3 		lsl	r3, r1, r3
 1730 003a 1A40     		ands	r2, r2, r3
 1731 003c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1732 003e 03F1FF33 		add	r3, r3, #-1
 1733 0042 22FA03F3 		lsr	r3, r2, r3
 1734 0046 FB60     		str	r3, [r7, #12]
 890:../Dave/Generated/src/CAN001/CAN001.c ****                                                                   (MsgObjnr-1U));
 891:../Dave/Generated/src/CAN001/CAN001.c ****  
 892:../Dave/Generated/src/CAN001/CAN001.c ****   return Status;
 1735              		.loc 1 892 0
 1736 0048 FB68     		ldr	r3, [r7, #12]
 893:../Dave/Generated/src/CAN001/CAN001.c **** }
 1737              		.loc 1 893 0
 1738 004a 1846     		mov	r0, r3
 1739 004c 07F11407 		add	r7, r7, #20
 1740 0050 BD46     		mov	sp, r7
 1741 0052 80BC     		pop	{r7}
 1742 0054 7047     		bx	lr
 1743              		.cfi_endproc
 1744              	.LFE125:
 1746 0056 00BF     		.section	.text.CAN001_ClearMOFlagStatus,"ax",%progbits
 1747              		.align	2
 1748              		.global	CAN001_ClearMOFlagStatus
 1749              		.thumb
 1750              		.thumb_func
 1752              	CAN001_ClearMOFlagStatus:
 1753              	.LFB126:
 894:../Dave/Generated/src/CAN001/CAN001.c **** 
 895:../Dave/Generated/src/CAN001/CAN001.c **** 
 896:../Dave/Generated/src/CAN001/CAN001.c **** /*  This function is used to clear the status bits of message object
 897:../Dave/Generated/src/CAN001/CAN001.c ****  *  register MOSTATx. The input parameter can be a combination of 
 898:../Dave/Generated/src/CAN001/CAN001.c ****  *  enum type MsgStatus
 899:../Dave/Generated/src/CAN001/CAN001.c ****  */
 900:../Dave/Generated/src/CAN001/CAN001.c **** 
 901:../Dave/Generated/src/CAN001/CAN001.c **** status_t CAN001_ClearMOFlagStatus
 902:../Dave/Generated/src/CAN001/CAN001.c **** (
 903:../Dave/Generated/src/CAN001/CAN001.c ****   const CAN001_HandleType* Handle, 
 904:../Dave/Generated/src/CAN001/CAN001.c ****   uint8_t MsgObjnr, 
 905:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_MsgStatusType NewMsgStatus
 906:../Dave/Generated/src/CAN001/CAN001.c **** )
 907:../Dave/Generated/src/CAN001/CAN001.c **** {
 1754              		.loc 1 907 0
 1755              		.cfi_startproc
 1756              		@ args = 0, pretend = 0, frame = 24
 1757              		@ frame_needed = 1, uses_anonymous_args = 0
 1758              		@ link register save eliminated.
 1759 0000 80B4     		push	{r7}
 1760              	.LCFI41:
 1761              		.cfi_def_cfa_offset 4
 1762              		.cfi_offset 7, -4
 1763 0002 87B0     		sub	sp, sp, #28
 1764              	.LCFI42:
 1765              		.cfi_def_cfa_offset 32
 1766 0004 00AF     		add	r7, sp, #0
 1767              	.LCFI43:
 1768              		.cfi_def_cfa_register 7
 1769 0006 7860     		str	r0, [r7, #4]
 1770 0008 1346     		mov	r3, r2
 1771 000a 0A46     		mov	r2, r1
 1772 000c FA70     		strb	r2, [r7, #3]
 1773 000e BB70     		strb	r3, [r7, #2]
 908:../Dave/Generated/src/CAN001/CAN001.c ****   status_t Status = (uint32_t)CAN001_ERROR;
 1774              		.loc 1 908 0
 1775 0010 4FF00503 		mov	r3, #5
 1776 0014 7B61     		str	r3, [r7, #20]
 909:../Dave/Generated/src/CAN001/CAN001.c ****   uint8_t MsgNo = (uint8_t)(Handle->FirstMOMapping+(MsgObjnr-1U));
 1777              		.loc 1 909 0
 1778 0016 7B68     		ldr	r3, [r7, #4]
 1779 0018 9A7B     		ldrb	r2, [r3, #14]	@ zero_extendqisi2
 1780 001a FB78     		ldrb	r3, [r7, #3]
 1781 001c D318     		adds	r3, r2, r3
 1782 001e DBB2     		uxtb	r3, r3
 1783 0020 03F1FF33 		add	r3, r3, #-1
 1784 0024 FB74     		strb	r3, [r7, #19]
 910:../Dave/Generated/src/CAN001/CAN001.c ****   /* Mapping to message object offset value*/
 911:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_MO_TypeDef* CAN_MOxRegs = \
 912:../Dave/Generated/src/CAN001/CAN001.c ****                   GET_MO_OFFSET(MsgNo);
 1785              		.loc 1 912 0
 1786 0026 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 1787 0028 03F11073 		add	r3, r3, #37748736
 1788 002c 03F52863 		add	r3, r3, #2688
 1789 0030 4FEA4313 		lsl	r3, r3, #5
 911:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_MO_TypeDef* CAN_MOxRegs = \
 1790              		.loc 1 911 0
 1791 0034 FB60     		str	r3, [r7, #12]
 913:../Dave/Generated/src/CAN001/CAN001.c ****   
 914:../Dave/Generated/src/CAN001/CAN001.c ****   if ((MsgObjnr == 0U)||(MsgObjnr > Handle->NodeMONo))
 1792              		.loc 1 914 0
 1793 0036 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1794 0038 002B     		cmp	r3, #0
 1795 003a 04D0     		beq	.L77
 1796              		.loc 1 914 0 is_stmt 0 discriminator 1
 1797 003c 7B68     		ldr	r3, [r7, #4]
 1798 003e DB7B     		ldrb	r3, [r3, #15]	@ zero_extendqisi2
 1799 0040 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1800 0042 9A42     		cmp	r2, r3
 1801 0044 03D9     		bls	.L78
 1802              	.L77:
 915:../Dave/Generated/src/CAN001/CAN001.c ****   {
 916:../Dave/Generated/src/CAN001/CAN001.c ****     Status = (uint32_t)CAN001_MO_NOT_FOUND;
 1803              		.loc 1 916 0 is_stmt 1
 1804 0046 4FF00203 		mov	r3, #2
 1805 004a 7B61     		str	r3, [r7, #20]
 1806 004c 07E0     		b	.L79
 1807              	.L78:
 917:../Dave/Generated/src/CAN001/CAN001.c ****     ERROR(DBG002_GID_CAN001,Status, 0, NULL);
 918:../Dave/Generated/src/CAN001/CAN001.c ****   }
 919:../Dave/Generated/src/CAN001/CAN001.c ****   else
 920:../Dave/Generated/src/CAN001/CAN001.c ****   {
 921:../Dave/Generated/src/CAN001/CAN001.c ****     CAN_MOxRegs->MOCTR = CAN001_CLEAR_MO_STATUS_MASK & (uint32_t)NewMsgStatus;
 1808              		.loc 1 921 0
 1809 004e BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 1810 0050 03F01B02 		and	r2, r3, #27
 1811 0054 FB68     		ldr	r3, [r7, #12]
 1812 0056 DA61     		str	r2, [r3, #28]
 922:../Dave/Generated/src/CAN001/CAN001.c ****     Status = (uint32_t)DAVEApp_SUCCESS;
 1813              		.loc 1 922 0
 1814 0058 4FF00003 		mov	r3, #0
 1815 005c 7B61     		str	r3, [r7, #20]
 1816              	.L79:
 923:../Dave/Generated/src/CAN001/CAN001.c ****   }
 924:../Dave/Generated/src/CAN001/CAN001.c ****  
 925:../Dave/Generated/src/CAN001/CAN001.c ****   return Status;
 1817              		.loc 1 925 0
 1818 005e 7B69     		ldr	r3, [r7, #20]
 926:../Dave/Generated/src/CAN001/CAN001.c **** }	
 1819              		.loc 1 926 0
 1820 0060 1846     		mov	r0, r3
 1821 0062 07F11C07 		add	r7, r7, #28
 1822 0066 BD46     		mov	sp, r7
 1823 0068 80BC     		pop	{r7}
 1824 006a 7047     		bx	lr
 1825              		.cfi_endproc
 1826              	.LFE126:
 1828              		.section	.text.CAN001_ClearNodeFlagStatus,"ax",%progbits
 1829              		.align	2
 1830              		.global	CAN001_ClearNodeFlagStatus
 1831              		.thumb
 1832              		.thumb_func
 1834              	CAN001_ClearNodeFlagStatus:
 1835              	.LFB127:
 927:../Dave/Generated/src/CAN001/CAN001.c **** 
 928:../Dave/Generated/src/CAN001/CAN001.c **** /*  This function is used to clear the status bits of Node 
 929:../Dave/Generated/src/CAN001/CAN001.c ****  *   register NSRx. The input parameter can be a combination
 930:../Dave/Generated/src/CAN001/CAN001.c ****  *   of enum type NodeStatus  
 931:../Dave/Generated/src/CAN001/CAN001.c ****  */
 932:../Dave/Generated/src/CAN001/CAN001.c **** 
 933:../Dave/Generated/src/CAN001/CAN001.c **** void CAN001_ClearNodeFlagStatus
 934:../Dave/Generated/src/CAN001/CAN001.c **** (
 935:../Dave/Generated/src/CAN001/CAN001.c ****   const CAN001_HandleType* Handle, 
 936:../Dave/Generated/src/CAN001/CAN001.c ****   CAN001_NodeStatusType NewNodeStatus
 937:../Dave/Generated/src/CAN001/CAN001.c **** )
 938:../Dave/Generated/src/CAN001/CAN001.c **** {
 1836              		.loc 1 938 0
 1837              		.cfi_startproc
 1838              		@ args = 0, pretend = 0, frame = 16
 1839              		@ frame_needed = 1, uses_anonymous_args = 0
 1840              		@ link register save eliminated.
 1841 0000 80B4     		push	{r7}
 1842              	.LCFI44:
 1843              		.cfi_def_cfa_offset 4
 1844              		.cfi_offset 7, -4
 1845 0002 85B0     		sub	sp, sp, #20
 1846              	.LCFI45:
 1847              		.cfi_def_cfa_offset 24
 1848 0004 00AF     		add	r7, sp, #0
 1849              	.LCFI46:
 1850              		.cfi_def_cfa_register 7
 1851 0006 7860     		str	r0, [r7, #4]
 1852 0008 0B46     		mov	r3, r1
 1853 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 939:../Dave/Generated/src/CAN001/CAN001.c ****   /* Mapping to Node Register offset value*/  
 940:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_NODE_TypeDef* CAN_NodexRegs = Handle->CanNodeRegs;
 1854              		.loc 1 940 0
 1855 000c 7B68     		ldr	r3, [r7, #4]
 1856 000e 9B68     		ldr	r3, [r3, #8]
 1857 0010 FB60     		str	r3, [r7, #12]
 941:../Dave/Generated/src/CAN001/CAN001.c ****  
 942:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_NodexRegs->NSR &= ~((uint32_t)NewNodeStatus & \
 1858              		.loc 1 942 0
 1859 0012 FB68     		ldr	r3, [r7, #12]
 1860 0014 5A68     		ldr	r2, [r3, #4]
 1861 0016 7B88     		ldrh	r3, [r7, #2]
 1862 0018 03F47873 		and	r3, r3, #992
 1863 001c 6FEA0303 		mvn	r3, r3
 1864 0020 1A40     		ands	r2, r2, r3
 1865 0022 FB68     		ldr	r3, [r7, #12]
 1866 0024 5A60     		str	r2, [r3, #4]
 943:../Dave/Generated/src/CAN001/CAN001.c ****                                               CAN001_CLEAR_NODE_STATUS_MASK); 	
 944:../Dave/Generated/src/CAN001/CAN001.c ****  
 945:../Dave/Generated/src/CAN001/CAN001.c **** }
 1867              		.loc 1 945 0
 1868 0026 07F11407 		add	r7, r7, #20
 1869 002a BD46     		mov	sp, r7
 1870 002c 80BC     		pop	{r7}
 1871 002e 7047     		bx	lr
 1872              		.cfi_endproc
 1873              	.LFE127:
 1875              		.section	.text.CAN001_ClearMOPndRegisterBit,"ax",%progbits
 1876              		.align	2
 1877              		.global	CAN001_ClearMOPndRegisterBit
 1878              		.thumb
 1879              		.thumb_func
 1881              	CAN001_ClearMOPndRegisterBit:
 1882              	.LFB128:
 946:../Dave/Generated/src/CAN001/CAN001.c **** 
 947:../Dave/Generated/src/CAN001/CAN001.c **** 
 948:../Dave/Generated/src/CAN001/CAN001.c **** 
 949:../Dave/Generated/src/CAN001/CAN001.c **** 
 950:../Dave/Generated/src/CAN001/CAN001.c **** /*  These function is used to clear message pending register bit
 951:../Dave/Generated/src/CAN001/CAN001.c ****  *  of specific message object.
 952:../Dave/Generated/src/CAN001/CAN001.c ****  */
 953:../Dave/Generated/src/CAN001/CAN001.c **** 
 954:../Dave/Generated/src/CAN001/CAN001.c **** status_t CAN001_ClearMOPndRegisterBit(const CAN001_HandleType* Handle, uint8_t MsgObjnr)
 955:../Dave/Generated/src/CAN001/CAN001.c **** {
 1883              		.loc 1 955 0
 1884              		.cfi_startproc
 1885              		@ args = 0, pretend = 0, frame = 16
 1886              		@ frame_needed = 1, uses_anonymous_args = 0
 1887              		@ link register save eliminated.
 1888 0000 80B4     		push	{r7}
 1889              	.LCFI47:
 1890              		.cfi_def_cfa_offset 4
 1891              		.cfi_offset 7, -4
 1892 0002 85B0     		sub	sp, sp, #20
 1893              	.LCFI48:
 1894              		.cfi_def_cfa_offset 24
 1895 0004 00AF     		add	r7, sp, #0
 1896              	.LCFI49:
 1897              		.cfi_def_cfa_register 7
 1898 0006 7860     		str	r0, [r7, #4]
 1899 0008 0B46     		mov	r3, r1
 1900 000a FB70     		strb	r3, [r7, #3]
 956:../Dave/Generated/src/CAN001/CAN001.c ****   status_t Status = (uint32_t)CAN001_ERROR;
 1901              		.loc 1 956 0
 1902 000c 4FF00503 		mov	r3, #5
 1903 0010 FB60     		str	r3, [r7, #12]
 957:../Dave/Generated/src/CAN001/CAN001.c ****   uint32_t* MsgPndRegOffset = 0;
 1904              		.loc 1 957 0
 1905 0012 4FF00003 		mov	r3, #0
 1906 0016 BB60     		str	r3, [r7, #8]
 958:../Dave/Generated/src/CAN001/CAN001.c ****   
 959:../Dave/Generated/src/CAN001/CAN001.c ****   if ((MsgObjnr == 0U)||(MsgObjnr > Handle->NodeMONo))
 1907              		.loc 1 959 0
 1908 0018 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1909 001a 002B     		cmp	r3, #0
 1910 001c 04D0     		beq	.L83
 1911              		.loc 1 959 0 is_stmt 0 discriminator 1
 1912 001e 7B68     		ldr	r3, [r7, #4]
 1913 0020 DB7B     		ldrb	r3, [r3, #15]	@ zero_extendqisi2
 1914 0022 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1915 0024 9A42     		cmp	r2, r3
 1916 0026 03D9     		bls	.L84
 1917              	.L83:
 960:../Dave/Generated/src/CAN001/CAN001.c ****   {
 961:../Dave/Generated/src/CAN001/CAN001.c ****     Status = (uint32_t)CAN001_MO_NOT_FOUND;
 1918              		.loc 1 961 0 is_stmt 1
 1919 0028 4FF00203 		mov	r3, #2
 1920 002c FB60     		str	r3, [r7, #12]
 1921 002e 1BE0     		b	.L85
 1922              	.L84:
 962:../Dave/Generated/src/CAN001/CAN001.c ****     ERROR(DBG002_GID_CAN001,Status, 0, NULL);
 963:../Dave/Generated/src/CAN001/CAN001.c ****   }
 964:../Dave/Generated/src/CAN001/CAN001.c ****   else
 965:../Dave/Generated/src/CAN001/CAN001.c ****   {
 966:../Dave/Generated/src/CAN001/CAN001.c ****     MsgPndRegOffset = GET_MSGPND_OFFSET(Handle->NodeID);
 1923              		.loc 1 966 0
 1924 0030 7B68     		ldr	r3, [r7, #4]
 1925 0032 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 1926 0034 1A46     		mov	r2, r3
 1927 0036 45F25003 		movw	r3, #20560
 1928 003a C1F20023 		movt	r3, 4608
 1929 003e D318     		adds	r3, r2, r3
 1930 0040 4FEA8303 		lsl	r3, r3, #2
 1931 0044 BB60     		str	r3, [r7, #8]
 967:../Dave/Generated/src/CAN001/CAN001.c ****     CLR_BIT((*MsgPndRegOffset), (MsgObjnr-1U));
 1932              		.loc 1 967 0
 1933 0046 BB68     		ldr	r3, [r7, #8]
 1934 0048 1A68     		ldr	r2, [r3, #0]
 1935 004a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1936 004c 03F1FF33 		add	r3, r3, #-1
 1937 0050 4FF00101 		mov	r1, #1
 1938 0054 01FA03F3 		lsl	r3, r1, r3
 1939 0058 6FEA0303 		mvn	r3, r3
 1940 005c 1A40     		ands	r2, r2, r3
 1941 005e BB68     		ldr	r3, [r7, #8]
 1942 0060 1A60     		str	r2, [r3, #0]
 968:../Dave/Generated/src/CAN001/CAN001.c ****     Status = (uint32_t)DAVEApp_SUCCESS;
 1943              		.loc 1 968 0
 1944 0062 4FF00003 		mov	r3, #0
 1945 0066 FB60     		str	r3, [r7, #12]
 1946              	.L85:
 969:../Dave/Generated/src/CAN001/CAN001.c ****   }
 970:../Dave/Generated/src/CAN001/CAN001.c ****  
 971:../Dave/Generated/src/CAN001/CAN001.c ****   return Status;
 1947              		.loc 1 971 0
 1948 0068 FB68     		ldr	r3, [r7, #12]
 972:../Dave/Generated/src/CAN001/CAN001.c **** }
 1949              		.loc 1 972 0
 1950 006a 1846     		mov	r0, r3
 1951 006c 07F11407 		add	r7, r7, #20
 1952 0070 BD46     		mov	sp, r7
 1953 0072 80BC     		pop	{r7}
 1954 0074 7047     		bx	lr
 1955              		.cfi_endproc
 1956              	.LFE128:
 1958 0076 00BF     		.text
 1959              	.Letext0:
 1960              		.file 2 "c:\\dave-3.1.10\\arm-gcc\\bin\\../lib/gcc/arm-none-eabi/4.7.4/../../../../arm-none-eabi/i
 1961              		.file 3 "C:\\DAVE-3.1.10\\eclipse\\/../CMSIS/Infineon/XMC4500_series/Include/XMC4500.h"
 1962              		.file 4 "C:\\data\\workspaces\\github\\de.protos.demos\\src\\HexagonCANDemo\\HexagonCANDemoST\\Dav
 1963              		.file 5 "C:\\data\\workspaces\\github\\de.protos.demos\\src\\HexagonCANDemo\\HexagonCANDemoST\\Dav
 1964              		.file 6 "C:\\data\\workspaces\\github\\de.protos.demos\\src\\HexagonCANDemo\\HexagonCANDemoST\\Dav
 1965              		.file 7 "C:\\DAVE-3.1.10\\eclipse\\/../CMSIS/Include/core_cm4.h"
 1966              		.file 8 "C:\\data\\workspaces\\github\\de.protos.demos\\src\\HexagonCANDemo\\HexagonCANDemoST\\Dav
DEFINED SYMBOLS
                            *ABS*:00000000 CAN001.c
C:\Users\TJung\AppData\Local\Temp\ccDjMbs2.s:20     .text.CAN001_lAllocateMOtoNodeList:00000000 $t
C:\Users\TJung\AppData\Local\Temp\ccDjMbs2.s:24     .text.CAN001_lAllocateMOtoNodeList:00000000 CAN001_lAllocateMOtoNodeList
C:\Users\TJung\AppData\Local\Temp\ccDjMbs2.s:80     .text.CAN001_lDeallocateMsgObj:00000000 $t
C:\Users\TJung\AppData\Local\Temp\ccDjMbs2.s:84     .text.CAN001_lDeallocateMsgObj:00000000 CAN001_lDeallocateMsgObj
C:\Users\TJung\AppData\Local\Temp\ccDjMbs2.s:144    .text.CAN001_lConfigMORegs:00000000 $t
C:\Users\TJung\AppData\Local\Temp\ccDjMbs2.s:148    .text.CAN001_lConfigMORegs:00000000 CAN001_lConfigMORegs
C:\Users\TJung\AppData\Local\Temp\ccDjMbs2.s:375    .text.CAN001_lNodeInit:00000000 $t
C:\Users\TJung\AppData\Local\Temp\ccDjMbs2.s:379    .text.CAN001_lNodeInit:00000000 CAN001_lNodeInit
C:\Users\TJung\AppData\Local\Temp\ccDjMbs2.s:528    .text.CAN001_Init:00000000 $t
C:\Users\TJung\AppData\Local\Temp\ccDjMbs2.s:533    .text.CAN001_Init:00000000 CAN001_Init
C:\Users\TJung\AppData\Local\Temp\ccDjMbs2.s:785    .text.CAN001_ConfigMsgObj:00000000 CAN001_ConfigMsgObj
C:\Users\TJung\AppData\Local\Temp\ccDjMbs2.s:629    .text.CAN001_NodeDeInit:00000000 $t
C:\Users\TJung\AppData\Local\Temp\ccDjMbs2.s:634    .text.CAN001_NodeDeInit:00000000 CAN001_NodeDeInit
C:\Users\TJung\AppData\Local\Temp\ccDjMbs2.s:780    .text.CAN001_ConfigMsgObj:00000000 $t
C:\Users\TJung\AppData\Local\Temp\ccDjMbs2.s:903    .text.CAN001_SendDataFrame:00000000 $t
C:\Users\TJung\AppData\Local\Temp\ccDjMbs2.s:908    .text.CAN001_SendDataFrame:00000000 CAN001_SendDataFrame
C:\Users\TJung\AppData\Local\Temp\ccDjMbs2.s:1002   .text.CAN001_SendRemoteFrame:00000000 $t
C:\Users\TJung\AppData\Local\Temp\ccDjMbs2.s:1007   .text.CAN001_SendRemoteFrame:00000000 CAN001_SendRemoteFrame
C:\Users\TJung\AppData\Local\Temp\ccDjMbs2.s:1101   .text.CAN001_ReadMsgObj:00000000 $t
C:\Users\TJung\AppData\Local\Temp\ccDjMbs2.s:1106   .text.CAN001_ReadMsgObj:00000000 CAN001_ReadMsgObj
C:\Users\TJung\AppData\Local\Temp\ccDjMbs2.s:1370   .text.CAN001_UpdateMODataRegisters:00000000 $t
C:\Users\TJung\AppData\Local\Temp\ccDjMbs2.s:1375   .text.CAN001_UpdateMODataRegisters:00000000 CAN001_UpdateMODataRegisters
C:\Users\TJung\AppData\Local\Temp\ccDjMbs2.s:1553   .text.CAN001_GetMOFlagStatus:00000000 $t
C:\Users\TJung\AppData\Local\Temp\ccDjMbs2.s:1558   .text.CAN001_GetMOFlagStatus:00000000 CAN001_GetMOFlagStatus
C:\Users\TJung\AppData\Local\Temp\ccDjMbs2.s:1626   .text.CAN001_GetNodeFlagStatus:00000000 $t
C:\Users\TJung\AppData\Local\Temp\ccDjMbs2.s:1631   .text.CAN001_GetNodeFlagStatus:00000000 CAN001_GetNodeFlagStatus
C:\Users\TJung\AppData\Local\Temp\ccDjMbs2.s:1686   .text.CAN001_GetMOPndRegisterBitStatus:00000000 $t
C:\Users\TJung\AppData\Local\Temp\ccDjMbs2.s:1691   .text.CAN001_GetMOPndRegisterBitStatus:00000000 CAN001_GetMOPndRegisterBitStatus
C:\Users\TJung\AppData\Local\Temp\ccDjMbs2.s:1747   .text.CAN001_ClearMOFlagStatus:00000000 $t
C:\Users\TJung\AppData\Local\Temp\ccDjMbs2.s:1752   .text.CAN001_ClearMOFlagStatus:00000000 CAN001_ClearMOFlagStatus
C:\Users\TJung\AppData\Local\Temp\ccDjMbs2.s:1829   .text.CAN001_ClearNodeFlagStatus:00000000 $t
C:\Users\TJung\AppData\Local\Temp\ccDjMbs2.s:1834   .text.CAN001_ClearNodeFlagStatus:00000000 CAN001_ClearNodeFlagStatus
C:\Users\TJung\AppData\Local\Temp\ccDjMbs2.s:1876   .text.CAN001_ClearMOPndRegisterBit:00000000 $t
C:\Users\TJung\AppData\Local\Temp\ccDjMbs2.s:1881   .text.CAN001_ClearMOPndRegisterBit:00000000 CAN001_ClearMOPndRegisterBit
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
CANGLOBAL_Init
CAN001_Handle0
CAN001_MessageHandle0_1
CAN001_MessageHandle0_2
CAN001_MessageHandle0_3
CAN001_MessageHandle0_4
CAN001_MessageHandle0_5
CAN001_MessageHandle0_6
CAN001_MessageHandle0_7
CAN001_MessageHandle0_8
CAN001_MessageHandle0_9
CAN001_MessageHandle0_10
