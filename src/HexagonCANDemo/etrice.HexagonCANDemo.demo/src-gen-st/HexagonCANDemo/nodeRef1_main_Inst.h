/**
 * @author generated by eTrice
 *
 * Instance File of Node nodeRef1 with SubSystem main
 * - instantiation of all actor instances and port instances
 * - configuration of data and connection of ports
 */

#include "messaging/etMessageService.h"

/* include all referenced ActorClasses */
#include "room/basic/service/can/ACANService.h"
#include "HexagonCANDemo/AMrPing.h"
#include "HexagonCANDemo/Application.h"
#include "HexagonCANDemo/AMrPong.h"
#include "room/basic/service/timing/ATimingService.h"

/* include all referenced ProtcolClasses */

/* instantiation of message services and message buffers */
/* PhysicalThread1 */
#define PHYSICALTHREAD1_POOL_SIZE		40
#define PHYSICALTHREAD1_BLOCK_SIZE	32
static uint8 msgBuffer_PhysicalThread1[PHYSICALTHREAD1_POOL_SIZE * PHYSICALTHREAD1_BLOCK_SIZE]; 
static etMessageService msgService_PhysicalThread1;

/* declarations of all ActorClass instances (const and variable structs) */

/* forward declaration of variable actor structs */
static Application _HexagonCANDemo_main_appl;
static AMrPing _HexagonCANDemo_main_appl_mrPing;
static AMrPong _HexagonCANDemo_main_appl_mrPong;
static ATimingService _HexagonCANDemo_main_timingService;
static ACANService _HexagonCANDemo_main_canService;

/* forward declaration of variable port structs */
/* nothing to do */
static PTimerConjPort_var _HexagonCANDemo_main_appl_mrPing_timer_var={
	0		/* status */
							};
static PCANTxConjPort_var _HexagonCANDemo_main_appl_mrPing_canTx_var={
	 ET_CAN_CHANNEL_NOT_DEFINED 		/* pChannel */
							};
static PCANRxConjPort_var _HexagonCANDemo_main_appl_mrPing_canRx_var={
	 ET_CAN_CHANNEL_NOT_DEFINED 		/* pChannel */
							};
static PTimerConjPort_var _HexagonCANDemo_main_canService_timer_var={
	0		/* status */
							};


/* instance _HexagonCANDemo_main_appl */
/* no ports/saps/services - nothing to initialize statically */

/* instance _HexagonCANDemo_main_appl_mrPing */
static const AMrPing_const _HexagonCANDemo_main_appl_mrPing_const = {
	/* Ports: {varData, msgService, peerAddress, localId} */
	/* simple ports */
	{NULL, &msgService_PhysicalThread1, 8+BASE_ADDRESS, 1} /* Port p0 */
	
	/* data receive ports */
	
	/* saps */
	,{&_HexagonCANDemo_main_appl_mrPing_timer_var, &msgService_PhysicalThread1, 10+BASE_ADDRESS, 2} /* Port timer */
	,{&_HexagonCANDemo_main_appl_mrPing_canTx_var, &msgService_PhysicalThread1, 14+BASE_ADDRESS, 3} /* Port canTx */
	,{&_HexagonCANDemo_main_appl_mrPing_canRx_var, &msgService_PhysicalThread1, 15+BASE_ADDRESS, 4} /* Port canRx */
	
	/* replicated ports */
	
	/* services */
};
static AMrPing _HexagonCANDemo_main_appl_mrPing = {
	&_HexagonCANDemo_main_appl_mrPing_const,
	
	/* data send ports */
	
	/* attributes */
	
	/* state and history are initialized in init function */
};

/* instance _HexagonCANDemo_main_appl_mrPong */
static const AMrPong_const _HexagonCANDemo_main_appl_mrPong_const = {
	/* Ports: {varData, msgService, peerAddress, localId} */
	/* simple ports */
	{NULL, &msgService_PhysicalThread1, 3+BASE_ADDRESS, 1} /* Port p0 */
	
	/* data receive ports */
	
	/* saps */
	
	/* replicated ports */
	
	/* services */
};
static AMrPong _HexagonCANDemo_main_appl_mrPong = {
	&_HexagonCANDemo_main_appl_mrPong_const,
	
	/* data send ports */
	
	/* attributes */
	
	/* state and history are initialized in init function */
};

/* instance _HexagonCANDemo_main_timingService */
static const etReplSubPort _HexagonCANDemo_main_timingService_repl_sub_ports[2] = {
	/* Replicated Sub Ports: {varData, msgService, peerAddress, localId, index} */
	{{NULL,&msgService_PhysicalThread1, 4+BASE_ADDRESS, 1},0}, /* Repl Sub Port timer idx +0*/
	{{NULL,&msgService_PhysicalThread1, 13+BASE_ADDRESS, 1},1} /* Repl Sub Port timer idx +1*/
};
static const ATimingService_const _HexagonCANDemo_main_timingService_const = {
	/* Ports: {varData, msgService, peerAddress, localId} */
	/* simple ports */
	
	/* data receive ports */
	
	/* saps */
	
	/* replicated ports */
	
	/* services */
	{2, _HexagonCANDemo_main_timingService_repl_sub_ports+0}
};
static ATimingService _HexagonCANDemo_main_timingService = {
	&_HexagonCANDemo_main_timingService_const,
	
	/* data send ports */
	
	/* attributes */
	
	/* state and history are initialized in init function */
};

/* instance _HexagonCANDemo_main_canService */
static const etReplSubPort _HexagonCANDemo_main_canService_repl_sub_ports[2] = {
	/* Replicated Sub Ports: {varData, msgService, peerAddress, localId, index} */
	{{NULL,&msgService_PhysicalThread1, 5+BASE_ADDRESS, 2},0} /* Repl Sub Port canTx idx +0*/,
	{{NULL,&msgService_PhysicalThread1, 6+BASE_ADDRESS, 3},0} /* Repl Sub Port canRx idx +0*/
};
static const ACANService_const _HexagonCANDemo_main_canService_const = {
	/* Ports: {varData, msgService, peerAddress, localId} */
	/* simple ports */
	
	/* data receive ports */
	
	/* saps */
	{&_HexagonCANDemo_main_canService_timer_var, &msgService_PhysicalThread1, 11+BASE_ADDRESS, 1} /* Port timer */
	
	/* replicated ports */
	
	/* services */
	,{1, _HexagonCANDemo_main_canService_repl_sub_ports+0}
	,{1, _HexagonCANDemo_main_canService_repl_sub_ports+1}
};
static ACANService _HexagonCANDemo_main_canService = {
	&_HexagonCANDemo_main_canService_const,
	
	/* data send ports */
	
	/* attributes */
	{ {
		 ET_CAN_CHANNEL_NOT_DEFINED 		/* channel */,
		0xFFFFFFFF		/* msgId */,
		{0, 0, 0, 0, 0, 0, 0, 0}		/* data[8] */
	}, {
		 ET_CAN_CHANNEL_NOT_DEFINED 		/* channel */,
		0xFFFFFFFF		/* msgId */,
		{0, 0, 0, 0, 0, 0, 0, 0}		/* data[8] */
	}, {
		 ET_CAN_CHANNEL_NOT_DEFINED 		/* channel */,
		0xFFFFFFFF		/* msgId */,
		{0, 0, 0, 0, 0, 0, 0, 0}		/* data[8] */
	}, {
		 ET_CAN_CHANNEL_NOT_DEFINED 		/* channel */,
		0xFFFFFFFF		/* msgId */,
		{0, 0, 0, 0, 0, 0, 0, 0}		/* data[8] */
	}, {
		 ET_CAN_CHANNEL_NOT_DEFINED 		/* channel */,
		0xFFFFFFFF		/* msgId */,
		{0, 0, 0, 0, 0, 0, 0, 0}		/* data[8] */
	}, {
		 ET_CAN_CHANNEL_NOT_DEFINED 		/* channel */,
		0xFFFFFFFF		/* msgId */,
		{0, 0, 0, 0, 0, 0, 0, 0}		/* data[8] */
	}, {
		 ET_CAN_CHANNEL_NOT_DEFINED 		/* channel */,
		0xFFFFFFFF		/* msgId */,
		{0, 0, 0, 0, 0, 0, 0, 0}		/* data[8] */
	}, {
		 ET_CAN_CHANNEL_NOT_DEFINED 		/* channel */,
		0xFFFFFFFF		/* msgId */,
		{0, 0, 0, 0, 0, 0, 0, 0}		/* data[8] */
	}, {
		 ET_CAN_CHANNEL_NOT_DEFINED 		/* channel */,
		0xFFFFFFFF		/* msgId */,
		{0, 0, 0, 0, 0, 0, 0, 0}		/* data[8] */
	}, {
		 ET_CAN_CHANNEL_NOT_DEFINED 		/* channel */,
		0xFFFFFFFF		/* msgId */,
		{0, 0, 0, 0, 0, 0, 0, 0}		/* data[8] */
	} } 		/* rxData[10] */,
	{ {
		 ET_CAN_CHANNEL_NOT_DEFINED 		/* channel */,
		0xFFFFFFFF		/* msgId */,
		{0, 0, 0, 0, 0, 0, 0, 0}		/* data[8] */
	}, {
		 ET_CAN_CHANNEL_NOT_DEFINED 		/* channel */,
		0xFFFFFFFF		/* msgId */,
		{0, 0, 0, 0, 0, 0, 0, 0}		/* data[8] */
	}, {
		 ET_CAN_CHANNEL_NOT_DEFINED 		/* channel */,
		0xFFFFFFFF		/* msgId */,
		{0, 0, 0, 0, 0, 0, 0, 0}		/* data[8] */
	}, {
		 ET_CAN_CHANNEL_NOT_DEFINED 		/* channel */,
		0xFFFFFFFF		/* msgId */,
		{0, 0, 0, 0, 0, 0, 0, 0}		/* data[8] */
	}, {
		 ET_CAN_CHANNEL_NOT_DEFINED 		/* channel */,
		0xFFFFFFFF		/* msgId */,
		{0, 0, 0, 0, 0, 0, 0, 0}		/* data[8] */
	}, {
		 ET_CAN_CHANNEL_NOT_DEFINED 		/* channel */,
		0xFFFFFFFF		/* msgId */,
		{0, 0, 0, 0, 0, 0, 0, 0}		/* data[8] */
	}, {
		 ET_CAN_CHANNEL_NOT_DEFINED 		/* channel */,
		0xFFFFFFFF		/* msgId */,
		{0, 0, 0, 0, 0, 0, 0, 0}		/* data[8] */
	}, {
		 ET_CAN_CHANNEL_NOT_DEFINED 		/* channel */,
		0xFFFFFFFF		/* msgId */,
		{0, 0, 0, 0, 0, 0, 0, 0}		/* data[8] */
	}, {
		 ET_CAN_CHANNEL_NOT_DEFINED 		/* channel */,
		0xFFFFFFFF		/* msgId */,
		{0, 0, 0, 0, 0, 0, 0, 0}		/* data[8] */
	}, {
		 ET_CAN_CHANNEL_NOT_DEFINED 		/* channel */,
		0xFFFFFFFF		/* msgId */,
		{0, 0, 0, 0, 0, 0, 0, 0}		/* data[8] */
	} } 		/* txData[10] */,
	50		/* pollTime */
	
	/* state and history are initialized in init function */
};

