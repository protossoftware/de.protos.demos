/**
 * @author generated by eTrice
 *
 * Utils File of ActorClass AMrPing
 * 
 */

#ifndef _HEXAGONCANDEMO_AMRPING_UTILS_H_
#define _HEXAGONCANDEMO_AMRPING_UTILS_H_

#include "HexagonCANDemo/AMrPing.h"

/*
 * access macros for ports, operations and attributes
*/

/* simple event ports */
#define p0_pong() PPingPongPort_pong(&self->constData->p0)

/* data receive ports */

/* data send ports */

/* saps */
#define timer_startTimer(data) PTimerConjPort_startTimer(&self->constData->timer, data)
#define timer_startTimeout(data) PTimerConjPort_startTimeout(&self->constData->timer, data)
#define timer_kill() PTimerConjPort_kill(&self->constData->timer)
#define canTx_init(data) PCANTxConjPort_init(&self->constData->canTx, data)
#define canTx_sendMsg(data) PCANTxConjPort_sendMsg(&self->constData->canTx, data)
#define canTx_resendMsg() PCANTxConjPort_resendMsg(&self->constData->canTx)
#define canRx_init(data) PCANRxConjPort_init(&self->constData->canRx, data)
#define canRx_readMsg() PCANRxConjPort_readMsg(&self->constData->canRx)
#define canRx_listenOnMsg(data) PCANRxConjPort_listenOnMsg(&self->constData->canRx, data)
#define canRx_transmitRequest() PCANRxConjPort_transmitRequest(&self->constData->canRx)

/* replicated event ports */

/* services */

/* operations */

/* attributes */

/* port operations */

#endif /* _HEXAGONCANDEMO_AMRPING_UTILS_H_ */

