/**
 * @author generated by eTrice
 *
 * Header File of ActorClass Application
 * 
 */

#ifndef _HEXAGONCANDEMO_APPLICATION_H_
#define _HEXAGONCANDEMO_APPLICATION_H_

#include "etDatatypes.h"
#include "messaging/etMessage.h"

#include "room/basic/service/can/PCANRx.h"
#include "room/basic/service/can/PCANTx.h"
#include "HexagonCANDemo/PPingPong.h"
#include "room/basic/service/timing/PTimer.h"


typedef struct Application Application;

/* const part of ActorClass (ROM) */
/* this actor class has no ports and thus no constant data */


/* variable part of ActorClass (RAM) */
struct Application {
	/* This actor class has no data at all.
	   But the private actor instance data is passed to all life cycle functions.
	   By introducing the dummy data we keep this case simple
	*/
	int dummy;
};

void Application_init(Application* self);

void Application_receiveMessage(void* self, const void* ifitem, const etMessage* msg);


/*--------------------- operations ---------------------*/


#endif /* _HEXAGONCANDEMO_APPLICATION_H_ */

