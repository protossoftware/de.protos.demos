/**
 * @author generated by eTrice
 *
 * Header File of ActorClass AMrPing
 * 
 */

#ifndef _HEXAGONCANDEMO_AMRPING_H_
#define _HEXAGONCANDEMO_AMRPING_H_

#include "etDatatypes.h"
#include "messaging/etMessage.h"

#include "room/basic/service/can/PCANRx.h"
#include "room/basic/service/can/PCANTx.h"
#include "HexagonCANDemo/PPingPong.h"
#include "room/basic/service/timing/PTimer.h"


typedef struct AMrPing AMrPing;

/* const part of ActorClass (ROM) */
typedef struct AMrPing_const {
	/* simple ports */
	const PPingPongPort p0;
	
	/* data receive ports */

	/* saps */
	const PTimerConjPort timer;
	const PCANTxConjPort canTx;
	const PCANRxConjPort canRx;
	
	/* replicated ports */
	
	/* services */
} AMrPing_const;


/* constant for state machine data */
#define AMRPING_HISTORY_SIZE 2

/* variable part of ActorClass (RAM) */
struct AMrPing {
	const AMrPing_const* const constData;
	
	/* data send ports */
	
	/*--------------------- attributes ---------------------*/
	
	
	/* state machine variables */
	etInt16 state;
	etInt16 history[AMRPING_HISTORY_SIZE];
};

void AMrPing_init(AMrPing* self);

void AMrPing_receiveMessage(void* self, const void* ifitem, const etMessage* msg);


/*--------------------- operations ---------------------*/


#endif /* _HEXAGONCANDEMO_AMRPING_H_ */

