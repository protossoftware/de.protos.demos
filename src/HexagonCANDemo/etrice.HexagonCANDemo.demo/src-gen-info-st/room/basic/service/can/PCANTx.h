/**
 * @author generated by eTrice
 *
 * Header File of ProtocolClass PCANTx
 * 
 */

#ifndef _ROOM_BASIC_SERVICE_CAN_PCANTX_H_
#define _ROOM_BASIC_SERVICE_CAN_PCANTX_H_

#include "etDatatypes.h"
#include "modelbase/etPort.h"

/*--------------------- begin user code ---------------------*/
#include "pclCANService.h"
#define ET_CAN_CHANNEL_NOT_DEFINED			0xFFFFFFFF
/*--------------------- end user code ---------------------*/



/* message IDs */
enum PCANTx_msg_ids {
	PCANTx_MSG_MIN = 0,
	PCANTx_OUT_valueChanged = 1,
	PCANTx_IN_init = 2,
	PCANTx_IN_sendMsg = 3,
	PCANTx_IN_resendMsg = 4,
	PCANTx_MSG_MAX = 5
};

/*--------------------- port structs and methods */
typedef etPort PCANTxPort;
typedef etReplPort PCANTxReplPort;


void PCANTxPort_valueChanged(const PCANTxPort* self, uint8 data);
void PCANTxReplPort_valueChanged_broadcast(const PCANTxReplPort* self, uint8 data);
void PCANTxReplPort_valueChanged(const PCANTxReplPort* self, int idx, uint8 data);


etInt32 PCANTxReplPort_getReplication(const PCANTxReplPort* self);
typedef etPort PCANTxConjPort;
typedef etReplPort PCANTxConjReplPort;

/* variable part of PortClass (RAM) */
typedef struct PCANTxConjPort_var PCANTxConjPort_var; 
struct PCANTxConjPort_var {
	/*--------------------- attributes ---------------------*/
	uint32 pChannel;
};

void PCANTxConjPort_init(const PCANTxConjPort* self, uint32 data);
void PCANTxConjReplPort_init_broadcast(const PCANTxConjReplPort* self, uint32 data);
void PCANTxConjReplPort_init(const PCANTxConjReplPort* self, int idx, uint32 data);
void PCANTxConjPort_sendMsg(const PCANTxConjPort* self, pclCANMsg* data);
void PCANTxConjReplPort_sendMsg_broadcast(const PCANTxConjReplPort* self, pclCANMsg* data);
void PCANTxConjReplPort_sendMsg(const PCANTxConjReplPort* self, int idx, pclCANMsg* data);
void PCANTxConjPort_resendMsg(const PCANTxConjPort* self);
void PCANTxConjReplPort_resendMsg_broadcast(const PCANTxConjReplPort* self);
void PCANTxConjReplPort_resendMsg(const PCANTxConjReplPort* self, int idx);

/*--------------------- operations ---------------------*/

etInt32 PCANTxConjReplPort_getReplication(const PCANTxConjReplPort* self);



#endif /* _ROOM_BASIC_SERVICE_CAN_PCANTX_H_ */

