/**
 * @author generated by eTrice
 *
 * Instance File of Node nodeRef1 with SubSystem main
 * - instantiation of all actor instances and port instances
 * - configuration of data and connection of ports
 */

#include "messaging/etMessageService.h"

/* include all referenced ActorClasses */
#include "room/basic/service/timing/ATimingService.h"
#include "hexagon/AButtonController.h"
#include "hexagon/ADisplay.h"
#include "hexagon/ABlinky.h"
#include "hexagon/Application.h"

/* include all referenced ProtcolClasses */

/* instantiation of message services and message buffers */
/* PhysicalThread1 */
#define PHYSICALTHREAD1_POOL_SIZE		10
#define PHYSICALTHREAD1_BLOCK_SIZE	32
static uint8 msgBuffer_PhysicalThread1[PHYSICALTHREAD1_POOL_SIZE * PHYSICALTHREAD1_BLOCK_SIZE]; 
static etMessageService msgService_PhysicalThread1;

/* declarations of all ActorClass instances (const and variable structs) */

/* forward declaration of variable actor structs */
static Application _hexagon_main_appl;
static ABlinky _hexagon_main_appl_blinky;
static AButtonController _hexagon_main_appl_button;
static ADisplay _hexagon_main_appl_display;
static ATimingService _hexagon_main_timingService;

/* forward declaration of variable port structs */
static PIO004ConjPort_var _hexagon_main_appl_blinky_LED1_var={
	0		/* Handle */
							};
static PTimerConjPort_var _hexagon_main_appl_blinky_timer_var={
	0		/* status */
							};
static PIO004ConjPort_var _hexagon_main_appl_button_hwPin_var={
	0		/* Handle */
							};
static PTimerConjPort_var _hexagon_main_appl_button_timer_var={
	0		/* status */
							};
static PTimerConjPort_var _hexagon_main_appl_display_timer_var={
	0		/* status */
							};


/* instance _hexagon_main_appl */
static /*const*/ Application_const _hexagon_main_appl_const = {
	"/hexagon/main/appl"
	
	/* Ports: {varData, msgService, peerAddress, localId} */
	/* simple ports */
	,{NULL, &msgService_PhysicalThread1, 6+BASE_ADDRESS, 1
	#ifdef ET_ASYNC_MSC_LOGGER_ACTIVATE
	,"/hexagon/main/appl","/hexagon/main/appl/blinky"
	#endif
	} /* Port blinkyPort */
	,{NULL, &msgService_PhysicalThread1, 11+BASE_ADDRESS, 2
	#ifdef ET_ASYNC_MSC_LOGGER_ACTIVATE
	,"/hexagon/main/appl","/hexagon/main/appl/button"
	#endif
	} /* Port buttonControlPort */
	,{NULL, &msgService_PhysicalThread1, 10+BASE_ADDRESS, 3
	#ifdef ET_ASYNC_MSC_LOGGER_ACTIVATE
	,"/hexagon/main/appl","/hexagon/main/appl/button"
	#endif
	} /* Port buttonPort */
	
	/* data receive ports */
	
	/* saps */
	
	/* replicated ports */
	
	/* services */
};
static Application _hexagon_main_appl = {
	&_hexagon_main_appl_const,
	
	/* data send ports */
	
	/* attributes */
	
	/* state and history are initialized in init function */
};

/* instance _hexagon_main_appl_blinky */
static /*const*/ ABlinky_const _hexagon_main_appl_blinky_const = {
	"/hexagon/main/appl/blinky"
	
	/* Ports: {varData, msgService, peerAddress, localId} */
	/* simple ports */
	,{NULL, &msgService_PhysicalThread1, 2+BASE_ADDRESS, 2
	#ifdef ET_ASYNC_MSC_LOGGER_ACTIVATE
	,"/hexagon/main/appl/blinky","/hexagon/main/appl"
	#endif
	} /* Port controlPort */
	,{&_hexagon_main_appl_blinky_LED1_var, NULL, 0+BASE_ADDRESS, 1
	#ifdef ET_ASYNC_MSC_LOGGER_ACTIVATE
	,"/hexagon/main/appl/blinky",
	#endif
	} /* Port LED1 */
	
	/* data receive ports */
	
	/* saps */
	,{&_hexagon_main_appl_blinky_timer_var, &msgService_PhysicalThread1, 18+BASE_ADDRESS, 3
	#ifdef ET_ASYNC_MSC_LOGGER_ACTIVATE
	,"/hexagon/main/appl/blinky","/hexagon/main/timingService"
	#endif
	} /* Port timer */
	
	/* replicated ports */
	
	/* services */
};
static ABlinky _hexagon_main_appl_blinky = {
	&_hexagon_main_appl_blinky_const,
	
	/* data send ports */
	
	/* attributes */
	0		/* counter */,
	ET_TRUE		/* test */
	
	/* state and history are initialized in init function */
};

/* instance _hexagon_main_appl_button */
static /*const*/ AButtonController_const _hexagon_main_appl_button_const = {
	"/hexagon/main/appl/button"
	
	/* Ports: {varData, msgService, peerAddress, localId} */
	/* simple ports */
	,{NULL, &msgService_PhysicalThread1, 4+BASE_ADDRESS, 2
	#ifdef ET_ASYNC_MSC_LOGGER_ACTIVATE
	,"/hexagon/main/appl/button","/hexagon/main/appl"
	#endif
	} /* Port ioPort */
	,{NULL, &msgService_PhysicalThread1, 3+BASE_ADDRESS, 3
	#ifdef ET_ASYNC_MSC_LOGGER_ACTIVATE
	,"/hexagon/main/appl/button","/hexagon/main/appl"
	#endif
	} /* Port controlPort */
	,{&_hexagon_main_appl_button_hwPin_var, NULL, 0+BASE_ADDRESS, 1
	#ifdef ET_ASYNC_MSC_LOGGER_ACTIVATE
	,"/hexagon/main/appl/button",
	#endif
	} /* Port hwPin */
	
	/* data receive ports */
	
	/* saps */
	,{&_hexagon_main_appl_button_timer_var, &msgService_PhysicalThread1, 19+BASE_ADDRESS, 4
	#ifdef ET_ASYNC_MSC_LOGGER_ACTIVATE
	,"/hexagon/main/appl/button","/hexagon/main/timingService"
	#endif
	} /* Port timer */
	
	/* replicated ports */
	
	/* services */
};
static AButtonController _hexagon_main_appl_button = {
	&_hexagon_main_appl_button_const,
	
	/* data send ports */
	
	/* attributes */
	0		/* pinState */
	
	/* state and history are initialized in init function */
};

/* instance _hexagon_main_appl_display */
static /*const*/ ADisplay_const _hexagon_main_appl_display_const = {
	"/hexagon/main/appl/display"
	
	/* Ports: {varData, msgService, peerAddress, localId} */
	/* simple ports */
	,{NULL, NULL, 0+BASE_ADDRESS, 1
	#ifdef ET_ASYNC_MSC_LOGGER_ACTIVATE
	,"/hexagon/main/appl/display",
	#endif
	} /* Port gui */
	
	/* data receive ports */
	
	/* saps */
	,{&_hexagon_main_appl_display_timer_var, &msgService_PhysicalThread1, 20+BASE_ADDRESS, 2
	#ifdef ET_ASYNC_MSC_LOGGER_ACTIVATE
	,"/hexagon/main/appl/display","/hexagon/main/timingService"
	#endif
	} /* Port timer */
	
	/* replicated ports */
	
	/* services */
};
static ADisplay _hexagon_main_appl_display = {
	&_hexagon_main_appl_display_const,
	
	/* data send ports */
	
	/* attributes */
	{
		NULL		/* s */,
		0		/* xPos */,
		0		/* yPos */
	}		/* str */
	
	/* state and history are initialized in init function */
};

/* instance _hexagon_main_timingService */
static const etReplSubPort _hexagon_main_timingService_repl_sub_ports[3] = {
	/* Replicated Sub Ports: {varData, msgService, peerAddress, localId, index} */
	{{NULL,&msgService_PhysicalThread1, 8+BASE_ADDRESS, 1
	#ifdef ET_ASYNC_MSC_LOGGER_ACTIVATE
	,"/hexagon/main/timingService"
	,"/hexagon/main/appl/blinky"
	#endif
	},0}, /* Repl Sub Port timer idx +0*/
	{{NULL,&msgService_PhysicalThread1, 13+BASE_ADDRESS, 1
	#ifdef ET_ASYNC_MSC_LOGGER_ACTIVATE
	,"/hexagon/main/timingService"
	,"/hexagon/main/appl/button"
	#endif
	},1}, /* Repl Sub Port timer idx +1*/
	{{NULL,&msgService_PhysicalThread1, 16+BASE_ADDRESS, 1
	#ifdef ET_ASYNC_MSC_LOGGER_ACTIVATE
	,"/hexagon/main/timingService"
	,"/hexagon/main/appl/display"
	#endif
	},2} /* Repl Sub Port timer idx +2*/
};
static /*const*/ ATimingService_const _hexagon_main_timingService_const = {
	"/hexagon/main/timingService"
	
	/* Ports: {varData, msgService, peerAddress, localId} */
	/* simple ports */
	
	/* data receive ports */
	
	/* saps */
	
	/* replicated ports */
	
	/* services */
	,{3, _hexagon_main_timingService_repl_sub_ports+0}
};
static ATimingService _hexagon_main_timingService = {
	&_hexagon_main_timingService_const,
	
	/* data send ports */
	
	/* attributes */
	
	/* state and history are initialized in init function */
};

