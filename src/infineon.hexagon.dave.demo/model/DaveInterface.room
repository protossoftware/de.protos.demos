RoomModel DaveInterface {

	import room.basic.types.* from "Types.room"

	ProtocolClass PWMSP001 {
		usercode1 {
			"#include <DAVE3.h>"
		}
		incoming {
			Message dummy()
		}
		conjugated PortClass
		{
			Operation setInstance(data: uint32) {
				"Handle=&PWMSP001_Handle0;"
			}
			Operation setDutyCycle(dc: uint8) {
				"PWMSP001_SetDutyCycle(Handle, dc);"
			}
			Attribute Handle: PWMSP001_HandleType ref = "0"
		}
	}

	ProtocolClass PUART001 {
		usercode1 {
			"#include <DAVE3.h>"
		}
		incoming {
			Message dummy()
		}
		conjugated PortClass
		{
			Operation setInstance(data: uint32) {
				"Handle=UART001_HandleArray[data];"
			}
			Operation readDataBytes(buffer: uint8 ref, count: uint32): uint32 {
				"if (Handle != 0){"
				"	return UART001_ReadDataBytes(Handle,buffer,count);}"
				"return 0;"
			}
			Operation writeDataBytes(buffer: uint8 ref, count: uint32): uint32 {
				"if (Handle != 0){"
				"   return UART001_WriteDataBytes(Handle,buffer,count);}"
				"return 0;"
			}
			Attribute Handle: UART001_HandleType ref = "0"
		}
	}

	ProtocolClass PGUI {
		usercode1 {
			"#include <DAVE3.h>"
			"#include <GUI.h>"
		}
		incoming {
			Message init()
			Message clear()
			Message drawBitmap(data: DGuiBitmap)
			Message dispStringHCenterAt(data: DGuiString)
			Message setFont(data: GUI_CONST_STORAGE ref)
			Message setColor(data: int32)
			Message setBkColor(data: uint32)
		}
		conjugated PortClass
		{
			handle
			incoming init {
				"/* Initialize GUI Library */"
				"GUI_Init();"
			}
			handle
			incoming clear {
				"/* Clear screen */"
				"GUI_Clear();"
			}
			handle
			incoming drawBitmap {
				"/* Clear screen */"
				"GUI_DrawBitmap(data__et->bitmap,data__et->xPos, data__et->yPos);"
			}
			handle
			incoming dispStringHCenterAt {
				"GUI_DispStringHCenterAt(data__et->s,data__et->xPos,data__et->yPos);"
			}
			handle
			incoming setFont {
				"GUI_SetFont(data__et);"
			}
			handle
			incoming setColor {
				"GUI_SetColor(data__et);"
			}
			handle
			incoming setBkColor {
				"GUI_SetBkColor(data__et);"
			}
		}
	}

	DataClass DGuiBitmap {
		usercode1 {
			"#include <GUI.h>"
		}
		Attribute bitmap: GUI_BITMAP ref
		Attribute xPos: uint32
		Attribute yPos: uint32
	}

	DataClass DGuiString {
		usercode1 {
			"#include <GUI.h>"
		}
		Attribute s: char ref
		Attribute xPos: uint32
		Attribute yPos: uint32
	}

	ProtocolClass PIO004 {
		usercode1 {
			"#include <DAVE3.h>"
		}
		incoming {
			Message dummy()
			Message setInstance(data: uint32)
			Message setPin()
			Message resetPin()
			Message readPin(data: uint8 ref)
		}
		conjugated PortClass
		{
			handle
			incoming setInstance {
				"switch(data__et){"
				"    case 0: Handle=IO004_Handle0;"
				"		break;"
				"    case 1: Handle=IO004_Handle1;"
				"		break;"
				"    case 2: Handle=IO004_Handle2;"
				"		break;"
				"    default: break;"
				"    }"
			}
			handle
			incoming setPin {
				"IO004_SetPin(Handle);"
			}
			handle
			incoming resetPin {
				"IO004_ResetPin(Handle);"
			}
			handle
			incoming readPin {
				"*data__et = IO004_ReadPin(Handle);"
			}
			Attribute Handle: IO004_HandleType = "0"
		}
	}

	ExternalType GUI_CONST_STORAGE -> "GUI_CONST_STORAGE"
	ExternalType GUI_BITMAP -> "GUI_BITMAP"
	ExternalType PWMSP001_HandleType -> "PWMSP001_HandleType"
	ExternalType UART001_HandleType -> "UART001_HandleType"
	ExternalType IO004_HandleType -> "IO004_HandleType"
	ExternalType IO004_InputModeType -> "IO004_InputModeType"
}