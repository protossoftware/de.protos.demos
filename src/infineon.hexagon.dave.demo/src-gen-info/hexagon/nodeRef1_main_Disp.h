/**
 * @author generated by eTrice
 *
 * Dispatcher File of Node nodeRef1 with SubSystem main
 * contains a generated message dispatcher (receiveMessage) for each MessageService (Thread)
 */

#include "messaging/etMessageReceiver.h"
#include "debugging/etLogger.h"
#include "debugging/etMSCLogger.h"



/**
 * generated dispatch function for all messages for the thread "PhysicalThread1"
 */
static etBool MsgDispatcher_PhysicalThread1_receiveMessage(const etMessage* msg){
	ET_MSC_LOGGER_SYNC_ENTRY("MsgDispatcher_PhysicalThread1", "receiveMessage")
	switch(msg->address){
	
		case MESSAGESERVICE_ADDRESS:
			if (msg->evtID == etSystemProtocol_IN_terminate)
				return FALSE;
			break;
		
		/* interface items of /hexagon/main/appl */
		
		default:
			etLogger_logErrorF("MessageService_PhysicalThread1_receiveMessage: address %d does not exist ", msg->address);
			break;
	}
	ET_MSC_LOGGER_SYNC_EXIT
	return TRUE;
}
