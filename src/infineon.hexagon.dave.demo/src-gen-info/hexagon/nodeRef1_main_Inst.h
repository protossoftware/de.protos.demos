/**
 * @author generated by eTrice
 *
 * Instance File of Node nodeRef1 with SubSystem main
 * - instantiation of all actor instances and port instances
 * - configuration of data and connection of ports
 */

#include "messaging/etMessageService.h"

/* include all referenced ActorClasses */
#include "hexagon/Application.h"

/* include all referenced ProtcolClasses */

/* instantiation of message services and message buffers */
/* PhysicalThread1 */
#define PHYSICALTHREAD1_POOL_SIZE		10
#define PHYSICALTHREAD1_BLOCK_SIZE	32
static uint8 msgBuffer_PhysicalThread1[PHYSICALTHREAD1_POOL_SIZE * PHYSICALTHREAD1_BLOCK_SIZE]; 
static etMessageService msgService_PhysicalThread1;

/* declarations of all ActorClass instances (const and variable structs) */

/* forward declaration of variable actor structs */
static Application _hexagon_main_appl;

/* forward declaration of variable port structs */
/* nothing to do */


/* instance _hexagon_main_appl */
static /*const*/ Application_const _hexagon_main_appl_const = {
	"/hexagon/main/appl"
	
	/* Ports: {varData, msgService, peerAddress, localId} */
	/* simple ports */
	
	/* data receive ports */
	
	/* saps */
	
	/* replicated ports */
	
	/* services */
};
static Application _hexagon_main_appl = {
	&_hexagon_main_appl_const,
	
	/* data send ports */
	
	/* attributes */
	
	/* state and history are initialized in init function */
};

