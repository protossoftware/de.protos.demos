/**
 * @author generated by eTrice
 *
 * Header File of ProtocolClass PMotorControl
 * 
 */

#ifndef _ELEVATORFREERTOS_MODEL_PMOTORCONTROL_H_
#define _ELEVATORFREERTOS_MODEL_PMOTORCONTROL_H_

#include "etDatatypes.h"
#include "modelbase/etPort.h"




/* message IDs */
enum PMotorControl_msg_ids {
	PMotorControl_MSG_MIN = 0,
	PMotorControl_OUT_floorReached = 1,
	PMotorControl_IN_goUpOneFloor = 2,
	PMotorControl_IN_goDownOneFloor = 3,
	PMotorControl_MSG_MAX = 4
};

/*--------------------- port structs and methods */
typedef etPort PMotorControlPort;
typedef etReplPort PMotorControlReplPort;


void PMotorControlPort_floorReached(const PMotorControlPort* self, uint8 data);
void PMotorControlReplPort_floorReached_broadcast(const PMotorControlReplPort* self, uint8 data);
void PMotorControlReplPort_floorReached(const PMotorControlReplPort* self, int idx, uint8 data);


etInt32 PMotorControlReplPort_getReplication(const PMotorControlReplPort* self);
typedef etPort PMotorControlConjPort;
typedef etReplPort PMotorControlConjReplPort;


void PMotorControlConjPort_goUpOneFloor(const PMotorControlConjPort* self);
void PMotorControlConjReplPort_goUpOneFloor_broadcast(const PMotorControlConjReplPort* self);
void PMotorControlConjReplPort_goUpOneFloor(const PMotorControlConjReplPort* self, int idx);
void PMotorControlConjPort_goDownOneFloor(const PMotorControlConjPort* self);
void PMotorControlConjReplPort_goDownOneFloor_broadcast(const PMotorControlConjReplPort* self);
void PMotorControlConjReplPort_goDownOneFloor(const PMotorControlConjReplPort* self, int idx);


etInt32 PMotorControlConjReplPort_getReplication(const PMotorControlConjReplPort* self);



#endif /* _ELEVATORFREERTOS_MODEL_PMOTORCONTROL_H_ */

