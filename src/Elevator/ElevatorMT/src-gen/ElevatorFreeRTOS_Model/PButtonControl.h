/**
 * @author generated by eTrice
 *
 * Header File of ProtocolClass PButtonControl
 * 
 */

#ifndef _ELEVATORFREERTOS_MODEL_PBUTTONCONTROL_H_
#define _ELEVATORFREERTOS_MODEL_PBUTTONCONTROL_H_

#include "etDatatypes.h"
#include "modelbase/etPort.h"




/* message IDs */
enum PButtonControl_msg_ids {
	PButtonControl_MSG_MIN = 0,
	PButtonControl_OUT_pressed = 1,
	PButtonControl_OUT_released = 2,
	PButtonControl_IN_setButtonId = 3,
	PButtonControl_IN_setLedId = 4,
	PButtonControl_IN_setFloor = 5,
	PButtonControl_IN_ledOn = 6,
	PButtonControl_IN_ledOff = 7,
	PButtonControl_IN_ledToggle = 8,
	PButtonControl_MSG_MAX = 9
};

/*--------------------- port structs and methods */
typedef etPort PButtonControlPort;
typedef etReplPort PButtonControlReplPort;


void PButtonControlPort_pressed(const PButtonControlPort* self);
void PButtonControlReplPort_pressed_broadcast(const PButtonControlReplPort* self);
void PButtonControlReplPort_pressed(const PButtonControlReplPort* self, int idx);
void PButtonControlPort_released(const PButtonControlPort* self);
void PButtonControlReplPort_released_broadcast(const PButtonControlReplPort* self);
void PButtonControlReplPort_released(const PButtonControlReplPort* self, int idx);


etInt32 PButtonControlReplPort_getReplication(const PButtonControlReplPort* self);
typedef etPort PButtonControlConjPort;
typedef etReplPort PButtonControlConjReplPort;


void PButtonControlConjPort_setButtonId(const PButtonControlConjPort* self, uint8 data);
void PButtonControlConjReplPort_setButtonId_broadcast(const PButtonControlConjReplPort* self, uint8 data);
void PButtonControlConjReplPort_setButtonId(const PButtonControlConjReplPort* self, int idx, uint8 data);
void PButtonControlConjPort_setLedId(const PButtonControlConjPort* self, uint8 data);
void PButtonControlConjReplPort_setLedId_broadcast(const PButtonControlConjReplPort* self, uint8 data);
void PButtonControlConjReplPort_setLedId(const PButtonControlConjReplPort* self, int idx, uint8 data);
void PButtonControlConjPort_setFloor(const PButtonControlConjPort* self, uint8 data);
void PButtonControlConjReplPort_setFloor_broadcast(const PButtonControlConjReplPort* self, uint8 data);
void PButtonControlConjReplPort_setFloor(const PButtonControlConjReplPort* self, int idx, uint8 data);
void PButtonControlConjPort_ledOn(const PButtonControlConjPort* self);
void PButtonControlConjReplPort_ledOn_broadcast(const PButtonControlConjReplPort* self);
void PButtonControlConjReplPort_ledOn(const PButtonControlConjReplPort* self, int idx);
void PButtonControlConjPort_ledOff(const PButtonControlConjPort* self);
void PButtonControlConjReplPort_ledOff_broadcast(const PButtonControlConjReplPort* self);
void PButtonControlConjReplPort_ledOff(const PButtonControlConjReplPort* self, int idx);
void PButtonControlConjPort_ledToggle(const PButtonControlConjPort* self);
void PButtonControlConjReplPort_ledToggle_broadcast(const PButtonControlConjReplPort* self);
void PButtonControlConjReplPort_ledToggle(const PButtonControlConjReplPort* self, int idx);


etInt32 PButtonControlConjReplPort_getReplication(const PButtonControlConjReplPort* self);



#endif /* _ELEVATORFREERTOS_MODEL_PBUTTONCONTROL_H_ */

