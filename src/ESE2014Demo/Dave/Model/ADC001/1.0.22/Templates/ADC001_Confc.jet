<%@ jet package="CodeGenerator" class="adc001_confc_template"
imports="java.util.* java.text.* com.ifx.davex.appjetinteract.App2JetInterface" %>
<% App2JetInterface app = (App2JetInterface) argument; %>
<% int Is44Device = -1; %>
<% int Is42Device = -1; %>
<% int Is45Device = -1; %>
<% int Is1xDevice = -1; %>
<% Is44Device = ((app.getSoftwareId().substring(0,2).compareTo("44")==0)?1:0); %>
<% Is42Device = ((app.getSoftwareId().substring(0,2).compareTo("42")==0)?1:0); %>
<% Is45Device = ((app.getSoftwareId().substring(0,2).compareTo("45")==0)?1:0); %>
<% Is1xDevice = ((app.getSoftwareId().substring(0,1).compareTo("1")==0)?1:0); %>
/*CODE_BLOCK_BEGIN[ADC001_Conf.c]*/

/*******************************************************************************
 Copyright (c) 2013, Infineon Technologies AG                                 **
 All rights reserved.                                                         **
                                                                              **
 Redistribution and use in source and binary forms, with or without           **
 modification,are permitted provided that the following conditions are met:   **
                                                                              **
 *Redistributions of source code must retain the above copyright notice,      **
 this list of conditions and the following disclaimer.                        **
 *Redistributions in binary form must reproduce the above copyright notice,   **
 this list of conditions and the following disclaimer in the documentation    **
 and/or other materials provided with the distribution.                       **
 *Neither the name of the copyright holders nor the names of its contributors **
 may be used to endorse or promote products derived from this software without**
 specific prior written permission.                                           **
                                                                              **
 THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"  **
 AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE    **
 IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE   **
 ARE  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE   **
 LIABLE  FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR         **
 CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF         **
 SUBSTITUTE GOODS OR  SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS    **
 INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN      **
 CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)       **
 ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE   **
 POSSIBILITY OF SUCH DAMAGE.                                                  **
                                                                              **
 To improve the quality of the software, users are encouraged to share        **
 modifications, enhancements or bug fixes with Infineon Technologies AG       **
 dave@infineon.com).                                                          **
                                                                              **
********************************************************************************
**                                                                            **
**                                                                            **
** PLATFORM : Infineon XMC4000/XMC1000 Series                                 **
**                                                                            **
** COMPILER : Compiler Independent                                            **
**                                                                            **
** AUTHOR   : DAVE App Developer                                              **
**                                                                            **
** MAY BE CHANGED BY USER [yes/no]: Yes                                       **
**                                                                            **
** MODIFICATION DATE : Sep 27, 2013                                           **
**                                                                            **
*******************************************************************************/

/*******************************************************************************
**                       Author(s) Identity                                   **
********************************************************************************
**                                                                            **
** Initials     Name                                                          **
** ---------------------------------------------------------------------------**
** CM           DAVE App Developer                                            **
*******************************************************************************/
<% String AppBaseuri = "app/ADC001/"; %>
/**
 * @file  ADC001_Conf.c
 * @App Version ADC001 <<%=app.getAppVersion(AppBaseuri)%>>
 * @brief This file contains App parameter data as per GUI configurations
 *
 * Change History:
 *
 * Date       version       Details
 * 16-Dec-2012   1.0.4     Initial code added for XMC1000
 * 06-Mar-2013   1.0.6     App version changed for XMC1000 and XMC4400/XMC4200
 * 24-Apr-2013   1.0.8     Ported to XMC4500 step AB and 
 *                         Source Result selection Feature added 
 * 11-Jun-2013   1.0.10  1.In channel selection page Group C and Group D check
 *                         boxes made invisible for XMC1200/1300/4200 devices.
 *                       2.In the Header comment section device name changed
 *                         to XMC1000.
 *                       3.Tooltip for the Group channel selection is modified.
 *                       4.New api ADC001_GetFastResult() implemented.
 *                       5.Source Result register selection feature disabled
 *                         due to header file update not available.   
 * 27-Jun-2013   1.0.12    Source Result register selection feature removed to
 *                         simplify the app.   
 * 05-Sep-2013   1.0.14    Added support for the following devices under XMC1200
 *                         and XMC1300 Series XMC1201, XMC1202, XMC1301 
 * 27-Sep-13     1.0.16    Typos in API Documentation & .h comments is corrected. 
 */

#include <DAVE3.h>


<% String appInst  = null; %>
<% String BkgdUri = null; %>
<% int GrpAChannels = app.getIntegerValue(AppBaseuri + "0/adc001_irwnumberofchannelgroupa"); %>
<% int GrpBChannels = app.getIntegerValue(AppBaseuri + "0/adc001_irwnumberofchannelgroupb"); %>
<% int GrpCChannels = app.getIntegerValue(AppBaseuri + "0/adc001_irwnumberofchannelgroupc"); %>
<% int GrpDChannels = app.getIntegerValue(AppBaseuri + "0/adc001_irwnumberofchannelgroupd"); %>
<% int TotalChannels = GrpAChannels + GrpBChannels + GrpCChannels + GrpDChannels; %>
<% int ChEntry = 0; %>
<% String Group0AppUri = null; %>
<% String Group0Uri = null; %>
<% String Group0Inst = null; %>
<% String Group0No = null; %>
<% String Group1AppUri = null; %>
<% String Group1Uri = null; %>
<% String Group1Inst = null; %>
<% String Group1No = null; %>
<% String Group2AppUri = null; %>
<% String Group2Uri = null; %>
<% String Group2Inst = null; %>
<% String Group2No = null; %>
<% String Group3AppUri = null; %>
<% String Group3Uri = null; %>
<% String Group3Inst = null; %>
<% String Group3No = null; %>
<% String kernelUri = null; %>
<% String kernelNo = null; %>
<% int GroupA = 0; %>
<% int GroupB = 0; %>
<% int GroupC = 0; %>
<% int GroupD = 0; %>
<% String ChANum = null;%>
<% String ChBNum = null;%>
<% String ChCNum = null;%>
<% String ChDNum = null;%>
<% String ChENum = null;%>
<% String ChFNum = null;%>
<% String ChGNum = null;%>
<% String ChHNum = null;%>
<% String ChINum = null;%>
<% String ChJNum = null;%>
<% String ChKNum = null;%>
<% String ChLNum = null;%>
<% String ChMNum = null;%>
<% String ChNNum = null;%>
<% String ChONum = null;%>
<% String ChPNum = null;%>
<% String ChQNum = null;%>
<% String ChRNum = null;%>
<% String ChSNum = null;%>
<% String ChTNum = null;%>
<% String ChUNum = null;%>
<% String ChVNum = null;%>
<% String ChWNum = null;%>
<% String ChXNum = null;%>
<% String ChYNum = null;%>
<% String ChZNum = null;%>
<% String ChAANum = null;%>
<% String ChABNum = null;%>
<% String ChACNum = null;%>
<% String ChADNum = null;%>
<% String ChAENum = null;%>
<% String ChAFNum = null;%>
<% int g0asssel = 0; %>
<% int g1asssel = 0; %>
<% int g2asssel = 0; %>
<% int g3asssel = 0; %>
<% int g0chact = 0; %>
<% int g1chact = 0; %>
<% int g2chact = 0; %>
<% int g3chact = 0; %>
<% int g3groupact = 0; %>

<% BkgdUri = app.getMappedUri(AppBaseuri +  "0/backgnd" ); %>
<% Group0AppUri = app.getMappedUri(AppBaseuri +  "0/groupappa" ); %>
<% if ((Group0AppUri != null) && (Group0AppUri.trim() != "")) { %>
<% Group0Inst = Group0AppUri.substring(Group0AppUri.lastIndexOf("/") + 1);%>
<% Group0Uri = app.getMappedUri(Group0AppUri +"/adcgroupconfig"); %>
<% if ((Group0Uri != null) && (Group0Uri.trim() != "")) { %>
<% Group0Uri = Group0Uri.substring(Group0Uri.length()-8, Group0Uri.indexOf("/config"));%>
<% Group0No = Group0Uri.substring(Group0Uri.length() -1); %>
<% }%>
<% }%>
<% Group1AppUri = app.getMappedUri(AppBaseuri +  "0/groupappb" ); %>
<% if ((Group1AppUri != null) && (Group1AppUri.trim() != "")) { %>
<% Group1Inst = Group1AppUri.substring(Group1AppUri.lastIndexOf("/") + 1);%>
<% Group1Uri = app.getMappedUri(Group1AppUri +"/adcgroupconfig"); %>
<% if ((Group1Uri != null) && (Group1Uri.trim() != "")) { %>
<% Group1Uri = Group1Uri.substring(Group1Uri.length()-8, Group1Uri.indexOf("/config"));%>
<% Group1No = Group1Uri.substring(Group1Uri.length() -1); %>
<% }%>
<% }%>
<% Group2AppUri = app.getMappedUri(AppBaseuri +  "0/groupappc" ); %>
<% if ((Group2AppUri != null) && (Group2AppUri.trim() != "")) { %>
<% Group2Inst = Group2AppUri.substring(Group2AppUri.lastIndexOf("/") + 1);%>
<% Group2Uri = app.getMappedUri(Group2AppUri +"/adcgroupconfig"); %>
<% if ((Group2Uri != null) && (Group2Uri.trim() != "")) { %>
<% Group2Uri = Group2Uri.substring(Group2Uri.length()-8, Group2Uri.indexOf("/config"));%>
<% Group2No = Group2Uri.substring(Group2Uri.length() -1); %>
<% }%>
<% }%>
<% Group3AppUri = app.getMappedUri(AppBaseuri +  "0/groupappd" ); %>
<% if ((Group3AppUri != null) && (Group3AppUri.trim() != "")) { %>
<% Group3Inst = Group3AppUri.substring(Group3AppUri.lastIndexOf("/") + 1);%>
<% Group3Uri = app.getMappedUri(Group3AppUri +"/adcgroupconfig"); %>
<% if ((Group3Uri != null) && (Group3Uri.trim() != "")) { %>
<% Group3Uri = Group3Uri.substring(Group3Uri.length()-8, Group3Uri.indexOf("/config"));%>
<% Group3No = Group3Uri.substring(Group3Uri.length() -1); %>
<% }%>
<% }%>

ADC001_DynamicDataType ADC001_DynamicHandle =
{
  .State = ADC001_UNINITIALIZED
};

<% if (GrpAChannels > 0) { %>
<% String ChAAppUri = null;
String ChAgroup = null;
int chsel = app.getIntegerValue(AppBaseuri + "0/adc001_erwselectchannela/0");
ChAAppUri = app.getMappedUri(AppBaseuri  +"0/channel_aa");
if ((ChAAppUri != null) && (ChAAppUri.trim() != "")) {
ChANum = ChAAppUri.substring(ChAAppUri.lastIndexOf("/")+1);
ChAgroup = ChAAppUri.substring(ChAAppUri.length()-6, ChAAppUri.indexOf("/ch/")); 
ChAgroup = ChAgroup.substring(ChAgroup.lastIndexOf("/") + 1 );
if(ChAgroup != null)
{
  GroupA = Integer.valueOf(ChAgroup);
  g3groupact |= (1 << GroupA); 
  if(Integer.valueOf(ChAgroup) == 0)
  {
    g0asssel |= (chsel << Integer.valueOf(ChANum));
    g0chact |= (1 << Integer.valueOf(ChANum));
  }
  else if(Integer.valueOf(ChAgroup) == 1)
  {
    g1asssel |= (chsel << Integer.valueOf(ChANum));
    g1chact |= (1 << Integer.valueOf(ChANum));
  }
  else if(Integer.valueOf(ChAgroup) == 2)
  {
    g2asssel |= (chsel << Integer.valueOf(ChANum));
    g2chact |= (1 << Integer.valueOf(ChANum));
  }
  else if(Integer.valueOf(ChAgroup) == 3)
  {
    g3asssel |= (chsel << Integer.valueOf(ChANum));
    g3chact |= (1 << Integer.valueOf(ChANum));
  }
}
%>
const ADC001_ChannelHandleType ADC001_ChannelAAHandle = {
  .kGroupNo = (uint8_t)<%= ChAgroup%>,
  .kChannelNo = (uint8_t)<%= ChANum%>,
  .kEnable = (uint8_t)<%= chsel%>
};
<%}}%>

<% if (GrpAChannels > 1) { %>
<% String ChBAppUri = null;
String ChBgroup = null;
int chsel = app.getIntegerValue(AppBaseuri + "0/adc001_erwselectchannelb/0"); 
ChBAppUri = app.getMappedUri(AppBaseuri  +"0/channel_ab");
if ((ChBAppUri != null) && (ChBAppUri.trim() != "")) {
ChBNum = ChBAppUri.substring(ChBAppUri.lastIndexOf("/")+1);
ChBgroup = ChBAppUri.substring(ChBAppUri.length()-6,ChBAppUri.indexOf("/ch/")); 
ChBgroup = ChBgroup.substring(ChBgroup.lastIndexOf("/") + 1 ); 
if(ChBgroup != null)
{
  if(Integer.valueOf(ChBgroup) == 0)
  {
    g0asssel |= (chsel << Integer.valueOf(ChBNum));
    g0chact |= (1 << Integer.valueOf(ChBNum));
  }
  else if(Integer.valueOf(ChBgroup) == 1)
  {
    g1asssel |= (chsel << Integer.valueOf(ChBNum));
    g1chact |= (1 << Integer.valueOf(ChBNum));
  }
  else if(Integer.valueOf(ChBgroup) == 2)
  {
    g2asssel |= (chsel << Integer.valueOf(ChBNum));
    g2chact |= (1 << Integer.valueOf(ChBNum));
  }
  else if(Integer.valueOf(ChBgroup) == 3)
  {
    g3asssel |= (chsel << Integer.valueOf(ChBNum));
    g3chact |= (1 << Integer.valueOf(ChBNum));
  }
}
%>
const ADC001_ChannelHandleType ADC001_ChannelABHandle = {
  .kGroupNo = (uint8_t)<%= ChBgroup%>,
  .kChannelNo = (uint8_t)<%= ChBNum%>,
  .kEnable = (uint8_t)<%= app.getIntegerValue(AppBaseuri + "0/adc001_erwselectchannelb/0")%>
};
<%}}%>
<% if (GrpAChannels > 2) { %>
<% String ChCAppUri = null;
String ChCgroup = null; 
int chsel = app.getIntegerValue(AppBaseuri + "0/adc001_erwselectchannelc/0");
ChCAppUri = app.getMappedUri(AppBaseuri  +"0/channel_ac");
if ((ChCAppUri != null) && (ChCAppUri.trim() != "")) {
ChCNum = ChCAppUri.substring(ChCAppUri.lastIndexOf("/")+1);
ChCgroup = ChCAppUri.substring(ChCAppUri.length()-6,ChCAppUri.indexOf("/ch/")); 
ChCgroup = ChCgroup.substring(ChCgroup.lastIndexOf("/") + 1 ); 
if(ChCgroup != null)
{
  if(Integer.valueOf(ChCgroup) == 0)
  {
    g0asssel |= (chsel << Integer.valueOf(ChCNum));
    g0chact |= (1 << Integer.valueOf(ChCNum));
  }
  else if(Integer.valueOf(ChCgroup) == 1)
  {
    g1asssel |= (chsel << Integer.valueOf(ChCNum));
    g1chact |= (1 << Integer.valueOf(ChCNum));
  }
  else if(Integer.valueOf(ChCgroup) == 2)
  {
    g2asssel |= (chsel << Integer.valueOf(ChCNum));
    g2chact |= (1 << Integer.valueOf(ChCNum));
  }
  else if(Integer.valueOf(ChCgroup) == 3)
  {
    g3asssel |= (chsel << Integer.valueOf(ChCNum));
    g3chact |= (1 << Integer.valueOf(ChCNum));
  }
}
%>
const ADC001_ChannelHandleType ADC001_ChannelACHandle = {
  .kGroupNo = (uint8_t)<%= ChCgroup%>,
  .kChannelNo = (uint8_t)<%= ChCNum%>,
  .kEnable = (uint8_t)<%= app.getIntegerValue(AppBaseuri + "0/adc001_erwselectchannelc/0")%>
};
<%}}%>
<% if (GrpAChannels > 3) { %>
<% String ChDAppUri = null;
String ChDgroup = null; 
int chsel = app.getIntegerValue(AppBaseuri + "0/adc001_erwselectchanneld/0");
ChDAppUri = app.getMappedUri(AppBaseuri  +"0/channel_ad");
if ((ChDAppUri != null) && (ChDAppUri.trim() != "")) {
ChDNum = ChDAppUri.substring(ChDAppUri.lastIndexOf("/")+1);
ChDgroup = ChDAppUri.substring(ChDAppUri.length()-6,ChDAppUri.indexOf("/ch/"));
ChDgroup = ChDgroup.substring(ChDgroup.lastIndexOf("/") + 1 ); 
if(ChDgroup != null)
{
  if(Integer.valueOf(ChDgroup) == 0)
  {
    g0asssel |= (chsel << Integer.valueOf(ChDNum));
    g0chact |= (1 << Integer.valueOf(ChDNum));
  }
  else if(Integer.valueOf(ChDgroup) == 1)
  {
    g1asssel |= (chsel << Integer.valueOf(ChDNum));
    g1chact |= (1 << Integer.valueOf(ChDNum));
  }
  else if(Integer.valueOf(ChDgroup) == 2)
  {
    g2asssel |= (chsel << Integer.valueOf(ChDNum));
    g2chact |= (1 << Integer.valueOf(ChDNum));
  }
  else if(Integer.valueOf(ChDgroup) == 3)
  {
    g3asssel |= (chsel << Integer.valueOf(ChDNum));
    g3chact |= (1 << Integer.valueOf(ChDNum));
  }
}
%>

const ADC001_ChannelHandleType ADC001_ChannelADHandle = {
  .kGroupNo = (uint8_t)<%= ChDgroup%>,
  .kChannelNo = (uint8_t)<%= ChDNum%>,
  .kEnable = (uint8_t)<%= app.getIntegerValue(AppBaseuri + "0/adc001_erwselectchanneld/0")%>
};
<%}}%>
<% if (GrpAChannels > 4) { %>
<% String ChEAppUri = null;
String ChEgroup = null; 
int chsel = app.getIntegerValue(AppBaseuri + "0/adc001_erwselectchannele/0");
ChEAppUri = app.getMappedUri(AppBaseuri  +"0/channel_ae");
if ((ChEAppUri != null) && (ChEAppUri.trim() != "")) {
ChENum = ChEAppUri.substring(ChEAppUri.lastIndexOf("/")+1);
ChEgroup = ChEAppUri.substring(ChEAppUri.length()-6,ChEAppUri.indexOf("/ch/")); 
ChEgroup = ChEgroup.substring(ChEgroup.lastIndexOf("/") + 1 ); 
if(ChEgroup != null)
{
  if(Integer.valueOf(ChEgroup) == 0)
  {
    g0asssel |= (chsel << Integer.valueOf(ChENum));
    g0chact |= (1 << Integer.valueOf(ChENum));
  }
  else if(Integer.valueOf(ChEgroup) == 1)
  {
    g1asssel |= (chsel << Integer.valueOf(ChENum));
    g1chact |= (1 << Integer.valueOf(ChENum));
  }
  else if(Integer.valueOf(ChEgroup) == 2)
  {
    g2asssel |= (chsel << Integer.valueOf(ChENum));
    g2chact |= (1 << Integer.valueOf(ChENum));
  }
  else if(Integer.valueOf(ChEgroup) == 3)
  {
    g3asssel |= (chsel << Integer.valueOf(ChENum));
    g3chact |= (1 << Integer.valueOf(ChENum));
  }
}
%>
const ADC001_ChannelHandleType ADC001_ChannelAEHandle = {
  .kGroupNo = (uint8_t)<%= ChEgroup%>,
  .kChannelNo = (uint8_t)<%= ChENum%>,
  .kEnable = (uint8_t)<%= app.getIntegerValue(AppBaseuri + "0/adc001_erwselectchannele/0")%>
};
<%}}%>
<% if (GrpAChannels > 5) { %>
<% String ChFAppUri = null;
String ChFgroup = null; 
int chsel = app.getIntegerValue(AppBaseuri + "0/adc001_erwselectchannelf/0");
ChFAppUri = app.getMappedUri(AppBaseuri  +"0/channel_af");
if ((ChFAppUri != null) && (ChFAppUri.trim() != "")) {
ChFNum = ChFAppUri.substring(ChFAppUri.lastIndexOf("/")+1);
ChFgroup = ChFAppUri.substring(ChFAppUri.length()-6,ChFAppUri.indexOf("/ch/")); 
ChFgroup = ChFgroup.substring(ChFgroup.lastIndexOf("/") + 1 );
if(ChFgroup != null)
{
  if(Integer.valueOf(ChFgroup) == 0)
  {
    g0asssel |= (chsel << Integer.valueOf(ChFNum));
    g0chact |= (1 << Integer.valueOf(ChFNum));
  }
  else if(Integer.valueOf(ChFgroup) == 1)
  {
    g1asssel |= (chsel << Integer.valueOf(ChFNum));
    g1chact |= (1 << Integer.valueOf(ChFNum));
  }
  else if(Integer.valueOf(ChFgroup) == 2)
  {
    g2asssel |= (chsel << Integer.valueOf(ChFNum));
    g2chact |= (1 << Integer.valueOf(ChFNum));
  }
  else if(Integer.valueOf(ChFgroup) == 3)
  {
    g3asssel |= (chsel << Integer.valueOf(ChFNum));
    g3chact |= (1 << Integer.valueOf(ChFNum));
  }
}
%>
const ADC001_ChannelHandleType ADC001_ChannelAFHandle = {
  .kGroupNo = (uint8_t)<%= ChFgroup%>,
  .kChannelNo = (uint8_t)<%= ChFNum%>,
  .kEnable = (uint8_t)<%= app.getIntegerValue(AppBaseuri + "0/adc001_erwselectchannelf/0")%>
};
<%}}%>
<% if (GrpAChannels > 6) { %>
<% String ChGAppUri = null;
String ChGgroup = null;
int chsel = app.getIntegerValue(AppBaseuri + "0/adc001_erwselectchannelg/0"); 
ChGAppUri = app.getMappedUri(AppBaseuri  +"0/channel_ag");
if ((ChGAppUri != null) && (ChGAppUri.trim() != "")) {
ChGNum = ChGAppUri.substring(ChGAppUri.lastIndexOf("/")+1);
ChGgroup = ChGAppUri.substring(ChGAppUri.length()-6,ChGAppUri.indexOf("/ch/")); 
ChGgroup = ChGgroup.substring(ChGgroup.lastIndexOf("/") + 1 ); 
if(ChGgroup != null)
{
  if(Integer.valueOf(ChGgroup) == 0)
  {
    g0asssel |= (chsel << Integer.valueOf(ChGNum));
    g0chact |= (1 << Integer.valueOf(ChGNum));
  }
  else if(Integer.valueOf(ChGgroup) == 1)
  {
    g1asssel |= (chsel << Integer.valueOf(ChGNum));
    g1chact |= (1 << Integer.valueOf(ChGNum));
  }
  else if(Integer.valueOf(ChGgroup) == 2)
  {
    g2asssel |= (chsel << Integer.valueOf(ChGNum));
    g2chact |= (1 << Integer.valueOf(ChGNum));
  }
  else if(Integer.valueOf(ChGgroup) == 3)
  {
    g3asssel |= (chsel << Integer.valueOf(ChGNum));
    g3chact |= (1 << Integer.valueOf(ChGNum));
  }
}
%>

const ADC001_ChannelHandleType ADC001_ChannelAGHandle = {
  .kGroupNo = (uint8_t)<%= ChGgroup%>,
  .kChannelNo = (uint8_t)<%= ChGNum%>,
  .kEnable = (uint8_t)<%= app.getIntegerValue(AppBaseuri + "0/adc001_erwselectchannelg/0")%>
};
<%}}%>
<% if (GrpAChannels > 7) { %>
<% String ChHAppUri = null;
String ChHgroup = null;
int chsel = app.getIntegerValue(AppBaseuri + "0/adc001_erwselectchannelh/0"); 
ChHAppUri = app.getMappedUri(AppBaseuri  +"0/channel_ah");
if ((ChHAppUri != null) && (ChHAppUri.trim() != "")) {
ChHNum = ChHAppUri.substring(ChHAppUri.lastIndexOf("/")+1);
ChHgroup = ChHAppUri.substring(ChHAppUri.length()-6,ChHAppUri.indexOf("/ch/")); 
ChHgroup = ChHgroup.substring(ChHgroup.lastIndexOf("/") + 1 ); 
if(ChHgroup != null)
{
  if(Integer.valueOf(ChHgroup) == 0)
  {
    g0asssel |= (chsel << Integer.valueOf(ChHNum));
    g0chact |= (1 << Integer.valueOf(ChHNum));
  }
  else if(Integer.valueOf(ChHgroup) == 1)
  {
    g1asssel |= (chsel << Integer.valueOf(ChHNum));
    g1chact |= (1 << Integer.valueOf(ChHNum));
  }
  else if(Integer.valueOf(ChHgroup) == 2)
  {
    g2asssel |= (chsel << Integer.valueOf(ChHNum));
    g2chact |= (1 << Integer.valueOf(ChHNum));
  }
  else if(Integer.valueOf(ChHgroup) == 3)
  {
    g3asssel |= (chsel << Integer.valueOf(ChHNum));
    g3chact |= (1 << Integer.valueOf(ChHNum));
  }
}
%>

const ADC001_ChannelHandleType ADC001_ChannelAHHandle = {
  .kGroupNo = (uint8_t)<%= ChHgroup%>,
  .kChannelNo = (uint8_t)<%= ChHNum%>,
  .kEnable = (uint8_t)<%= app.getIntegerValue(AppBaseuri + "0/adc001_erwselectchannelh/0")%>
};
<%}}%>
<% if (GrpBChannels > 0) { %>
<% String ChIAppUri = null;
String ChIgroup = null; 
int chsel = app.getIntegerValue(AppBaseuri + "0/adc001_erwselectchanneli/0");
ChIAppUri = app.getMappedUri(AppBaseuri  +"0/channel_ba");
if ((ChIAppUri != null) && (ChIAppUri.trim() != "")) {
ChINum = ChIAppUri.substring(ChIAppUri.lastIndexOf("/")+1);
ChIgroup = ChIAppUri.substring(ChIAppUri.length()-6,ChIAppUri.indexOf("/ch/")); 
ChIgroup = ChIgroup.substring(ChIgroup.lastIndexOf("/") + 1 ); 
if(ChIgroup != null)
{
  GroupB = Integer.valueOf(ChIgroup);
  g3groupact |= (1 << GroupB);
  if(Integer.valueOf(ChIgroup) == 0)
  {
    g0asssel |= (chsel << Integer.valueOf(ChINum));
    g0chact |= (1 << Integer.valueOf(ChINum));
  }
  else if(Integer.valueOf(ChIgroup) == 1)
  {
    g1asssel |= (chsel << Integer.valueOf(ChINum));
    g1chact |= (1 << Integer.valueOf(ChINum));
  }
  else if(Integer.valueOf(ChIgroup) == 2)
  {
    g2asssel |= (chsel << Integer.valueOf(ChINum));
    g2chact |= (1 << Integer.valueOf(ChINum));
  }
  else if(Integer.valueOf(ChIgroup) == 3)
  {
    g3asssel |= (chsel << Integer.valueOf(ChINum));
    g3chact |= (1 << Integer.valueOf(ChINum));
  }
}
%>

const ADC001_ChannelHandleType ADC001_ChannelBAHandle = {
  .kGroupNo = (uint8_t)<%= ChIgroup%>,
  .kChannelNo = (uint8_t)<%= ChINum%>,
  .kEnable = (uint8_t)<%= app.getIntegerValue(AppBaseuri + "0/adc001_erwselectchanneli/0")%>
};
<%}}%>
<% if (GrpBChannels > 1) { %>
<% String ChJAppUri = null;
String ChJgroup = null; 
int chsel = app.getIntegerValue(AppBaseuri + "0/adc001_erwselectchannelj/0");
ChJAppUri = app.getMappedUri(AppBaseuri  +"0/channel_bb");
if ((ChJAppUri != null) && (ChJAppUri.trim() != "")) {
ChJNum = ChJAppUri.substring(ChJAppUri.lastIndexOf("/")+1);
ChJgroup = ChJAppUri.substring(ChJAppUri.length()-6,ChJAppUri.indexOf("/ch/")); 
ChJgroup = ChJgroup.substring(ChJgroup.lastIndexOf("/") + 1 ); 
if(ChJgroup != null)
{
  if(Integer.valueOf(ChJgroup) == 0)
  {
    g0asssel |= (chsel << Integer.valueOf(ChJNum));
    g0chact |= (1 << Integer.valueOf(ChJNum));
  }
  else if(Integer.valueOf(ChJgroup) == 1)
  {
    g1asssel |= (chsel << Integer.valueOf(ChJNum));
    g1chact |= (1 << Integer.valueOf(ChJNum));
  }
  else if(Integer.valueOf(ChJgroup) == 2)
  {
    g2asssel |= (chsel << Integer.valueOf(ChJNum));
    g2chact |= (1 << Integer.valueOf(ChJNum));
  }
  else if(Integer.valueOf(ChJgroup) == 3)
  {
    g3asssel |= (chsel << Integer.valueOf(ChJNum));
    g3chact |= (1 << Integer.valueOf(ChJNum));
  }
}
%>
const ADC001_ChannelHandleType ADC001_ChannelBBHandle = {
  .kGroupNo = (uint8_t)<%= ChJgroup%>,
  .kChannelNo = (uint8_t)<%= ChJNum%>,
  .kEnable = (uint8_t)<%= app.getIntegerValue(AppBaseuri + "0/adc001_erwselectchannelj/0")%>
};
<%}}%>
<% if (GrpBChannels > 2) { %>
<% String ChKAppUri = null;
String ChKgroup = null; 
int chsel = app.getIntegerValue(AppBaseuri + "0/adc001_erwselectchannelk/0");
ChKAppUri = app.getMappedUri(AppBaseuri  +"0/channel_bc");
if ((ChKAppUri != null) && (ChKAppUri.trim() != "")) {
ChKNum = ChKAppUri.substring(ChKAppUri.lastIndexOf("/")+1);
ChKgroup = ChKAppUri.substring(ChKAppUri.length()-6,ChKAppUri.indexOf("/ch/")); 
ChKgroup = ChKgroup.substring(ChKgroup.lastIndexOf("/") + 1 ); 
if(ChKgroup != null)
{
  if(Integer.valueOf(ChKgroup) == 0)
  {
    g0asssel |= (chsel << Integer.valueOf(ChKNum));
    g0chact |= (1 << Integer.valueOf(ChKNum));
  }
  else if(Integer.valueOf(ChKgroup) == 1)
  {
    g1asssel |= (chsel << Integer.valueOf(ChKNum));
    g1chact |= (1 << Integer.valueOf(ChKNum));
  }
  else if(Integer.valueOf(ChKgroup) == 2)
  {
    g2asssel |= (chsel << Integer.valueOf(ChKNum));
    g2chact |= (1 << Integer.valueOf(ChKNum));
  }
  else if(Integer.valueOf(ChKgroup) == 3)
  {
    g3asssel |= (chsel << Integer.valueOf(ChKNum));
    g3chact |= (1 << Integer.valueOf(ChKNum));
  }
}
%>
const ADC001_ChannelHandleType ADC001_ChannelBCHandle = {
  .kGroupNo = (uint8_t)<%= ChKgroup%>,
  .kChannelNo = (uint8_t)<%= ChKNum%>,
  .kEnable = (uint8_t)<%= app.getIntegerValue(AppBaseuri + "0/adc001_erwselectchannelk/0")%>
};
<%}}%>
<% if (GrpBChannels > 3) { %>
<% String ChLAppUri = null;
String ChLgroup = null;
int chsel = app.getIntegerValue(AppBaseuri + "0/adc001_erwselectchannell/0"); 
ChLAppUri = app.getMappedUri(AppBaseuri  +"0/channel_bd");
if ((ChLAppUri != null) && (ChLAppUri.trim() != "")) {
ChLNum = ChLAppUri.substring(ChLAppUri.lastIndexOf("/")+1);
ChLgroup = ChLAppUri.substring(ChLAppUri.length()-6,ChLAppUri.indexOf("/ch/")); 
ChLgroup = ChLgroup.substring(ChLgroup.lastIndexOf("/") + 1 ); 
if(ChLgroup != null)
{
  if(Integer.valueOf(ChLgroup) == 0)
  {
    g0asssel |= (chsel << Integer.valueOf(ChLNum));
    g0chact |= (1 << Integer.valueOf(ChLNum));
  }
  else if(Integer.valueOf(ChLgroup) == 1)
  {
    g1asssel |= (chsel << Integer.valueOf(ChLNum));
    g1chact |= (1 << Integer.valueOf(ChLNum));
  }
  else if(Integer.valueOf(ChLgroup) == 2)
  {
    g2asssel |= (chsel << Integer.valueOf(ChLNum));
    g2chact |= (1 << Integer.valueOf(ChLNum));
  }
  else if(Integer.valueOf(ChLgroup) == 3)
  {
    g3asssel |= (chsel << Integer.valueOf(ChLNum));
    g3chact |= (1 << Integer.valueOf(ChLNum));
  }
}
%>
const ADC001_ChannelHandleType ADC001_ChannelBDHandle = {
  .kGroupNo = (uint8_t)<%= ChLgroup%>,
  .kChannelNo = (uint8_t)<%= ChLNum%>,
  .kEnable = (uint8_t)<%= app.getIntegerValue(AppBaseuri + "0/adc001_erwselectchannell/0")%>
};
<%}}%>
<% if (GrpBChannels > 4) { %>
<% String ChMAppUri = null;
String ChMgroup = null;
int chsel = app.getIntegerValue(AppBaseuri + "0/adc001_erwselectchannelm/0"); 
ChMAppUri = app.getMappedUri(AppBaseuri  +"0/channel_be");
if ((ChMAppUri != null) && (ChMAppUri.trim() != "")) {
ChMNum = ChMAppUri.substring(ChMAppUri.lastIndexOf("/")+1);
ChMgroup = ChMAppUri.substring(ChMAppUri.length()-6,ChMAppUri.indexOf("/ch/"));
ChMgroup = ChMgroup.substring(ChMgroup.lastIndexOf("/") + 1 ); 
if(ChMgroup != null)
{
  if(Integer.valueOf(ChMgroup) == 0)
  {
    g0asssel |= (chsel << Integer.valueOf(ChMNum));
    g0chact |= (1 << Integer.valueOf(ChMNum));
  }
  else if(Integer.valueOf(ChMgroup) == 1)
  {
    g1asssel |= (chsel << Integer.valueOf(ChMNum));
    g1chact |= (1 << Integer.valueOf(ChMNum));
  }
  else if(Integer.valueOf(ChMgroup) == 2)
  {
    g2asssel |= (chsel << Integer.valueOf(ChMNum));
    g2chact |= (1 << Integer.valueOf(ChMNum));
  }
  else if(Integer.valueOf(ChMgroup) == 3)
  {
    g3asssel |= (chsel << Integer.valueOf(ChMNum));
    g3chact |= (1 << Integer.valueOf(ChMNum));
  }
}
%>
const ADC001_ChannelHandleType ADC001_ChannelBEHandle = {
  .kGroupNo = (uint8_t)<%= ChMgroup%>,
  .kChannelNo = (uint8_t)<%= ChMNum%>,
  .kEnable = (uint8_t)<%= app.getIntegerValue(AppBaseuri + "0/adc001_erwselectchannelm/0")%>
};
<%}}%>
<% if (GrpBChannels > 5) { %>
<% String ChNAppUri = null;
String ChNgroup = null; 
int chsel = app.getIntegerValue(AppBaseuri + "0/adc001_erwselectchanneln/0");
ChNAppUri = app.getMappedUri(AppBaseuri  +"0/channel_bf");
if ((ChNAppUri != null) && (ChNAppUri.trim() != "")) {
ChNNum = ChNAppUri.substring(ChNAppUri.lastIndexOf("/")+1);
ChNgroup = ChNAppUri.substring(ChNAppUri.length()-6,ChNAppUri.indexOf("/ch/")); 
ChNgroup = ChNgroup.substring(ChNgroup.lastIndexOf("/") + 1 ); 
if(ChNgroup != null)
{
  if(Integer.valueOf(ChNgroup) == 0)
  {
    g0asssel |= (chsel << Integer.valueOf(ChNNum));
    g0chact |= (1 << Integer.valueOf(ChNNum));
  }
  else if(Integer.valueOf(ChNgroup) == 1)
  {
    g1asssel |= (chsel << Integer.valueOf(ChNNum));
    g1chact |= (1 << Integer.valueOf(ChNNum));
  }
  else if(Integer.valueOf(ChNgroup) == 2)
  {
    g2asssel |= (chsel << Integer.valueOf(ChNNum));
    g2chact |= (1 << Integer.valueOf(ChNNum));
  }
  else if(Integer.valueOf(ChNgroup) == 3)
  {
    g3asssel |= (chsel << Integer.valueOf(ChNNum));
    g3chact |= (1 << Integer.valueOf(ChNNum));
  }
}
%>
const ADC001_ChannelHandleType ADC001_ChannelBFHandle = {
  .kGroupNo = (uint8_t)<%= ChNgroup%>,
  .kChannelNo = (uint8_t)<%= ChNNum%>,
  .kEnable = (uint8_t)<%= app.getIntegerValue(AppBaseuri + "0/adc001_erwselectchanneln/0")%>
};
<%}}%>
<% if (GrpBChannels > 6) { %>
<% String ChOAppUri = null;
String ChOgroup = null; 
int chsel = app.getIntegerValue(AppBaseuri + "0/adc001_erwselectchannelo/0");
ChOAppUri = app.getMappedUri(AppBaseuri  +"0/channel_bg");
if ((ChOAppUri != null) && (ChOAppUri.trim() != "")) {
ChONum = ChOAppUri.substring(ChOAppUri.lastIndexOf("/")+1);
ChOgroup = ChOAppUri.substring(ChOAppUri.length()-6,ChOAppUri.indexOf("/ch/"));
ChOgroup = ChOgroup.substring(ChOgroup.lastIndexOf("/") + 1 ); 
if(ChOgroup != null)
{
  if(Integer.valueOf(ChOgroup) == 0)
  {
    g0asssel |= (chsel << Integer.valueOf(ChONum));
    g0chact |= (1 << Integer.valueOf(ChONum));
  }
  else if(Integer.valueOf(ChOgroup) == 1)
  {
    g1asssel |= (chsel << Integer.valueOf(ChONum));
    g1chact |= (1 << Integer.valueOf(ChONum));
  }
  else if(Integer.valueOf(ChOgroup) == 2)
  {
    g2asssel |= (chsel << Integer.valueOf(ChONum));
    g2chact |= (1 << Integer.valueOf(ChONum));
  }
  else if(Integer.valueOf(ChOgroup) == 3)
  {
    g3asssel |= (chsel << Integer.valueOf(ChONum));
    g3chact |= (1 << Integer.valueOf(ChONum));
  }
}
%>
const ADC001_ChannelHandleType ADC001_ChannelBGHandle = {
  .kGroupNo = (uint8_t)<%= ChOgroup%>,
  .kChannelNo = (uint8_t)<%= ChONum%>,
  .kEnable = (uint8_t)<%= app.getIntegerValue(AppBaseuri + "0/adc001_erwselectchannelo/0")%>
};
<%}}%>
<% if (GrpBChannels > 7) { %>
<% String ChPAppUri = null;
String ChPgroup = null;
int chsel = app.getIntegerValue(AppBaseuri + "0/adc001_erwselectchannelp/0"); 
ChPAppUri = app.getMappedUri(AppBaseuri  +"0/channel_bh");
if ((ChPAppUri != null) && (ChPAppUri.trim() != "")) {
ChPNum = ChPAppUri.substring(ChPAppUri.lastIndexOf("/")+1);
ChPgroup = ChPAppUri.substring(ChPAppUri.length()-6,ChPAppUri.indexOf("/ch/")); 
ChPgroup = ChPgroup.substring(ChPgroup.lastIndexOf("/") + 1 );
if(ChPgroup != null)
{
  if(Integer.valueOf(ChPgroup) == 0)
  {
    g0asssel |= (chsel << Integer.valueOf(ChPNum));
    g0chact |= (1 << Integer.valueOf(ChPNum));
  }
  else if(Integer.valueOf(ChPgroup) == 1)
  {
    g1asssel |= (chsel << Integer.valueOf(ChPNum));
    g1chact |= (1 << Integer.valueOf(ChPNum));
  }
  else if(Integer.valueOf(ChPgroup) == 2)
  {
    g2asssel |= (chsel << Integer.valueOf(ChPNum));
    g2chact |= (1 << Integer.valueOf(ChPNum));
  }
  else if(Integer.valueOf(ChPgroup) == 3)
  {
    g3asssel |= (chsel << Integer.valueOf(ChPNum));
    g3chact |= (1 << Integer.valueOf(ChPNum));
  }
}
%>
const ADC001_ChannelHandleType ADC001_ChannelBHHandle = {
  .kGroupNo = (uint8_t)<%= ChPgroup%>,
  .kChannelNo = (uint8_t)<%= ChPNum%>,
  .kEnable = (uint8_t)<%= app.getIntegerValue(AppBaseuri + "0/adc001_erwselectchannelp/0")%>
};
<%}}%>

<% if (GrpCChannels > 0) { %>
<% String ChQAppUri = null;
String ChQgroup = null; 
int chsel = app.getIntegerValue(AppBaseuri + "0/adc001_erwselectchannelq/0");
ChQAppUri = app.getMappedUri(AppBaseuri  +"0/channel_ca");
if ((ChQAppUri != null) && (ChQAppUri.trim() != "")) {
ChQNum = ChQAppUri.substring(ChQAppUri.lastIndexOf("/")+1);
ChQgroup = ChQAppUri.substring(ChQAppUri.length()-6,ChQAppUri.indexOf("/ch/")); 
ChQgroup = ChQgroup.substring(ChQgroup.lastIndexOf("/") + 1 ); 
if(ChQgroup != null)
{
  GroupC = Integer.valueOf(ChQgroup);
  g3groupact |= (1 << GroupC);
  if(Integer.valueOf(ChQgroup) == 0)
  {
    g0asssel |= (chsel << Integer.valueOf(ChQNum));
    g0chact |= (1 << Integer.valueOf(ChQNum));
  }
  else if(Integer.valueOf(ChQgroup) == 1)
  {
    g1asssel |= (chsel << Integer.valueOf(ChQNum));
    g1chact |= (1 << Integer.valueOf(ChQNum));
  }
  else if(Integer.valueOf(ChQgroup) == 2)
  {
    g2asssel |= (chsel << Integer.valueOf(ChQNum));
    g2chact |= (1 << Integer.valueOf(ChQNum));
  }
  else if(Integer.valueOf(ChQgroup) == 3)
  {
    g3asssel |= (chsel << Integer.valueOf(ChQNum));
    g3chact |= (1 << Integer.valueOf(ChQNum));
  }
}
%>
const ADC001_ChannelHandleType ADC001_ChannelCAHandle = {
  .kGroupNo = (uint8_t)<%= ChQgroup%>,
  .kChannelNo = (uint8_t)<%= ChQNum%>,
  .kEnable = (uint8_t)<%= app.getIntegerValue(AppBaseuri + "0/adc001_erwselectchannelq/0")%>
};
<%}}%>
<% if (GrpCChannels > 1) { %>
<% String ChRAppUri = null;
String ChRgroup = null; 
int chsel = app.getIntegerValue(AppBaseuri + "0/adc001_erwselectchannelr/0");
ChRAppUri = app.getMappedUri(AppBaseuri  +"0/channel_cb");
if ((ChRAppUri != null) && (ChRAppUri.trim() != "")) {
ChRNum = ChRAppUri.substring(ChRAppUri.lastIndexOf("/")+1);
ChRgroup = ChRAppUri.substring(ChRAppUri.length()-6,ChRAppUri.indexOf("/ch/")); 
ChRgroup = ChRgroup.substring(ChRgroup.lastIndexOf("/") + 1 ); 
if(ChRgroup != null)
{
  if(Integer.valueOf(ChRgroup) == 0)
  {
    g0asssel |= (chsel << Integer.valueOf(ChRNum));
    g0chact |= (1 << Integer.valueOf(ChRNum));
  }
  else if(Integer.valueOf(ChRgroup) == 1)
  {
    g1asssel |= (chsel << Integer.valueOf(ChRNum));
    g1chact |= (1 << Integer.valueOf(ChRNum));
  }
  else if(Integer.valueOf(ChRgroup) == 2)
  {
    g2asssel |= (chsel << Integer.valueOf(ChRNum));
    g2chact |= (1 << Integer.valueOf(ChRNum));
  }
  else if(Integer.valueOf(ChRgroup) == 3)
  {
    g3asssel |= (chsel << Integer.valueOf(ChRNum));
    g3chact |= (1 << Integer.valueOf(ChRNum));
  }
}
%>
const ADC001_ChannelHandleType ADC001_ChannelCBHandle = {
  .kGroupNo = (uint8_t)<%= ChRgroup%>,
  .kChannelNo = (uint8_t)<%= ChRNum%>,
  .kEnable = (uint8_t)<%= app.getIntegerValue(AppBaseuri + "0/adc001_erwselectchannelr/0")%>
};
<%}}%>
<% if (GrpCChannels > 2) { %>
<% String ChSAppUri = null;
String ChSgroup = null; 
int chsel = app.getIntegerValue(AppBaseuri + "0/adc001_erwselectchannels/0");
ChSAppUri = app.getMappedUri(AppBaseuri  +"0/channel_cc");
if ((ChSAppUri != null) && (ChSAppUri.trim() != "")) {
ChSNum = ChSAppUri.substring(ChSAppUri.lastIndexOf("/")+1);
ChSgroup = ChSAppUri.substring(ChSAppUri.length()-6,ChSAppUri.indexOf("/ch/")); 
ChSgroup = ChSgroup.substring(ChSgroup.lastIndexOf("/") + 1 ); 
if(ChSgroup != null)
{
  if(Integer.valueOf(ChSgroup) == 0)
  {
    g0asssel |= (chsel << Integer.valueOf(ChSNum));
    g0chact |= (1 << Integer.valueOf(ChSNum));
  }
  else if(Integer.valueOf(ChSgroup) == 1)
  {
    g1asssel |= (chsel << Integer.valueOf(ChSNum));
    g1chact |= (1 << Integer.valueOf(ChSNum));
  }
  else if(Integer.valueOf(ChSgroup) == 2)
  {
    g2asssel |= (chsel << Integer.valueOf(ChSNum));
    g2chact |= (1 << Integer.valueOf(ChSNum));
  }
  else if(Integer.valueOf(ChSgroup) == 3)
  {
    g3asssel |= (chsel << Integer.valueOf(ChSNum));
    g3chact |= (1 << Integer.valueOf(ChSNum));
  }
}
%>
const ADC001_ChannelHandleType ADC001_ChannelCCHandle = {
  .kGroupNo = (uint8_t)<%= ChSgroup%>,
  .kChannelNo = (uint8_t)<%= ChSNum%>,
  .kEnable = (uint8_t)<%= app.getIntegerValue(AppBaseuri + "0/adc001_erwselectchannels/0")%>
};
<%}}%>
<% if (GrpCChannels > 3) { %>
<% String ChTAppUri = null;
String ChTgroup = null; 
int chsel = app.getIntegerValue(AppBaseuri + "0/adc001_erwselectchannelt/0");
ChTAppUri = app.getMappedUri(AppBaseuri  +"0/channel_cd");
if ((ChTAppUri != null) && (ChTAppUri.trim() != "")) {
ChTNum = ChTAppUri.substring(ChTAppUri.lastIndexOf("/")+1);
ChTgroup = ChTAppUri.substring(ChTAppUri.length()-6,ChTAppUri.indexOf("/ch/")); 
ChTgroup = ChTgroup.substring(ChTgroup.lastIndexOf("/") + 1 ); 
if(ChTgroup != null)
{
  if(Integer.valueOf(ChTgroup) == 0)
  {
    g0asssel |= (chsel << Integer.valueOf(ChTNum));
    g0chact |= (1 << Integer.valueOf(ChTNum));
  }
  else if(Integer.valueOf(ChTgroup) == 1)
  {
    g1asssel |= (chsel << Integer.valueOf(ChTNum));
    g1chact |= (1 << Integer.valueOf(ChTNum));
  }
  else if(Integer.valueOf(ChTgroup) == 2)
  {
    g2asssel |= (chsel << Integer.valueOf(ChTNum));
    g2chact |= (1 << Integer.valueOf(ChTNum));
  }
  else if(Integer.valueOf(ChTgroup) == 3)
  {
    g3asssel |= (chsel << Integer.valueOf(ChTNum));
    g3chact |= (1 << Integer.valueOf(ChTNum));
  }
}
%>
const ADC001_ChannelHandleType ADC001_ChannelCDHandle = {
  .kGroupNo = (uint8_t)<%= ChTgroup%>,
  .kChannelNo = (uint8_t)<%= ChTNum%>,
  .kEnable = (uint8_t)<%= app.getIntegerValue(AppBaseuri + "0/adc001_erwselectchannelt/0")%>
};
<%}}%>
<% if (GrpCChannels > 4) { %>
<% String ChUAppUri = null;
String ChUgroup = null; 
int chsel = app.getIntegerValue(AppBaseuri + "0/adc001_erwselectchannelu/0");
ChUAppUri = app.getMappedUri(AppBaseuri  +"0/channel_ce");
if ((ChUAppUri != null) && (ChUAppUri.trim() != "")) {
ChUNum = ChUAppUri.substring(ChUAppUri.lastIndexOf("/")+1);
ChUgroup = ChUAppUri.substring(ChUAppUri.length()-6,ChUAppUri.indexOf("/ch/")); 
ChUgroup = ChUgroup.substring(ChUgroup.lastIndexOf("/") + 1 ); 
if(ChUgroup != null)
{
  if(Integer.valueOf(ChUgroup) == 0)
  {
    g0asssel |= (chsel << Integer.valueOf(ChUNum));
    g0chact |= (1 << Integer.valueOf(ChUNum));
  }
  else if(Integer.valueOf(ChUgroup) == 1)
  {
    g1asssel |= (chsel << Integer.valueOf(ChUNum));
    g1chact |= (1 << Integer.valueOf(ChUNum));
  }
  else if(Integer.valueOf(ChUgroup) == 2)
  {
    g2asssel |= (chsel << Integer.valueOf(ChUNum));
    g2chact |= (1 << Integer.valueOf(ChUNum));
  }
  else if(Integer.valueOf(ChUgroup) == 3)
  {
    g3asssel |= (chsel << Integer.valueOf(ChUNum));
    g3chact |= (1 << Integer.valueOf(ChUNum));
  }
}
%>
const ADC001_ChannelHandleType ADC001_ChannelCEHandle = {
  .kGroupNo = (uint8_t)<%= ChUgroup%>,
  .kChannelNo = (uint8_t)<%= ChUNum%>,
  .kEnable = (uint8_t)<%= app.getIntegerValue(AppBaseuri + "0/adc001_erwselectchannelu/0")%>
};
<%}}%>
<% if (GrpCChannels > 5) { %>
<% String ChVAppUri = null;
String ChVgroup = null; 
int chsel = app.getIntegerValue(AppBaseuri + "0/adc001_erwselectchannelv/0");
ChVAppUri = app.getMappedUri(AppBaseuri  +"0/channel_cf");
if ((ChVAppUri != null) && (ChVAppUri.trim() != "")) {
ChVNum = ChVAppUri.substring(ChVAppUri.lastIndexOf("/")+1);
ChVgroup = ChVAppUri.substring(ChVAppUri.length()-6,ChVAppUri.indexOf("/ch/")); 
ChVgroup = ChVgroup.substring(ChVgroup.lastIndexOf("/") + 1 ); 
if(ChVgroup != null)
{
  if(Integer.valueOf(ChVgroup) == 0)
  {
    g0asssel |= (chsel << Integer.valueOf(ChVNum));
    g0chact |= (1 << Integer.valueOf(ChVNum));
  }
  else if(Integer.valueOf(ChVgroup) == 1)
  {
    g1asssel |= (chsel << Integer.valueOf(ChVNum));
    g1chact |= (1 << Integer.valueOf(ChVNum));
  }
  else if(Integer.valueOf(ChVgroup) == 2)
  {
    g2asssel |= (chsel << Integer.valueOf(ChVNum));
    g2chact |= (1 << Integer.valueOf(ChVNum));
  }
  else if(Integer.valueOf(ChVgroup) == 3)
  {
    g3asssel |= (chsel << Integer.valueOf(ChVNum));
    g3chact |= (1 << Integer.valueOf(ChVNum));
  }
}
%>
const ADC001_ChannelHandleType ADC001_ChannelCFHandle = {
  .kGroupNo = (uint8_t)<%= ChVgroup%>,
  .kChannelNo = (uint8_t)<%= ChVNum%>,
  .kEnable = (uint8_t)<%= app.getIntegerValue(AppBaseuri + "0/adc001_erwselectchannelv/0")%>
};
<%}}%>
<% if (GrpCChannels > 6) { %>
<% String ChWAppUri = null;
String ChWgroup = null; 
int chsel = app.getIntegerValue(AppBaseuri + "0/adc001_erwselectchannelw/0");
ChWAppUri = app.getMappedUri(AppBaseuri  +"0/channel_cg");
if ((ChWAppUri != null) && (ChWAppUri.trim() != "")) {
ChWNum = ChWAppUri.substring(ChWAppUri.lastIndexOf("/")+1);
ChWgroup = ChWAppUri.substring(ChWAppUri.length()-6,ChWAppUri.indexOf("/ch/"));
ChWgroup = ChWgroup.substring(ChWgroup.lastIndexOf("/") + 1 ); 
if(ChWgroup != null)
{
  if(Integer.valueOf(ChWgroup) == 0)
  {
    g0asssel |= (chsel << Integer.valueOf(ChWNum));
    g0chact |= (1 << Integer.valueOf(ChWNum));
  }
  else if(Integer.valueOf(ChWgroup) == 1)
  {
    g1asssel |= (chsel << Integer.valueOf(ChWNum));
    g1chact |= (1 << Integer.valueOf(ChWNum));
  }
  else if(Integer.valueOf(ChWgroup) == 2)
  {
    g2asssel |= (chsel << Integer.valueOf(ChWNum));
    g2chact |= (1 << Integer.valueOf(ChWNum));
  }
  else if(Integer.valueOf(ChWgroup) == 3)
  {
    g3asssel |= (chsel << Integer.valueOf(ChWNum));
    g3chact |= (1 << Integer.valueOf(ChWNum));
  }
}
%>
const ADC001_ChannelHandleType ADC001_ChannelCGHandle = {
  .kGroupNo = (uint8_t)<%= ChWgroup%>,
  .kChannelNo = (uint8_t)<%= ChWNum%>,
  .kEnable = (uint8_t)<%= app.getIntegerValue(AppBaseuri + "0/adc001_erwselectchannelw/0")%>
};
<%}}%>
<% if (GrpCChannels > 7) { %>
<% String ChXAppUri = null;
String ChXgroup = null; 
int chsel = app.getIntegerValue(AppBaseuri + "0/adc001_erwselectchannelx/0");
ChXAppUri = app.getMappedUri(AppBaseuri  +"0/channel_ch");
if ((ChXAppUri != null) && (ChXAppUri.trim() != "")) {
ChXNum = ChXAppUri.substring(ChXAppUri.lastIndexOf("/")+1);
ChXgroup = ChXAppUri.substring(ChXAppUri.length()-6,ChXAppUri.indexOf("/ch/")); 
ChXgroup = ChXgroup.substring(ChXgroup.lastIndexOf("/") + 1 ); 
if(ChXgroup != null)
{
  if(Integer.valueOf(ChXgroup) == 0)
  {
    g0asssel |= (chsel << Integer.valueOf(ChXNum));
    g0chact |= (1 << Integer.valueOf(ChXNum));
  }
  else if(Integer.valueOf(ChXgroup) == 1)
  {
    g1asssel |= (chsel << Integer.valueOf(ChXNum));
    g1chact |= (1 << Integer.valueOf(ChXNum));
  }
  else if(Integer.valueOf(ChXgroup) == 2)
  {
    g2asssel |= (chsel << Integer.valueOf(ChXNum));
    g2chact |= (1 << Integer.valueOf(ChXNum));
  }
  else if(Integer.valueOf(ChXgroup) == 3)
  {
    g3asssel |= (chsel << Integer.valueOf(ChXNum));
    g3chact |= (1 << Integer.valueOf(ChXNum));
  }
}
%>
const ADC001_ChannelHandleType ADC001_ChannelCHHandle = {
  .kGroupNo = (uint8_t)<%= ChXgroup%>,
  .kChannelNo = (uint8_t)<%= ChXNum%>,
  .kEnable = (uint8_t)<%= app.getIntegerValue(AppBaseuri + "0/adc001_erwselectchannelx/0")%>
};
<%}}%>

<% if (GrpDChannels > 0) { %>
<% String ChYAppUri = null;
String ChYgroup = null; 
int chsel = app.getIntegerValue(AppBaseuri + "0/adc001_erwselectchannely/0");
ChYAppUri = app.getMappedUri(AppBaseuri  +"0/channel_da");
if ((ChYAppUri != null) && (ChYAppUri.trim() != "")) {
ChYNum = ChYAppUri.substring(ChYAppUri.lastIndexOf("/")+1);
ChYgroup = ChYAppUri.substring(ChYAppUri.length()-6,ChYAppUri.indexOf("/ch/")); 
ChYgroup = ChYgroup.substring(ChYgroup.lastIndexOf("/") + 1 );
if(ChYgroup != null)
{
  GroupD = Integer.valueOf(ChYgroup);
  g3groupact |= (1 << GroupD);
  if(Integer.valueOf(ChYgroup) == 0)
  {
    g0asssel |= (chsel << Integer.valueOf(ChYNum));
    g0chact |= (1 << Integer.valueOf(ChYNum));
  }
  else if(Integer.valueOf(ChYgroup) == 1)
  {
    g1asssel |= (chsel << Integer.valueOf(ChYNum));
    g1chact |= (1 << Integer.valueOf(ChYNum));
  }
  else if(Integer.valueOf(ChYgroup) == 2)
  {
    g2asssel |= (chsel << Integer.valueOf(ChYNum));
    g2chact |= (1 << Integer.valueOf(ChYNum));
  }
  else if(Integer.valueOf(ChYgroup) == 3)
  {
    g3asssel |= (chsel << Integer.valueOf(ChYNum));
    g3chact |= (1 << Integer.valueOf(ChYNum));
  }
}
%>
const ADC001_ChannelHandleType ADC001_ChannelDAHandle = {
  .kGroupNo = (uint8_t)<%= ChYgroup%>,
  .kChannelNo = (uint8_t)<%= ChYNum%>,
  .kEnable = (uint8_t)<%= app.getIntegerValue(AppBaseuri + "0/adc001_erwselectchannely/0")%>
};
<%}}%>
<% if (GrpDChannels > 1) { %>
<% String ChZAppUri = null;
String ChZgroup = null; 
int chsel = app.getIntegerValue(AppBaseuri + "0/adc001_erwselectchannelz/0");
ChZAppUri = app.getMappedUri(AppBaseuri  +"0/channel_db");
if ((ChZAppUri != null) && (ChZAppUri.trim() != "")) {
ChZNum = ChZAppUri.substring(ChZAppUri.lastIndexOf("/")+1);
ChZgroup = ChZAppUri.substring(ChZAppUri.length()-6,ChZAppUri.indexOf("/ch/")); 
ChZgroup = ChZgroup.substring(ChZgroup.lastIndexOf("/") + 1 ); 
if(ChZgroup != null)
{
  if(Integer.valueOf(ChZgroup) == 0)
  {
    g0asssel |= (chsel << Integer.valueOf(ChZNum));
    g0chact |= (1 << Integer.valueOf(ChZNum));
  }
  else if(Integer.valueOf(ChZgroup) == 1)
  {
    g1asssel |= (chsel << Integer.valueOf(ChZNum));
    g1chact |= (1 << Integer.valueOf(ChZNum));
  }
  else if(Integer.valueOf(ChZgroup) == 2)
  {
    g2asssel |= (chsel << Integer.valueOf(ChZNum));
    g2chact |= (1 << Integer.valueOf(ChZNum));
  }
  else if(Integer.valueOf(ChZgroup) == 3)
  {
    g3asssel |= (chsel << Integer.valueOf(ChZNum));
    g3chact |= (1 << Integer.valueOf(ChZNum));
  }
}
%>
const ADC001_ChannelHandleType ADC001_ChannelDBHandle = {
  .kGroupNo = (uint8_t)<%= ChZgroup%>,
  .kChannelNo = (uint8_t)<%= ChZNum%>,
  .kEnable = (uint8_t)<%= app.getIntegerValue(AppBaseuri + "0/adc001_erwselectchannelz/0")%>
};
<%}}%>
<% if (GrpDChannels > 2) { %>
<% String ChAAAppUri = null;
String ChAAgroup = null; 
int chsel = app.getIntegerValue(AppBaseuri + "0/adc001_erwselectchannelaa/0");
ChAAAppUri = app.getMappedUri(AppBaseuri  +"0/channel_dc");
if ((ChAAAppUri != null) && (ChAAAppUri.trim() != "")) {
ChAANum = ChAAAppUri.substring(ChAAAppUri.lastIndexOf("/")+1);
ChAAgroup = ChAAAppUri.substring(ChAAAppUri.length()-6,ChAAAppUri.indexOf("/ch/")); 
ChAAgroup = ChAAgroup.substring(ChAAgroup.lastIndexOf("/") + 1 ); 
if(ChAAgroup != null)
{
  if(Integer.valueOf(ChAAgroup) == 0)
  {
    g0asssel |= (chsel << Integer.valueOf(ChAANum));
    g0chact |= (1 << Integer.valueOf(ChAANum));
  }
  else if(Integer.valueOf(ChAAgroup) == 1)
  {
    g1asssel |= (chsel << Integer.valueOf(ChAANum));
    g1chact |= (1 << Integer.valueOf(ChAANum));
  }
  else if(Integer.valueOf(ChAAgroup) == 2)
  {
    g2asssel |= (chsel << Integer.valueOf(ChAANum));
    g2chact |= (1 << Integer.valueOf(ChAANum));
  }
  else if(Integer.valueOf(ChAAgroup) == 3)
  {
    g3asssel |= (chsel << Integer.valueOf(ChAANum));
    g3chact |= (1 << Integer.valueOf(ChAANum));
  }
}
%>
const ADC001_ChannelHandleType ADC001_ChannelDCHandle = {
  .kGroupNo = (uint8_t)<%= ChAAgroup%>,
  .kChannelNo = (uint8_t)<%= ChAANum%>,
  .kEnable = (uint8_t)<%= app.getIntegerValue(AppBaseuri + "0/adc001_erwselectchannelaa/0")%>
};
<%}}%>
<% if (GrpDChannels > 3) { %>
<% String ChABAppUri = null;
String ChABgroup = null; 
int chsel = app.getIntegerValue(AppBaseuri + "0/adc001_erwselectchannelab/0");
ChABAppUri = app.getMappedUri(AppBaseuri  +"0/channel_dd");
if ((ChABAppUri != null) && (ChABAppUri.trim() != "")) {
ChABNum = ChABAppUri.substring(ChABAppUri.lastIndexOf("/")+1);
ChABgroup = ChABAppUri.substring(ChABAppUri.length()-6,ChABAppUri.indexOf("/ch/")); 
ChABgroup = ChABgroup.substring(ChABgroup.lastIndexOf("/") + 1 ); 
if(ChABgroup != null)
{
  if(Integer.valueOf(ChABgroup) == 0)
  {
    g0asssel |= (chsel << Integer.valueOf(ChABNum));
    g0chact |= (1 << Integer.valueOf(ChABNum));
  }
  else if(Integer.valueOf(ChABgroup) == 1)
  {
    g1asssel |= (chsel << Integer.valueOf(ChABNum));
    g1chact |= (1 << Integer.valueOf(ChABNum));
  }
  else if(Integer.valueOf(ChABgroup) == 2)
  {
    g2asssel |= (chsel << Integer.valueOf(ChABNum));
    g2chact |= (1 << Integer.valueOf(ChABNum));
  }
  else if(Integer.valueOf(ChABgroup) == 3)
  {
    g3asssel |= (chsel << Integer.valueOf(ChABNum));
    g3chact |= (1 << Integer.valueOf(ChABNum));
  }
}
%>
const ADC001_ChannelHandleType ADC001_ChannelDDHandle = {
  .kGroupNo = (uint8_t)<%= ChABgroup%>,
  .kChannelNo = (uint8_t)<%= ChABNum%>,
  .kEnable = (uint8_t)<%= app.getIntegerValue(AppBaseuri + "0/adc001_erwselectchannelab/0")%>
};
<%}}%>
<% if (GrpDChannels > 4) { %>
<% String ChACAppUri = null;
String ChACgroup = null; 
int chsel = app.getIntegerValue(AppBaseuri + "0/adc001_erwselectchannelac/0");
ChACAppUri = app.getMappedUri(AppBaseuri  +"0/channel_de");
if ((ChACAppUri != null) && (ChACAppUri.trim() != "")) {
ChACNum = ChACAppUri.substring(ChACAppUri.lastIndexOf("/")+1);
ChACgroup = ChACAppUri.substring(ChACAppUri.length()-6,ChACAppUri.indexOf("/ch/")); 
ChACgroup = ChACgroup.substring(ChACgroup.lastIndexOf("/") + 1 ); 
if(ChACgroup != null)
{
  if(Integer.valueOf(ChACgroup) == 0)
  {
    g0asssel |= (chsel << Integer.valueOf(ChACNum));
    g0chact |= (1 << Integer.valueOf(ChACNum));
  }
  else if(Integer.valueOf(ChACgroup) == 1)
  {
    g1asssel |= (chsel << Integer.valueOf(ChACNum));
    g1chact |= (1 << Integer.valueOf(ChACNum));
  }
  else if(Integer.valueOf(ChACgroup) == 2)
  {
    g2asssel |= (chsel << Integer.valueOf(ChACNum));
    g2chact |= (1 << Integer.valueOf(ChACNum));
  }
  else if(Integer.valueOf(ChACgroup) == 3)
  {
    g3asssel |= (chsel << Integer.valueOf(ChACNum));
    g3chact |= (1 << Integer.valueOf(ChACNum));
  }
}
%>
const ADC001_ChannelHandleType ADC001_ChannelDEHandle = {
  .kGroupNo = (uint8_t)<%= ChACgroup%>,
  .kChannelNo = (uint8_t)<%= ChACNum%>,
  .kEnable = (uint8_t)<%= app.getIntegerValue(AppBaseuri + "0/adc001_erwselectchannelac/0")%>
};
<%}}%>
<% if (GrpDChannels > 5) { %>
<% String ChADAppUri = null;
String ChADgroup = null; 
int chsel = app.getIntegerValue(AppBaseuri + "0/adc001_erwselectchannelad/0");
ChADAppUri = app.getMappedUri(AppBaseuri  +"0/channel_df");
if ((ChADAppUri != null) && (ChADAppUri.trim() != "")) {
ChADNum = ChADAppUri.substring(ChADAppUri.lastIndexOf("/")+1);
ChADgroup = ChADAppUri.substring(ChADAppUri.length()-6,ChADAppUri.indexOf("/ch/")); 
ChADgroup = ChADgroup.substring(ChADgroup.lastIndexOf("/") + 1 ); 
if(ChADgroup != null)
{
  if(Integer.valueOf(ChADgroup) == 0)
  {
    g0asssel |= (chsel << Integer.valueOf(ChADNum));
    g0chact |= (1 << Integer.valueOf(ChADNum));
  }
  else if(Integer.valueOf(ChADgroup) == 1)
  {
    g1asssel |= (chsel << Integer.valueOf(ChADNum));
    g1chact |= (1 << Integer.valueOf(ChADNum));
  }
  else if(Integer.valueOf(ChADgroup) == 2)
  {
    g2asssel |= (chsel << Integer.valueOf(ChADNum));
    g2chact |= (1 << Integer.valueOf(ChADNum));
  }
  else if(Integer.valueOf(ChADgroup) == 3)
  {
    g3asssel |= (chsel << Integer.valueOf(ChADNum));
    g3chact |= (1 << Integer.valueOf(ChADNum));
  }
}
%>
const ADC001_ChannelHandleType ADC001_ChannelDFHandle = {
  .kGroupNo = (uint8_t)<%= ChADgroup%>,
  .kChannelNo = (uint8_t)<%= ChADNum%>,
  .kEnable = (uint8_t)<%= app.getIntegerValue(AppBaseuri + "0/adc001_erwselectchannelad/0")%>
};
<%}}%>
<% if (GrpDChannels > 6) { %>
<% String ChAEAppUri = null;
String ChAEgroup = null; 
int chsel = app.getIntegerValue(AppBaseuri + "0/adc001_erwselectchannelae/0");
ChAEAppUri = app.getMappedUri(AppBaseuri  +"0/channel_dg");
if ((ChAEAppUri != null) && (ChAEAppUri.trim() != "")) {
ChAENum = ChAEAppUri.substring(ChAEAppUri.lastIndexOf("/")+1);
ChAEgroup = ChAEAppUri.substring(ChAEAppUri.length()-6,ChAEAppUri.indexOf("/ch/")); 
ChAEgroup = ChAEgroup.substring(ChAEgroup.lastIndexOf("/") + 1 ); 
if(ChAEgroup != null)
{
  if(Integer.valueOf(ChAEgroup) == 0)
  {
    g0asssel |= (chsel << Integer.valueOf(ChAENum));
    g0chact |= (1 << Integer.valueOf(ChAENum));
  }
  else if(Integer.valueOf(ChAEgroup) == 1)
  {
    g1asssel |= (chsel << Integer.valueOf(ChAENum));
    g1chact |= (1 << Integer.valueOf(ChAENum));
  }
  else if(Integer.valueOf(ChAEgroup) == 2)
  {
    g2asssel |= (chsel << Integer.valueOf(ChAENum));
    g2chact |= (1 << Integer.valueOf(ChAENum));
  }
  else if(Integer.valueOf(ChAEgroup) == 3)
  {
    g3asssel |= (chsel << Integer.valueOf(ChAENum));
    g3chact |= (1 << Integer.valueOf(ChAENum));
  }
}
%>
const ADC001_ChannelHandleType ADC001_ChannelDGHandle = {
  .kGroupNo = (uint8_t)<%= ChAEgroup%>,
  .kChannelNo = (uint8_t)<%= ChAENum%>,
  .kEnable = (uint8_t)<%= app.getIntegerValue(AppBaseuri + "0/adc001_erwselectchannelae/0")%>
};
<%}}%>
<% if (GrpDChannels > 7) { %>
<% String ChAFAppUri = null;
String ChAFgroup = null;
int chsel = app.getIntegerValue(AppBaseuri + "0/adc001_erwselectchannelaf/0"); 
ChAFAppUri = app.getMappedUri(AppBaseuri  +"0/channel_dh");
if ((ChAFAppUri != null) && (ChAFAppUri.trim() != "")) {
ChAFNum = ChAFAppUri.substring(ChAFAppUri.lastIndexOf("/")+1);
ChAFgroup = ChAFAppUri.substring(ChAFAppUri.length()-6,ChAFAppUri.indexOf("/ch/")); 
ChAFgroup = ChAFgroup.substring(ChAFgroup.lastIndexOf("/") + 1 ); 
if(ChAFgroup != null)
{
  if(Integer.valueOf(ChAFgroup) == 0)
  {
    g0asssel |= (chsel << Integer.valueOf(ChAFNum));
    g0chact |= (1 << Integer.valueOf(ChAFNum));
  }
  else if(Integer.valueOf(ChAFgroup) == 1)
  {
    g1asssel |= (chsel << Integer.valueOf(ChAFNum));
    g1chact |= (1 << Integer.valueOf(ChAFNum));
  }
  else if(Integer.valueOf(ChAFgroup) == 2)
  {
    g2asssel |= (chsel << Integer.valueOf(ChAFNum));
    g2chact |= (1 << Integer.valueOf(ChAFNum));
  }
  else if(Integer.valueOf(ChAFgroup) == 3)
  {
    g3asssel |= (chsel << Integer.valueOf(ChAFNum));
    g3chact |= (1 << Integer.valueOf(ChAFNum));
  }
}
%>
const ADC001_ChannelHandleType ADC001_ChannelDHHandle = {
  .kGroupNo = (uint8_t)<%= ChAFgroup%>,
  .kChannelNo = (uint8_t)<%= ChAFNum%>,
  .kEnable = (uint8_t)<%= app.getIntegerValue(AppBaseuri + "0/adc001_erwselectchannelaf/0")%>
};
<%}}%>

<% if (TotalChannels > 0) { %>
const ADC001_ChannelHandleType* ADC001_ChannelHandlePtr[<%=TotalChannels%>] = {
<% if ((GrpAChannels > 0) && (ChANum != null)) { %>
  &ADC001_ChannelAAHandle,
<%}%>
<% if ((GrpAChannels > 1) && (ChBNum != null)) { %>
  &ADC001_ChannelABHandle,
<%}%>
<% if ((GrpAChannels > 2) && (ChCNum != null)) { %>
  &ADC001_ChannelACHandle,
<%}%>
<% if ((GrpAChannels > 3) && (ChDNum != null)) { %>
  &ADC001_ChannelADHandle,
<%}%>
<% if ((GrpAChannels > 4) && (ChENum != null)) { %>
  &ADC001_ChannelAEHandle,
<%}%>
<% if((GrpAChannels > 5) && (ChFNum != null)) { %>
  &ADC001_ChannelAFHandle,
<%}%>
<% if ((GrpAChannels > 6) && (ChGNum != null)){ %>
  &ADC001_ChannelAGHandle,
<%}%>
<% if ((GrpAChannels > 7) && (ChHNum != null)) { %>
  &ADC001_ChannelAHHandle,
<%}%>
<% if ((GrpBChannels > 0) && (ChINum != null)) { %>
  &ADC001_ChannelBAHandle,
<%}%>
<% if ((GrpBChannels > 1)  && (ChJNum != null)){ %>
  &ADC001_ChannelBBHandle,
<%}%>
<% if ((GrpBChannels > 2) && (ChKNum != null)) { %>
  &ADC001_ChannelBCHandle,
<%}%>
<% if ((GrpBChannels > 3) && (ChLNum != null)) { %>
  &ADC001_ChannelBDHandle,
<%}%>
<% if ((GrpBChannels > 4) && (ChMNum != null)) { %>
  &ADC001_ChannelBEHandle,
<%}%>
<% if ((GrpBChannels > 5) && (ChNNum != null)) { %>
  &ADC001_ChannelBFHandle,
<%}%>

<% if ((GrpBChannels > 6) && (ChONum != null))  { %>
  &ADC001_ChannelBGHandle,
<%}%>
<% if ((GrpBChannels > 7) && (ChPNum != null)) { %>
  &ADC001_ChannelBHHandle,
<%}%>
<% if ((GrpCChannels > 0) && (ChQNum != null)) { %>
  &ADC001_ChannelCAHandle,
<%}%>
<% if ((GrpCChannels > 1)  && (ChRNum != null)){ %>
  &ADC001_ChannelCBHandle,
<%}%>
<% if ((GrpCChannels > 2) && (ChSNum != null)) { %>
  &ADC001_ChannelCCHandle,
<%}%>
<% if ((GrpCChannels > 3)  && (ChTNum != null)){ %>
  &ADC001_ChannelCDHandle,
<%}%>
<% if ((GrpCChannels > 4) && (ChUNum != null)) { %>
  &ADC001_ChannelCEHandle,
<%}%>
<% if ((GrpCChannels > 5) && (ChVNum != null)) { %>
  &ADC001_ChannelCFHandle,
<%}%>
<% if ((GrpCChannels > 6)  && (ChWNum != null)){ %>
  &ADC001_ChannelCGHandle,
<%}%>
<% if ((GrpCChannels > 7) && (ChXNum != null)) { %>
  &ADC001_ChannelCHHandle,
<%}%>
<% if ((GrpDChannels > 0) && (ChYNum != null)) { %>
  &ADC001_ChannelDAHandle,
<%}%>
<% if ((GrpDChannels > 1) && (ChZNum != null)) { %>
  &ADC001_ChannelDBHandle,
<%}%>
<% if ((GrpDChannels > 2) && (ChAANum != null)){ %>
  &ADC001_ChannelDCHandle,
<%}%>
<% if ((GrpDChannels > 3) && (ChABNum != null)) { %>
  &ADC001_ChannelDDHandle,
<%}%>
<% if ((GrpDChannels > 4) && (ChACNum != null)) { %>
  &ADC001_ChannelDEHandle,
<%}%>
<% if ((GrpDChannels > 5) && (ChADNum != null)) { %>
  &ADC001_ChannelDFHandle,
<%}%>
<% if ((GrpDChannels > 6) && (ChAENum != null)) { %>
  &ADC001_ChannelDGHandle,
<%}%>
<% if ((GrpDChannels > 7) && (ChAFNum != null)) { %>
  &ADC001_ChannelDHHandle,
<%}%>
};
<%}%>


const ADC001_HandleType ADC001_Handle0 =
{
  .kChannels = (uint8_t)<%=TotalChannels%>,
  .kGroup0ChSelect = (uint8_t)<%= g0asssel%>, 
  .kGroup1ChSelect = (uint8_t)<%= g1asssel%>,  
  <% if(Is1xDevice != 1 && Is42Device != 1) {%>
  .kGroup2ChSelect = (uint8_t)<%= g2asssel%>,
  .kGroup3ChSelect = (uint8_t)<%= g3asssel%>,
  <%}%>
  .kGrpAChannels = (uint8_t)<%= GrpAChannels %>,
  .kGrpBChannels = (uint8_t)<%= GrpBChannels %>,
  <% if(Is1xDevice != 1 && Is42Device != 1) {%>
  .kGrpCChannels = (uint8_t)<%= GrpCChannels %>,
  .kGrpDChannels = (uint8_t)<%= GrpDChannels %>,
  <%}%>
  
  .kActiveGroups = {(uint8_t)<%= ((g3groupact >> 0 ) & 1)%>, (uint8_t)<%= ((g3groupact >> 1 ) & 1)%> <% if(Is1xDevice != 1  && Is42Device != 1) {%>, (uint8_t)<%= ((g3groupact >> 2 ) & 1)%>, (uint8_t)<%= ((g3groupact >> 3 ) & 1)%> <% }%>}, 
  
  .kActiveChannels = {{(uint8_t)<%= ((g0chact >> 0 ) & 1)%>, (uint8_t)<%= ((g0chact >> 1 ) & 1)%>, (uint8_t)<%= ((g0chact >> 2 ) & 1)%>, (uint8_t)<%= ((g0chact >> 3 ) & 1)%>, (uint8_t)<%= ((g0chact >> 4 ) & 1)%>, (uint8_t)<%= ((g0chact >> 5 ) & 1)%>, (uint8_t)<%= ((g0chact >> 6 ) & 1)%>, (uint8_t)<%= ((g0chact >> 7 ) & 1)%> },
                      {(uint8_t)<%= ((g1chact >> 0 ) & 1)%>, (uint8_t)<%= ((g1chact >> 1 ) & 1)%>, (uint8_t)<%= ((g1chact >> 2 ) & 1)%>, (uint8_t)<%= ((g1chact >> 3 ) & 1)%>, (uint8_t)<%= ((g1chact >> 4 ) & 1)%>, (uint8_t)<%= ((g1chact >> 5 ) & 1)%>, (uint8_t)<%= ((g1chact >> 6 ) & 1)%>, (uint8_t)<%= ((g1chact >> 7 ) & 1)%> } 
  <% if(Is1xDevice != 1  && Is42Device != 1) {%>,
                      {(uint8_t)<%= ((g2chact >> 0 ) & 1)%>, (uint8_t)<%= ((g2chact >> 1 ) & 1)%>, (uint8_t)<%= ((g2chact >> 2 ) & 1)%>, (uint8_t)<%= ((g2chact >> 3 ) & 1)%>, (uint8_t)<%= ((g2chact >> 4 ) & 1)%>, (uint8_t)<%= ((g2chact >> 5 ) & 1)%>, (uint8_t)<%= ((g2chact >> 6 ) & 1)%>, (uint8_t)<%= ((g2chact >> 7 ) & 1)%> },
                      {(uint8_t)<%= ((g3chact >> 0 ) & 1)%>, (uint8_t)<%= ((g3chact >> 1 ) & 1)%>, (uint8_t)<%= ((g3chact >> 2 ) & 1)%>, (uint8_t)<%= ((g3chact >> 3 ) & 1)%>, (uint8_t)<%= ((g3chact >> 4 ) & 1)%>, (uint8_t)<%= ((g3chact >> 5 ) & 1)%>, (uint8_t)<%= ((g3chact >> 6 ) & 1)%>, (uint8_t)<%= ((g3chact >> 7 ) & 1)%> }
  <%}%>
                     }, 
  
  .kAsenEnable = (uint8_t)<% if (app.getIntegerValue(AppBaseuri + "0/adc001_erwenablescansource/0") == 1){%>ADC001_ARBITRATION_SLOT_ENABLE,<%}  else {%>ADC001_ARBITRATION_SLOT_DISABLE,<%} %>
  .kPriority = (uint8_t)ADC001_PRIORITY0,  
  .kResultReadMode = (uint8_t)ADC001_WAIT_FOR_READ,
  .kStartmode = (uint8_t)ADC001_WAIT_FOR_START,
  .kTriggerMode = (uint8_t)<% if (app.getIntegerValue(AppBaseuri +  "0/ADC001_erwtrgmode/0") == 1){%>ADC001_NOTRIGGER,<%} else if  (app.getIntegerValue(AppBaseuri + "0/ADC001_erwtrgmode/1") == 1){%>ADC001_TRIGGER_UPON_FALLING_EDGE,<%} else if  (app.getIntegerValue(AppBaseuri + "0/ADC001_erwtrgmode/2") == 1){%>ADC001_TRIGGER_UPON_RISING_EDGE,<%} else if  (app.getIntegerValue(AppBaseuri + "0/ADC001_erwtrgmode/3") == 1){%>ADC001_TRIGGER_UPON_BOTH_EDGE,<%} %>
  .kGatingMode = (uint8_t)<% if (app.getIntegerValue(AppBaseuri +  "0/ADC001_erwgatmode/0") == 1){%>ADC001_GATING_DISABLED,<%} else if  (app.getIntegerValue(AppBaseuri + "0/ADC001_erwgatmode/1") == 1){%>ADC001_GATING_ENABLED_ALWAYS,<%} else if  (app.getIntegerValue(AppBaseuri + "0/ADC001_erwgatmode/2") == 1){%>ADC001_GATING_ENABLED_FOR_HIGH,<%} else if  (app.getIntegerValue(AppBaseuri + "0/ADC001_erwgatmode/3") == 1){%>ADC001_GATING_ENABLED_FOR_LOW,<%} %>
  .kTriggerEn = (uint8_t)<% if (app.getIntegerValue(AppBaseuri +  "0/adc001_erwtrgmode") > 0){%>1,<%} else {%>0,<%}%>
  .kAutoScan =   (uint8_t)<% if (app.getIntegerValue(AppBaseuri + "0/adc001_erwautoscanmode/0") == 1){%>ADC001_AUTOSCAN_ENABLE,<%} else {%>ADC001_AUTOSCAN_DISABLE,<%}%>
  .kResultControl = (uint8_t)<% if (app.getIntegerValue(AppBaseuri + "0/adc001_erwresultposition/0") == 1){%>ADC001_LEFT_ALIGN,<%} else {%>ADC001_RIGHT_ALIGN,<%}%>
  .kResultEvtEnable= (uint8_t)<%= app.getIntegerValue(AppBaseuri + "0/adc001_erwresulteventenable/0")%>,
  .kResourceEvtEnable= (uint8_t)0U,
  .kIpClassSel = <% if((app.getIntegerValue(AppBaseuri + "0/adc001_erwinputclasssel/0") == 1)){%>(uint8_t)ADC001_GLOBAL_CLASS0<%}
    else {%> (uint8_t)ADC001_GLOBAL_CLASS1 <%}%>,  
  .VADCGlobalPtr= (VADC_GLOBAL_TypeDef*)VADC,  
  .VADCGroup0Ptr= (VADC_G_TypeDef*)(void*) VADC_G0,
  .VADCGroup1Ptr= (VADC_G_TypeDef*)(void*) VADC_G1,
  <%if (Is45Device == 1 || Is44Device == 1 )	{%>
  .VADCGroup2Ptr= (VADC_G_TypeDef*)(void*) VADC_G2,
  .VADCGroup3Ptr= (VADC_G_TypeDef*)(void*) VADC_G3,
  <% } %>
  .DynamicHandlePtr= &ADC001_DynamicHandle,
 };
 
/*CODE_BLOCK_END*/
