   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"UART001.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.UART001_lInit,"ax",%progbits
  18              		.align	2
  19              		.global	UART001_lInit
  20              		.code	16
  21              		.thumb_func
  23              	UART001_lInit:
  24              	.LFB33:
  25              		.file 1 "../Dave/Generated/src/UART001/UART001.c"
   1:../Dave/Generated/src/UART001/UART001.c **** /*******************************************************************************
   2:../Dave/Generated/src/UART001/UART001.c ****  Copyright (c) 2014, Infineon Technologies AG                                 **
   3:../Dave/Generated/src/UART001/UART001.c ****  All rights reserved.                                                         **
   4:../Dave/Generated/src/UART001/UART001.c ****                                                                               **
   5:../Dave/Generated/src/UART001/UART001.c ****  Redistribution and use in source and binary forms, with or without           **
   6:../Dave/Generated/src/UART001/UART001.c ****  modification,are permitted provided that the following conditions are met:   **
   7:../Dave/Generated/src/UART001/UART001.c ****                                                                               **
   8:../Dave/Generated/src/UART001/UART001.c ****  *Redistributions of source code must retain the above copyright notice,      **
   9:../Dave/Generated/src/UART001/UART001.c ****  this list of conditions and the following disclaimer.                        **
  10:../Dave/Generated/src/UART001/UART001.c ****  *Redistributions in binary form must reproduce the above copyright notice,   **
  11:../Dave/Generated/src/UART001/UART001.c ****  this list of conditions and the following disclaimer in the documentation    **
  12:../Dave/Generated/src/UART001/UART001.c ****  and/or other materials provided with the distribution.                       **
  13:../Dave/Generated/src/UART001/UART001.c ****  *Neither the name of the copyright holders nor the names of its              **
  14:../Dave/Generated/src/UART001/UART001.c ****  contributors may be used to endorse or promote products derived from this    **
  15:../Dave/Generated/src/UART001/UART001.c ****  software without specific prior written permission.                          **
  16:../Dave/Generated/src/UART001/UART001.c ****                                                                               **
  17:../Dave/Generated/src/UART001/UART001.c ****  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"  **
  18:../Dave/Generated/src/UART001/UART001.c ****  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE    **
  19:../Dave/Generated/src/UART001/UART001.c ****  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE   **
  20:../Dave/Generated/src/UART001/UART001.c ****  ARE  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE   **
  21:../Dave/Generated/src/UART001/UART001.c ****  LIABLE  FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR         **
  22:../Dave/Generated/src/UART001/UART001.c ****  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF         **
  23:../Dave/Generated/src/UART001/UART001.c ****  SUBSTITUTE GOODS OR  SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS    **
  24:../Dave/Generated/src/UART001/UART001.c ****  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN      **
  25:../Dave/Generated/src/UART001/UART001.c ****  CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)       **
  26:../Dave/Generated/src/UART001/UART001.c ****  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE   **
  27:../Dave/Generated/src/UART001/UART001.c ****  POSSIBILITY OF SUCH DAMAGE.                                                  **
  28:../Dave/Generated/src/UART001/UART001.c ****                                                                               **
  29:../Dave/Generated/src/UART001/UART001.c ****  To improve the quality of the software, users are encouraged to share        **
  30:../Dave/Generated/src/UART001/UART001.c ****  modifications, enhancements or bug fixes with Infineon Technologies AG       **
  31:../Dave/Generated/src/UART001/UART001.c ****  dave@infineon.com).                                                          **
  32:../Dave/Generated/src/UART001/UART001.c ****                                                                               **
  33:../Dave/Generated/src/UART001/UART001.c **** ********************************************************************************
  34:../Dave/Generated/src/UART001/UART001.c **** **                                                                            **
  35:../Dave/Generated/src/UART001/UART001.c **** **                                                                            **
  36:../Dave/Generated/src/UART001/UART001.c **** ** PLATFORM : Infineon XMC4000/ XMC1000 Series                                **
  37:../Dave/Generated/src/UART001/UART001.c **** **                                                                            **
  38:../Dave/Generated/src/UART001/UART001.c **** ** COMPILER : Compiler Independent                                            **
  39:../Dave/Generated/src/UART001/UART001.c **** **                                                                            **
  40:../Dave/Generated/src/UART001/UART001.c **** ** AUTHOR   : App Developer                                                   **
  41:../Dave/Generated/src/UART001/UART001.c **** **                                                                            **
  42:../Dave/Generated/src/UART001/UART001.c **** ** MAY BE CHANGED BY USER [yes/no]: Yes                                       **
  43:../Dave/Generated/src/UART001/UART001.c **** **                                                                            **
  44:../Dave/Generated/src/UART001/UART001.c **** ** MODIFICATION DATE : Apr 11, 2014                                           **
  45:../Dave/Generated/src/UART001/UART001.c **** **                                                                            **
  46:../Dave/Generated/src/UART001/UART001.c **** ********************************************************************************
  47:../Dave/Generated/src/UART001/UART001.c **** ** VERSION HISTORY:
  48:../Dave/Generated/src/UART001/UART001.c **** ********************************************************************************
  49:../Dave/Generated/src/UART001/UART001.c **** ** 04 Dec 2012 v1.0.4  Changes from 1.0.2 are
  50:../Dave/Generated/src/UART001/UART001.c **** **                     1. Modified for baud calculation during initialisation.
  51:../Dave/Generated/src/UART001/UART001.c **** **                     2. Modified the macros FUNCTION_ENTRY, FUNCTION_EXIT and
  52:../Dave/Generated/src/UART001/UART001.c **** **                     ERROR
  53:../Dave/Generated/src/UART001/UART001.c **** **                     3. The hard coded values are replaced with macros in
  54:../Dave/Generated/src/UART001/UART001.c **** **                     UART001_lConfigureBaudRate() function.
  55:../Dave/Generated/src/UART001/UART001.c **** **                     4. The PCTQ value update in BRG register is removed as
  56:../Dave/Generated/src/UART001/UART001.c **** **                     the value is taken as zero.
  57:../Dave/Generated/src/UART001/UART001.c **** **                     5. Modified as per coding guidelines and MISRA checks
  58:../Dave/Generated/src/UART001/UART001.c **** ** 26 Mar 2013 v1.0.10 1. Updated for the baud calculation in UART001_lInit()
  59:../Dave/Generated/src/UART001/UART001.c **** **                     function.
  60:../Dave/Generated/src/UART001/UART001.c **** **                     2. Updated for the alignment in revision history.
  61:../Dave/Generated/src/UART001/UART001.c **** **                     3. Updated the UART001_Init() function for disabling the
  62:../Dave/Generated/src/UART001/UART001.c **** **                     clock gating signal for XMC1000 devices.
  63:../Dave/Generated/src/UART001/UART001.c **** **                     4. Updated function UART001_lConfigureBaudRate() for the
  64:../Dave/Generated/src/UART001/UART001.c **** **                     Baud rate calculation.
  65:../Dave/Generated/src/UART001/UART001.c **** ** 25 Jul 2013 v1.0.16 1. Removed TBIF bit configuration from UART001_lInit as 
  66:../Dave/Generated/src/UART001/UART001.c **** **                     polling is not used in the UART001 App. 
  67:../Dave/Generated/src/UART001/UART001.c **** **                     2. Added open-drain output configuration for Half duplex 
  68:../Dave/Generated/src/UART001/UART001.c **** **                     operation mode to allow the wired-AND connection in
  69:../Dave/Generated/src/UART001/UART001.c **** **                     multiple transmitter communication.
  70:../Dave/Generated/src/UART001/UART001.c **** **                     3. Added CCR.MODE configurations in UART001_lInit() 
  71:../Dave/Generated/src/UART001/UART001.c **** **                     & UART001_Configure to disable the UART mode before 
  72:../Dave/Generated/src/UART001/UART001.c **** **                     configuring USIC registers & to enable the UART mode 
  73:../Dave/Generated/src/UART001/UART001.c **** **                     after configurations to avoid unintended edges.
  74:../Dave/Generated/src/UART001/UART001.c **** **                     4. Modified the input parameter of 
  75:../Dave/Generated/src/UART001/UART001.c **** **                     UART001_WriteDataMultiple() from const uint16_t* to 
  76:../Dave/Generated/src/UART001/UART001.c **** **                     uint16_t* to maintain backward compatibility.
  77:../Dave/Generated/src/UART001/UART001.c **** **                     5. TX pin set logic high (1) before configuring Open 
  78:../Dave/Generated/src/UART001/UART001.c **** **                     Drain mode for Half Duplex operation mode. 
  79:../Dave/Generated/src/UART001/UART001.c **** ** 04 Feb 2014 V1.0.20 1. Added definitions for "UART001_ReadDataBytes" & 
  80:../Dave/Generated/src/UART001/UART001.c **** **                     "UART001_WriteDataBytes" new APIs.
  81:../Dave/Generated/src/UART001/UART001.c **** **                     2. Created "UART001_lConfigTXPin" local API to configure
  82:../Dave/Generated/src/UART001/UART001.c **** **                     Tx pin as Open-drain General-purpose output to allow 
  83:../Dave/Generated/src/UART001/UART001.c **** **                     wired anding connection in the Half Duplex mode.
  84:../Dave/Generated/src/UART001/UART001.c **** **                     3. Modified UART001_Init Api to handle the target device
  85:../Dave/Generated/src/UART001/UART001.c **** **                     based initialisations. 
  86:../Dave/Generated/src/UART001/UART001.c **** **                     4. Added TBIF configuration in the UART001_lInit Api if 
  87:../Dave/Generated/src/UART001/UART001.c **** **                     Transmit FIFO buffer is disabled.
  88:../Dave/Generated/src/UART001/UART001.c **** **                     5. Modified as per coding guidelines and MISRA 
  89:../Dave/Generated/src/UART001/UART001.c **** **                     compliance.
  90:../Dave/Generated/src/UART001/UART001.c **** **                     6. Removed DAVE3.h inclusion to fix the MISRA warning for
  91:../Dave/Generated/src/UART001/UART001.c **** **                     multiple includes. 
  92:../Dave/Generated/src/UART001/UART001.c **** **                     7. Error codes are added in various functions, that can 
  93:../Dave/Generated/src/UART001/UART001.c **** **                     be logged with DBG002 App.
  94:../Dave/Generated/src/UART001/UART001.c **** **                     8. Removed DBG002_FUNCTION_ENTRY & DBG002_FUNCTION_EXIT 
  95:../Dave/Generated/src/UART001/UART001.c **** **                     calling from APIs as using these macros is highly 
  96:../Dave/Generated/src/UART001/UART001.c **** **                     discouraged.
  97:../Dave/Generated/src/UART001/UART001.c **** **                     9. Added standard buffer functionality into the    
  98:../Dave/Generated/src/UART001/UART001.c **** **                     "UART001_ReadDataMultiple" & "UART001_WriteDataMultiple"
  99:../Dave/Generated/src/UART001/UART001.c **** **                     Apis. 
 100:../Dave/Generated/src/UART001/UART001.c **** ** 11 Apr 2014 v1.0.24 1. API (UART001_ReadDataMultiple, UART001_ReadDataBytes, 
 101:../Dave/Generated/src/UART001/UART001.c **** **                     UART001_WriteDataMultiple & UART001_WriteDataBytes) 
 102:../Dave/Generated/src/UART001/UART001.c **** **                     document corrections.                                                       
 103:../Dave/Generated/src/UART001/UART001.c **** *******************************************************************************/
 104:../Dave/Generated/src/UART001/UART001.c **** /**
 105:../Dave/Generated/src/UART001/UART001.c ****  * @file UART001.c
 106:../Dave/Generated/src/UART001/UART001.c ****  * 
 107:../Dave/Generated/src/UART001/UART001.c ****  * @brief  UART001 App provides non reentrant APIs for higher level Apps 
 108:../Dave/Generated/src/UART001/UART001.c ****  *          which can be used in a Non -RTOS environment. 
 109:../Dave/Generated/src/UART001/UART001.c ****  *           Limitations of Simple UART App
 110:../Dave/Generated/src/UART001/UART001.c ****  *           a) Read/Write functions are non reentrant.
 111:../Dave/Generated/src/UART001/UART001.c ****  *           b) No support for DMA mode
 112:../Dave/Generated/src/UART001/UART001.c ****  *           
 113:../Dave/Generated/src/UART001/UART001.c ****  */
 114:../Dave/Generated/src/UART001/UART001.c **** 
 115:../Dave/Generated/src/UART001/UART001.c **** /**
 116:../Dave/Generated/src/UART001/UART001.c ****  * @cond INTERNAL_DOCS
 117:../Dave/Generated/src/UART001/UART001.c ****  */
 118:../Dave/Generated/src/UART001/UART001.c **** 
 119:../Dave/Generated/src/UART001/UART001.c **** /*******************************************************************************
 120:../Dave/Generated/src/UART001/UART001.c ****  ** INCLUDE FILES                                                             **
 121:../Dave/Generated/src/UART001/UART001.c ****  ******************************************************************************/
 122:../Dave/Generated/src/UART001/UART001.c **** #ifndef UART001_H_
 123:../Dave/Generated/src/UART001/UART001.c **** #include "../../inc/UART001/UART001.h"
 124:../Dave/Generated/src/UART001/UART001.c **** #endif
 125:../Dave/Generated/src/UART001/UART001.c **** #if ((__TARGET_DEVICE__ == XMC45) || (__TARGET_DEVICE__ == XMC44) || \
 126:../Dave/Generated/src/UART001/UART001.c ****      (__TARGET_DEVICE__ == XMC42) || (__TARGET_DEVICE__ == XMC41)) 
 127:../Dave/Generated/src/UART001/UART001.c **** 	#include "../../inc/RESET001/RESET001.h"
 128:../Dave/Generated/src/UART001/UART001.c **** #else
 129:../Dave/Generated/src/UART001/UART001.c **** #ifndef CLK002_H_
 130:../Dave/Generated/src/UART001/UART001.c **** #include "../../inc/CLK002/CLK002.h"
 131:../Dave/Generated/src/UART001/UART001.c **** #endif
 132:../Dave/Generated/src/UART001/UART001.c **** #endif
 133:../Dave/Generated/src/UART001/UART001.c **** #ifdef _DBG002_H_
 134:../Dave/Generated/src/UART001/UART001.c **** #include "../../inc/DBG002/DBG002.h"
 135:../Dave/Generated/src/UART001/UART001.c **** #endif
 136:../Dave/Generated/src/UART001/UART001.c **** /*******************************************************************************
 137:../Dave/Generated/src/UART001/UART001.c ****               DUMMY DEFINITIONS OF DEBUG LOG MACROS
 138:../Dave/Generated/src/UART001/UART001.c **** *******************************************************************************/
 139:../Dave/Generated/src/UART001/UART001.c **** /*These definitions are included here to avoid compilation errors,
 140:../Dave/Generated/src/UART001/UART001.c ****  since the DBG002 app is not part of the project. All the macros are defined
 141:../Dave/Generated/src/UART001/UART001.c ****  as empty*/ 
 142:../Dave/Generated/src/UART001/UART001.c **** #ifndef _DBG002_H_
 143:../Dave/Generated/src/UART001/UART001.c **** 
 144:../Dave/Generated/src/UART001/UART001.c **** #define DBG002_MESSAGEID_LITERAL
 145:../Dave/Generated/src/UART001/UART001.c **** #define DBG002_ERROR(groupid,messageid,length,value)
 146:../Dave/Generated/src/UART001/UART001.c **** 
 147:../Dave/Generated/src/UART001/UART001.c **** #endif/* End of definitions of dummy Debug Log macros*/
 148:../Dave/Generated/src/UART001/UART001.c **** 
 149:../Dave/Generated/src/UART001/UART001.c **** /*******************************************************************************
 150:../Dave/Generated/src/UART001/UART001.c **** **                      Private Macro Definitions                             **
 151:../Dave/Generated/src/UART001/UART001.c **** *******************************************************************************/
 152:../Dave/Generated/src/UART001/UART001.c **** #define APP_GID DBG002_GID_UART001
 153:../Dave/Generated/src/UART001/UART001.c **** /*Flag Offset Transmit Receive Buffer */
 154:../Dave/Generated/src/UART001/UART001.c **** #define UART001_FLAG_OFFSET                        0x05U
 155:../Dave/Generated/src/UART001/UART001.c **** #define UART001_MAX_VALUE                          1024U
 156:../Dave/Generated/src/UART001/UART001.c **** /* (DCTQ + 1) DCTQ value is 9 */
 157:../Dave/Generated/src/UART001/UART001.c **** #define UART001_DCTQ_VALUE                         0x0AUL
 158:../Dave/Generated/src/UART001/UART001.c **** #define UART001_OPENDRAIN_OUT      				   0x18U
 159:../Dave/Generated/src/UART001/UART001.c **** 
 160:../Dave/Generated/src/UART001/UART001.c **** #define FIRST_NIBBLE                               4U
 161:../Dave/Generated/src/UART001/UART001.c **** #define SECOND_NIBBLE                              8U
 162:../Dave/Generated/src/UART001/UART001.c **** #define THIRD_NIBBLE                               12U
 163:../Dave/Generated/src/UART001/UART001.c **** #define FOURTH_NIBBLE                              16U
 164:../Dave/Generated/src/UART001/UART001.c **** #define SHIFT_ONE								   0x01U
 165:../Dave/Generated/src/UART001/UART001.c **** #define SHIFT_TWO								   0x02U
 166:../Dave/Generated/src/UART001/UART001.c **** #define MASK_ONE								   0x01U
 167:../Dave/Generated/src/UART001/UART001.c **** 
 168:../Dave/Generated/src/UART001/UART001.c **** 
 169:../Dave/Generated/src/UART001/UART001.c **** /*******************************************************************************
 170:../Dave/Generated/src/UART001/UART001.c **** **                      Private Type Definitions                              **
 171:../Dave/Generated/src/UART001/UART001.c **** *******************************************************************************/
 172:../Dave/Generated/src/UART001/UART001.c **** 
 173:../Dave/Generated/src/UART001/UART001.c **** 
 174:../Dave/Generated/src/UART001/UART001.c **** /*******************************************************************************
 175:../Dave/Generated/src/UART001/UART001.c **** **                 Private Function Declarations:
 176:../Dave/Generated/src/UART001/UART001.c **** *******************************************************************************/
 177:../Dave/Generated/src/UART001/UART001.c **** 
 178:../Dave/Generated/src/UART001/UART001.c **** /* Initialises the App based on User provide configuration. */
 179:../Dave/Generated/src/UART001/UART001.c **** void UART001_lInit (const UART001_HandleType* Handle);
 180:../Dave/Generated/src/UART001/UART001.c **** /* Configures TX pin as Open-drain with General-purpose output */
 181:../Dave/Generated/src/UART001/UART001.c **** void UART001_lConfigTXPin(const UART001_HandleType* Handle);
 182:../Dave/Generated/src/UART001/UART001.c **** /* Give optimised PDIV and STEP value for the given baud rate */ 
 183:../Dave/Generated/src/UART001/UART001.c **** void UART001_lConfigureBaudRate\
 184:../Dave/Generated/src/UART001/UART001.c ****                            (uint32_t BaudRate,uint32_t* Pdiv,uint32_t* Step);
 185:../Dave/Generated/src/UART001/UART001.c **** /* to find the real type */
 186:../Dave/Generated/src/UART001/UART001.c **** float UART001_labsRealType(float Number);                           
 187:../Dave/Generated/src/UART001/UART001.c **** /*******************************************************************************
 188:../Dave/Generated/src/UART001/UART001.c **** **                      Global Constant Definitions                           **
 189:../Dave/Generated/src/UART001/UART001.c **** *******************************************************************************/
 190:../Dave/Generated/src/UART001/UART001.c **** 
 191:../Dave/Generated/src/UART001/UART001.c **** /*******************************************************************************
 192:../Dave/Generated/src/UART001/UART001.c **** **                      Global Variable Definitions                           **
 193:../Dave/Generated/src/UART001/UART001.c **** *******************************************************************************/
 194:../Dave/Generated/src/UART001/UART001.c **** 
 195:../Dave/Generated/src/UART001/UART001.c **** /*******************************************************************************
 196:../Dave/Generated/src/UART001/UART001.c **** **                      Private Constant Definitions                          **
 197:../Dave/Generated/src/UART001/UART001.c **** *******************************************************************************/
 198:../Dave/Generated/src/UART001/UART001.c **** 
 199:../Dave/Generated/src/UART001/UART001.c **** /*******************************************************************************
 200:../Dave/Generated/src/UART001/UART001.c **** **                 Function like macro definitions                            **
 201:../Dave/Generated/src/UART001/UART001.c **** *******************************************************************************/
 202:../Dave/Generated/src/UART001/UART001.c **** 
 203:../Dave/Generated/src/UART001/UART001.c **** /*******************************************************************************
 204:../Dave/Generated/src/UART001/UART001.c **** **                      Private Function Definitions                          **
 205:../Dave/Generated/src/UART001/UART001.c **** *******************************************************************************/
 206:../Dave/Generated/src/UART001/UART001.c **** /*******************************************************************************
 207:../Dave/Generated/src/UART001/UART001.c ****  * @brief This function initialises the USIC Channel with GUI configured values.
 208:../Dave/Generated/src/UART001/UART001.c ****  *
 209:../Dave/Generated/src/UART001/UART001.c ****  * @param[in]  Handle of type UART001_HandleType
 210:../Dave/Generated/src/UART001/UART001.c ****  *
 211:../Dave/Generated/src/UART001/UART001.c ****  * @return  None <BR>
 212:../Dave/Generated/src/UART001/UART001.c ****  *
 213:../Dave/Generated/src/UART001/UART001.c ****  * <b>Reentrant: No </b><BR>
 214:../Dave/Generated/src/UART001/UART001.c ****  ******************************************************************************/ 
 215:../Dave/Generated/src/UART001/UART001.c **** void UART001_lInit (const UART001_HandleType* Handle)
 216:../Dave/Generated/src/UART001/UART001.c **** {
  26              		.loc 1 216 0
  27              		.cfi_startproc
  28 0000 80B5     		push	{r7, lr}
  29              	.LCFI0:
  30              		.cfi_def_cfa_offset 8
  31              		.cfi_offset 7, -8
  32              		.cfi_offset 14, -4
  33 0002 84B0     		sub	sp, sp, #16
  34              	.LCFI1:
  35              		.cfi_def_cfa_offset 24
  36 0004 00AF     		add	r7, sp, #0
  37              	.LCFI2:
  38              		.cfi_def_cfa_register 7
  39 0006 7860     		str	r0, [r7, #4]
 217:../Dave/Generated/src/UART001/UART001.c ****   USIC_CH_TypeDef* UartRegs = Handle->UartRegs;
  40              		.loc 1 217 0
  41 0008 7B68     		ldr	r3, [r7, #4]
  42 000a 1B68     		ldr	r3, [r3]
  43 000c FB60     		str	r3, [r7, #12]
 218:../Dave/Generated/src/UART001/UART001.c ****   
 219:../Dave/Generated/src/UART001/UART001.c ****  /* <<<DD_UART001_API_1>>>*/
 220:../Dave/Generated/src/UART001/UART001.c ****  
 221:../Dave/Generated/src/UART001/UART001.c ****   /** UART initialisation  */
 222:../Dave/Generated/src/UART001/UART001.c **** 
 223:../Dave/Generated/src/UART001/UART001.c ****   /* Disable UART mode before configuring all USIC registers to avoid 
 224:../Dave/Generated/src/UART001/UART001.c ****    * unintended edges */ 
 225:../Dave/Generated/src/UART001/UART001.c ****   UartRegs->CCR &= ~( ((uint32_t)(UART_MODE  & USIC_CH_CCR_MODE_Msk))); 
  44              		.loc 1 225 0
  45 000e FB68     		ldr	r3, [r7, #12]
  46 0010 1B6C     		ldr	r3, [r3, #64]
  47 0012 0222     		mov	r2, #2
  48 0014 191C     		mov	r1, r3
  49 0016 9143     		bic	r1, r2
  50 0018 0A1C     		mov	r2, r1
  51 001a FB68     		ldr	r3, [r7, #12]
  52 001c 1A64     		str	r2, [r3, #64]
 226:../Dave/Generated/src/UART001/UART001.c **** 
 227:../Dave/Generated/src/UART001/UART001.c ****   /* Enable the USIC Channel */
 228:../Dave/Generated/src/UART001/UART001.c ****   UartRegs->KSCFG |= ((((uint32_t)MASK_ONE  & USIC_CH_KSCFG_MODEN_Msk)) | \
  53              		.loc 1 228 0
  54 001e FB68     		ldr	r3, [r7, #12]
  55 0020 DB68     		ldr	r3, [r3, #12]
  56 0022 0322     		mov	r2, #3
  57 0024 1A43     		orr	r2, r3
  58 0026 FB68     		ldr	r3, [r7, #12]
  59 0028 DA60     		str	r2, [r3, #12]
 229:../Dave/Generated/src/UART001/UART001.c ****                        (((uint32_t)SHIFT_ONE << USIC_CH_KSCFG_BPMODEN_Pos) &  \
 230:../Dave/Generated/src/UART001/UART001.c ****                          USIC_CH_KSCFG_BPMODEN_Msk)); 
 231:../Dave/Generated/src/UART001/UART001.c ****    
 232:../Dave/Generated/src/UART001/UART001.c ****   /* Configuration of USIC Channel Fractional Divider */
 233:../Dave/Generated/src/UART001/UART001.c **** 
 234:../Dave/Generated/src/UART001/UART001.c ****   /* Fractional divider mode selected */
 235:../Dave/Generated/src/UART001/UART001.c ****   UartRegs->FDR |= (((uint32_t)SHIFT_TWO << USIC_CH_FDR_DM_Pos) \
  60              		.loc 1 235 0
  61 002a FB68     		ldr	r3, [r7, #12]
  62 002c 1B69     		ldr	r3, [r3, #16]
  63 002e 8022     		mov	r2, #128
  64 0030 1202     		lsl	r2, r2, #8
  65 0032 1A43     		orr	r2, r3
  66 0034 FB68     		ldr	r3, [r7, #12]
  67 0036 1A61     		str	r2, [r3, #16]
 236:../Dave/Generated/src/UART001/UART001.c ****                                                      & USIC_CH_FDR_DM_Msk);
 237:../Dave/Generated/src/UART001/UART001.c ****   
 238:../Dave/Generated/src/UART001/UART001.c ****   /* Step value */
 239:../Dave/Generated/src/UART001/UART001.c ****   UartRegs->FDR |= ((Handle->BGR_STEP) & USIC_CH_FDR_STEP_Msk);
  68              		.loc 1 239 0
  69 0038 FB68     		ldr	r3, [r7, #12]
  70 003a 1A69     		ldr	r2, [r3, #16]
  71 003c 7B68     		ldr	r3, [r7, #4]
  72 003e 1B8D     		ldrh	r3, [r3, #40]
  73 0040 9B05     		lsl	r3, r3, #22
  74 0042 9B0D     		lsr	r3, r3, #22
  75 0044 1A43     		orr	r2, r3
  76 0046 FB68     		ldr	r3, [r7, #12]
  77 0048 1A61     		str	r2, [r3, #16]
 240:../Dave/Generated/src/UART001/UART001.c ****           
 241:../Dave/Generated/src/UART001/UART001.c ****   /* The PreDivider for CTQ, PCTQ = 0  */
 242:../Dave/Generated/src/UART001/UART001.c ****   /* The Denominator for CTQ, DCTQ = 16 */
 243:../Dave/Generated/src/UART001/UART001.c ****     
 244:../Dave/Generated/src/UART001/UART001.c ****   UartRegs->BRG |= \
  78              		.loc 1 244 0
  79 004a FB68     		ldr	r3, [r7, #12]
  80 004c 5A69     		ldr	r2, [r3, #20]
 245:../Dave/Generated/src/UART001/UART001.c **** 	  ((((uint32_t)(Handle->BGR_PCTQ) << USIC_CH_BRG_PCTQ_Pos) & \
  81              		.loc 1 245 0
  82 004e 7968     		ldr	r1, [r7, #4]
  83 0050 3023     		mov	r3, #48
  84 0052 CB5C     		ldrb	r3, [r1, r3]
  85 0054 1902     		lsl	r1, r3, #8
  86 0056 C023     		mov	r3, #192
  87 0058 9B00     		lsl	r3, r3, #2
  88 005a 1940     		and	r1, r3
 246:../Dave/Generated/src/UART001/UART001.c **** 		  	     USIC_CH_BRG_PCTQ_Msk) | \
 247:../Dave/Generated/src/UART001/UART001.c ****       (((uint32_t)(Handle->BGR_DCTQ) << USIC_CH_BRG_DCTQ_Pos) & \
  89              		.loc 1 247 0
  90 005c 7B68     		ldr	r3, [r7, #4]
  91 005e 9B8D     		ldrh	r3, [r3, #44]
  92 0060 9802     		lsl	r0, r3, #10
  93 0062 F823     		mov	r3, #248
  94 0064 DB01     		lsl	r3, r3, #7
  95 0066 0340     		and	r3, r0
 246:../Dave/Generated/src/UART001/UART001.c **** 		  	     USIC_CH_BRG_PCTQ_Msk) | \
  96              		.loc 1 246 0
  97 0068 1943     		orr	r1, r3
 248:../Dave/Generated/src/UART001/UART001.c **** 	     USIC_CH_BRG_DCTQ_Msk) | \
 249:../Dave/Generated/src/UART001/UART001.c ****       (((uint32_t)(Handle->BGR_PDIV) << USIC_CH_BRG_PDIV_Pos) &  \
  98              		.loc 1 249 0
  99 006a 7B68     		ldr	r3, [r7, #4]
 100 006c 5B8D     		ldrh	r3, [r3, #42]
 101 006e 1804     		lsl	r0, r3, #16
 102 0070 4F4B     		ldr	r3, .L8
 103 0072 0340     		and	r3, r0
 248:../Dave/Generated/src/UART001/UART001.c **** 	     USIC_CH_BRG_DCTQ_Msk) | \
 104              		.loc 1 248 0
 105 0074 0B43     		orr	r3, r1
 244:../Dave/Generated/src/UART001/UART001.c ****   UartRegs->BRG |= \
 106              		.loc 1 244 0
 107 0076 1A43     		orr	r2, r3
 108 0078 FB68     		ldr	r3, [r7, #12]
 109 007a 5A61     		str	r2, [r3, #20]
 250:../Dave/Generated/src/UART001/UART001.c **** 	     USIC_CH_BRG_PDIV_Msk));
 251:../Dave/Generated/src/UART001/UART001.c ****  
 252:../Dave/Generated/src/UART001/UART001.c ****   /* Configuration of USIC Shift Control */
 253:../Dave/Generated/src/UART001/UART001.c ****   
 254:../Dave/Generated/src/UART001/UART001.c ****   /* Transmit/Receive LSB first is selected  */
 255:../Dave/Generated/src/UART001/UART001.c ****   /* Transmission Mode (TRM) = 1  */
 256:../Dave/Generated/src/UART001/UART001.c ****   /* Passive Data Level (PDL) = 1 */
 257:../Dave/Generated/src/UART001/UART001.c ****   UartRegs->SCTR |= ((((uint32_t)SHIFT_ONE  << USIC_CH_SCTR_PDL_Pos) & \
 110              		.loc 1 257 0
 111 007c FB68     		ldr	r3, [r7, #12]
 112 007e 5B6B     		ldr	r3, [r3, #52]
 113 0080 8122     		mov	r2, #129
 114 0082 5200     		lsl	r2, r2, #1
 115 0084 1A43     		orr	r2, r3
 116 0086 FB68     		ldr	r3, [r7, #12]
 117 0088 5A63     		str	r2, [r3, #52]
 258:../Dave/Generated/src/UART001/UART001.c ****     USIC_CH_SCTR_PDL_Msk ) | \
 259:../Dave/Generated/src/UART001/UART001.c ****     (((uint32_t)SHIFT_ONE  <<  USIC_CH_SCTR_TRM_Pos ) & USIC_CH_SCTR_TRM_Msk ));
 260:../Dave/Generated/src/UART001/UART001.c ****   /* Set Word Length (WLE) & Frame Length (FLE) */
 261:../Dave/Generated/src/UART001/UART001.c ****   UartRegs->SCTR |= ((((uint32_t)Handle->DataBits  << USIC_CH_SCTR_FLE_Pos) & \
 118              		.loc 1 261 0
 119 008a FB68     		ldr	r3, [r7, #12]
 120 008c 5A6B     		ldr	r2, [r3, #52]
 121 008e 7B68     		ldr	r3, [r7, #4]
 122 0090 9B8B     		ldrh	r3, [r3, #28]
 123 0092 1904     		lsl	r1, r3, #16
 124 0094 FC23     		mov	r3, #252
 125 0096 9B03     		lsl	r3, r3, #14
 126 0098 1940     		and	r1, r3
 262:../Dave/Generated/src/UART001/UART001.c ****                       USIC_CH_SCTR_FLE_Msk ) | \
 263:../Dave/Generated/src/UART001/UART001.c ****                      (((uint32_t)Handle->DataBits  << USIC_CH_SCTR_WLE_Pos) & \
 127              		.loc 1 263 0
 128 009a 7B68     		ldr	r3, [r7, #4]
 129 009c 9B8B     		ldrh	r3, [r3, #28]
 130 009e 1806     		lsl	r0, r3, #24
 131 00a0 F023     		mov	r3, #240
 132 00a2 1B05     		lsl	r3, r3, #20
 133 00a4 0340     		and	r3, r0
 262:../Dave/Generated/src/UART001/UART001.c ****                       USIC_CH_SCTR_FLE_Msk ) | \
 134              		.loc 1 262 0
 135 00a6 0B43     		orr	r3, r1
 261:../Dave/Generated/src/UART001/UART001.c ****   UartRegs->SCTR |= ((((uint32_t)Handle->DataBits  << USIC_CH_SCTR_FLE_Pos) & \
 136              		.loc 1 261 0
 137 00a8 1A43     		orr	r2, r3
 138 00aa FB68     		ldr	r3, [r7, #12]
 139 00ac 5A63     		str	r2, [r3, #52]
 264:../Dave/Generated/src/UART001/UART001.c ****                         USIC_CH_SCTR_WLE_Msk));
 265:../Dave/Generated/src/UART001/UART001.c **** 
 266:../Dave/Generated/src/UART001/UART001.c ****        
 267:../Dave/Generated/src/UART001/UART001.c ****   /* Configuration of USIC Transmit Control/Status Register */ 
 268:../Dave/Generated/src/UART001/UART001.c ****   /* TBUF Data Enable (TDEN) = 1 */
 269:../Dave/Generated/src/UART001/UART001.c ****   /* TBUF Data Single Shot Mode (TDSSM) = 1 */
 270:../Dave/Generated/src/UART001/UART001.c **** 	
 271:../Dave/Generated/src/UART001/UART001.c ****   UartRegs->TCSR |= ((((uint32_t)SHIFT_ONE  << USIC_CH_TCSR_TDEN_Pos) & \
 140              		.loc 1 271 0
 141 00ae FB68     		ldr	r3, [r7, #12]
 142 00b0 9B6B     		ldr	r3, [r3, #56]
 143 00b2 A022     		mov	r2, #160
 144 00b4 D200     		lsl	r2, r2, #3
 145 00b6 1A43     		orr	r2, r3
 146 00b8 FB68     		ldr	r3, [r7, #12]
 147 00ba 9A63     		str	r2, [r3, #56]
 272:../Dave/Generated/src/UART001/UART001.c ****     USIC_CH_TCSR_TDEN_Msk ) | \
 273:../Dave/Generated/src/UART001/UART001.c ****     (((uint32_t)0x01  << USIC_CH_TCSR_TDSSM_Pos) & USIC_CH_TCSR_TDSSM_Msk));
 274:../Dave/Generated/src/UART001/UART001.c **** 
 275:../Dave/Generated/src/UART001/UART001.c ****   /* Configuration of Protocol Control Register */ 
 276:../Dave/Generated/src/UART001/UART001.c ****   /* Sample Mode (SMD) = 1 */
 277:../Dave/Generated/src/UART001/UART001.c ****   /* 1 Stop bit is selected */   
 278:../Dave/Generated/src/UART001/UART001.c ****   /* Sample Point (SP) as configured */
 279:../Dave/Generated/src/UART001/UART001.c ****   /* Pulse Length (PL) = 0 */
 280:../Dave/Generated/src/UART001/UART001.c ****   
 281:../Dave/Generated/src/UART001/UART001.c ****   UartRegs->PCR_ASCMode |= ((((uint32_t)MASK_ONE & USIC_CH_PCR_ASCMode_SMD_Msk)) |\
 148              		.loc 1 281 0
 149 00bc FB68     		ldr	r3, [r7, #12]
 150 00be DA6B     		ldr	r2, [r3, #60]
 282:../Dave/Generated/src/UART001/UART001.c ****     (((uint32_t)Handle->StopBit  << USIC_CH_PCR_ASCMode_STPB_Pos) & \
 151              		.loc 1 282 0
 152 00c0 7B68     		ldr	r3, [r7, #4]
 153 00c2 5B7D     		ldrb	r3, [r3, #21]
 154 00c4 5900     		lsl	r1, r3, #1
 155 00c6 0223     		mov	r3, #2
 156 00c8 1940     		and	r1, r3
 283:../Dave/Generated/src/UART001/UART001.c ****     USIC_CH_PCR_ASCMode_STPB_Msk) | \
 284:../Dave/Generated/src/UART001/UART001.c ****     (((uint32_t)(Handle->BGR_SP) << USIC_CH_PCR_ASCMode_SP_Pos) & \
 157              		.loc 1 284 0
 158 00ca 7B68     		ldr	r3, [r7, #4]
 159 00cc DB8D     		ldrh	r3, [r3, #46]
 160 00ce 1802     		lsl	r0, r3, #8
 161 00d0 F823     		mov	r3, #248
 162 00d2 5B01     		lsl	r3, r3, #5
 163 00d4 0340     		and	r3, r0
 283:../Dave/Generated/src/UART001/UART001.c ****     USIC_CH_PCR_ASCMode_STPB_Msk) | \
 164              		.loc 1 283 0
 165 00d6 0B43     		orr	r3, r1
 281:../Dave/Generated/src/UART001/UART001.c ****   UartRegs->PCR_ASCMode |= ((((uint32_t)MASK_ONE & USIC_CH_PCR_ASCMode_SMD_Msk)) |\
 166              		.loc 1 281 0
 167 00d8 1343     		orr	r3, r2
 168 00da 0122     		mov	r2, #1
 169 00dc 1A43     		orr	r2, r3
 170 00de FB68     		ldr	r3, [r7, #12]
 171 00e0 DA63     		str	r2, [r3, #60]
 285:../Dave/Generated/src/UART001/UART001.c ****     USIC_CH_PCR_ASCMode_SP_Msk));
 286:../Dave/Generated/src/UART001/UART001.c ****       
 287:../Dave/Generated/src/UART001/UART001.c ****   if(Handle->RecvNoiseEn)
 172              		.loc 1 287 0
 173 00e2 7A68     		ldr	r2, [r7, #4]
 174 00e4 2423     		mov	r3, #36
 175 00e6 D35C     		ldrb	r3, [r2, r3]
 176 00e8 002B     		cmp	r3, #0
 177 00ea 05D0     		beq	.L2
 288:../Dave/Generated/src/UART001/UART001.c ****   {
 289:../Dave/Generated/src/UART001/UART001.c ****    	/* Enable Receiver Noise Interrupt*/  
 290:../Dave/Generated/src/UART001/UART001.c ****     UartRegs->PCR_ASCMode |=(((uint32_t)SHIFT_ONE  << USIC_CH_PCR_CTR5_Pos) & \
 178              		.loc 1 290 0
 179 00ec FB68     		ldr	r3, [r7, #12]
 180 00ee DB6B     		ldr	r3, [r3, #60]
 181 00f0 2022     		mov	r2, #32
 182 00f2 1A43     		orr	r2, r3
 183 00f4 FB68     		ldr	r3, [r7, #12]
 184 00f6 DA63     		str	r2, [r3, #60]
 185              	.L2:
 291:../Dave/Generated/src/UART001/UART001.c **** 		  	  	  	  	  USIC_CH_PCR_CTR5_Msk); 
 292:../Dave/Generated/src/UART001/UART001.c ****   }
 293:../Dave/Generated/src/UART001/UART001.c ****   
 294:../Dave/Generated/src/UART001/UART001.c ****   if(Handle->FormatErrEn)
 186              		.loc 1 294 0
 187 00f8 7A68     		ldr	r2, [r7, #4]
 188 00fa 2523     		mov	r3, #37
 189 00fc D35C     		ldrb	r3, [r2, r3]
 190 00fe 002B     		cmp	r3, #0
 191 0100 05D0     		beq	.L3
 295:../Dave/Generated/src/UART001/UART001.c ****   {
 296:../Dave/Generated/src/UART001/UART001.c ****    	/* Enable Format Error Interrupt*/  
 297:../Dave/Generated/src/UART001/UART001.c ****     UartRegs->PCR_ASCMode |=(((uint32_t)SHIFT_ONE  << USIC_CH_PCR_CTR6_Pos) & \
 192              		.loc 1 297 0
 193 0102 FB68     		ldr	r3, [r7, #12]
 194 0104 DB6B     		ldr	r3, [r3, #60]
 195 0106 4022     		mov	r2, #64
 196 0108 1A43     		orr	r2, r3
 197 010a FB68     		ldr	r3, [r7, #12]
 198 010c DA63     		str	r2, [r3, #60]
 199              	.L3:
 298:../Dave/Generated/src/UART001/UART001.c **** 		  	  	  	  	                             USIC_CH_PCR_CTR6_Msk); 
 299:../Dave/Generated/src/UART001/UART001.c ****   }
 300:../Dave/Generated/src/UART001/UART001.c ****   
 301:../Dave/Generated/src/UART001/UART001.c ****   if(Handle->FrameFinEn)
 200              		.loc 1 301 0
 201 010e 7A68     		ldr	r2, [r7, #4]
 202 0110 2623     		mov	r3, #38
 203 0112 D35C     		ldrb	r3, [r2, r3]
 204 0114 002B     		cmp	r3, #0
 205 0116 05D0     		beq	.L4
 302:../Dave/Generated/src/UART001/UART001.c ****   {
 303:../Dave/Generated/src/UART001/UART001.c ****    	/* Enable Frame Finished Interrupt*/  
 304:../Dave/Generated/src/UART001/UART001.c ****     UartRegs->PCR_ASCMode |=(((uint32_t)SHIFT_ONE  << USIC_CH_PCR_CTR7_Pos) & \
 206              		.loc 1 304 0
 207 0118 FB68     		ldr	r3, [r7, #12]
 208 011a DB6B     		ldr	r3, [r3, #60]
 209 011c 8022     		mov	r2, #128
 210 011e 1A43     		orr	r2, r3
 211 0120 FB68     		ldr	r3, [r7, #12]
 212 0122 DA63     		str	r2, [r3, #60]
 213              	.L4:
 305:../Dave/Generated/src/UART001/UART001.c **** 		  	                                   	  	 USIC_CH_PCR_CTR7_Msk); 
 306:../Dave/Generated/src/UART001/UART001.c ****   } 
 307:../Dave/Generated/src/UART001/UART001.c ****   
 308:../Dave/Generated/src/UART001/UART001.c ****   if (Handle->TxFifoEn)
 214              		.loc 1 308 0
 215 0124 7B68     		ldr	r3, [r7, #4]
 216 0126 9B7F     		ldrb	r3, [r3, #30]
 217 0128 002B     		cmp	r3, #0
 218 012a 11D0     		beq	.L5
 309:../Dave/Generated/src/UART001/UART001.c ****   {	
 310:../Dave/Generated/src/UART001/UART001.c **** 	  /* Configuration of Transmitter Buffer Control Register */ 
 311:../Dave/Generated/src/UART001/UART001.c **** 	  UartRegs->TBCTR |= ((((uint32_t)Handle->TxLimit  << \
 219              		.loc 1 311 0
 220 012c FA68     		ldr	r2, [r7, #12]
 221 012e 8423     		mov	r3, #132
 222 0130 5B00     		lsl	r3, r3, #1
 223 0132 D258     		ldr	r2, [r2, r3]
 224 0134 7968     		ldr	r1, [r7, #4]
 225 0136 2023     		mov	r3, #32
 226 0138 CB5C     		ldrb	r3, [r1, r3]
 227 013a 1902     		lsl	r1, r3, #8
 312:../Dave/Generated/src/UART001/UART001.c **** 						USIC_CH_TBCTR_LIMIT_Pos ) & USIC_CH_TBCTR_LIMIT_Msk));
 228              		.loc 1 312 0
 229 013c FC23     		mov	r3, #252
 230 013e 9B01     		lsl	r3, r3, #6
 231 0140 0B40     		and	r3, r1
 311:../Dave/Generated/src/UART001/UART001.c **** 	  UartRegs->TBCTR |= ((((uint32_t)Handle->TxLimit  << \
 232              		.loc 1 311 0
 233 0142 111C     		mov	r1, r2
 234 0144 1943     		orr	r1, r3
 235 0146 FA68     		ldr	r2, [r7, #12]
 236 0148 8423     		mov	r3, #132
 237 014a 5B00     		lsl	r3, r3, #1
 238 014c D150     		str	r1, [r2, r3]
 239 014e 06E0     		b	.L6
 240              	.L5:
 313:../Dave/Generated/src/UART001/UART001.c ****   }
 314:../Dave/Generated/src/UART001/UART001.c ****   else
 315:../Dave/Generated/src/UART001/UART001.c ****   {
 316:../Dave/Generated/src/UART001/UART001.c **** 	  /* TBIF is set to simplify polling*/
 317:../Dave/Generated/src/UART001/UART001.c **** 	  UartRegs->PSR_ASCMode |= (((uint32_t)SHIFT_ONE  << USIC_CH_PSR_TBIF_Pos) & \
 241              		.loc 1 317 0
 242 0150 FB68     		ldr	r3, [r7, #12]
 243 0152 9B6C     		ldr	r3, [r3, #72]
 244 0154 8022     		mov	r2, #128
 245 0156 9201     		lsl	r2, r2, #6
 246 0158 1A43     		orr	r2, r3
 247 015a FB68     		ldr	r3, [r7, #12]
 248 015c 9A64     		str	r2, [r3, #72]
 249              	.L6:
 318:../Dave/Generated/src/UART001/UART001.c **** 	 		  (uint32_t)USIC_CH_PSR_TBIF_Msk);
 319:../Dave/Generated/src/UART001/UART001.c ****   }
 320:../Dave/Generated/src/UART001/UART001.c ****   
 321:../Dave/Generated/src/UART001/UART001.c ****   if (Handle->RxFifoEn)
 250              		.loc 1 321 0
 251 015e 7B68     		ldr	r3, [r7, #4]
 252 0160 DB7F     		ldrb	r3, [r3, #31]
 253 0162 002B     		cmp	r3, #0
 254 0164 13D0     		beq	.L7
 322:../Dave/Generated/src/UART001/UART001.c ****   {
 323:../Dave/Generated/src/UART001/UART001.c **** 	  /* Configuration of Receiver Buffer Control Register */ 
 324:../Dave/Generated/src/UART001/UART001.c **** 	  UartRegs->RBCTR |= ((((uint32_t)Handle->RxLimit  << \
 255              		.loc 1 324 0
 256 0166 FA68     		ldr	r2, [r7, #12]
 257 0168 8623     		mov	r3, #134
 258 016a 5B00     		lsl	r3, r3, #1
 259 016c D258     		ldr	r2, [r2, r3]
 260 016e 7968     		ldr	r1, [r7, #4]
 261 0170 2123     		mov	r3, #33
 262 0172 CB5C     		ldrb	r3, [r1, r3]
 263 0174 1902     		lsl	r1, r3, #8
 325:../Dave/Generated/src/UART001/UART001.c **** 						   USIC_CH_RBCTR_LIMIT_Pos) & USIC_CH_RBCTR_LIMIT_Msk) | \
 264              		.loc 1 325 0
 265 0176 FC23     		mov	r3, #252
 266 0178 9B01     		lsl	r3, r3, #6
 267 017a 0B40     		and	r3, r1
 324:../Dave/Generated/src/UART001/UART001.c **** 	  UartRegs->RBCTR |= ((((uint32_t)Handle->RxLimit  << \
 268              		.loc 1 324 0
 269 017c 1343     		orr	r3, r2
 270 017e 8022     		mov	r2, #128
 271 0180 5205     		lsl	r2, r2, #21
 272 0182 111C     		mov	r1, r2
 273 0184 1943     		orr	r1, r3
 274 0186 FA68     		ldr	r2, [r7, #12]
 275 0188 8623     		mov	r3, #134
 276 018a 5B00     		lsl	r3, r3, #1
 277 018c D150     		str	r1, [r2, r3]
 278              	.L7:
 326:../Dave/Generated/src/UART001/UART001.c **** 							(((uint32_t)SHIFT_ONE << USIC_CH_RBCTR_LOF_Pos) & \
 327:../Dave/Generated/src/UART001/UART001.c **** 						   USIC_CH_RBCTR_LOF_Msk));
 328:../Dave/Generated/src/UART001/UART001.c ****   }else{}
 329:../Dave/Generated/src/UART001/UART001.c ****   
 330:../Dave/Generated/src/UART001/UART001.c ****   /* Configuration of Channel Control Register */ 
 331:../Dave/Generated/src/UART001/UART001.c ****   UartRegs->CCR |= (((uint32_t)(UART_MODE  & USIC_CH_CCR_MODE_Msk)) | \
 279              		.loc 1 331 0
 280 018e FB68     		ldr	r3, [r7, #12]
 281 0190 1A6C     		ldr	r2, [r3, #64]
 332:../Dave/Generated/src/UART001/UART001.c ****                     (((uint32_t)Handle->Parity  << USIC_CH_CCR_PM_Pos) & \
 282              		.loc 1 332 0
 283 0192 7B68     		ldr	r3, [r7, #4]
 284 0194 9B7D     		ldrb	r3, [r3, #22]
 285 0196 1902     		lsl	r1, r3, #8
 286 0198 C023     		mov	r3, #192
 287 019a 9B00     		lsl	r3, r3, #2
 288 019c 0B40     		and	r3, r1
 331:../Dave/Generated/src/UART001/UART001.c ****   UartRegs->CCR |= (((uint32_t)(UART_MODE  & USIC_CH_CCR_MODE_Msk)) | \
 289              		.loc 1 331 0
 290 019e 1343     		orr	r3, r2
 291 01a0 0222     		mov	r2, #2
 292 01a2 1A43     		orr	r2, r3
 293 01a4 FB68     		ldr	r3, [r7, #12]
 294 01a6 1A64     		str	r2, [r3, #64]
 333:../Dave/Generated/src/UART001/UART001.c ****                      USIC_CH_CCR_PM_Msk));
 334:../Dave/Generated/src/UART001/UART001.c **** 
 335:../Dave/Generated/src/UART001/UART001.c **** }
 295              		.loc 1 335 0
 296 01a8 BD46     		mov	sp, r7
 297 01aa 04B0     		add	sp, sp, #16
 298              		@ sp needed for prologue
 299 01ac 80BD     		pop	{r7, pc}
 300              	.L9:
 301 01ae C046     		.align	2
 302              	.L8:
 303 01b0 0000FF03 		.word	67043328
 304              		.cfi_endproc
 305              	.LFE33:
 307              		.section	.text.UART001_lConfigTXPin,"ax",%progbits
 308              		.align	2
 309              		.global	UART001_lConfigTXPin
 310              		.code	16
 311              		.thumb_func
 313              	UART001_lConfigTXPin:
 314              	.LFB34:
 336:../Dave/Generated/src/UART001/UART001.c **** /*******************************************************************************
 337:../Dave/Generated/src/UART001/UART001.c ****  * @brief This function configures TX pin as Open-drain General-purpose
 338:../Dave/Generated/src/UART001/UART001.c ****  * output and sets to '1'. 
 339:../Dave/Generated/src/UART001/UART001.c ****  *
 340:../Dave/Generated/src/UART001/UART001.c ****  * @param[in]  Handle of type UART001_HandleType
 341:../Dave/Generated/src/UART001/UART001.c ****  *
 342:../Dave/Generated/src/UART001/UART001.c ****  * @return  None <BR>
 343:../Dave/Generated/src/UART001/UART001.c ****  *
 344:../Dave/Generated/src/UART001/UART001.c ****  * <b>Reentrant: No </b><BR>
 345:../Dave/Generated/src/UART001/UART001.c ****  ******************************************************************************/ 
 346:../Dave/Generated/src/UART001/UART001.c **** void UART001_lConfigTXPin(const UART001_HandleType* Handle)
 347:../Dave/Generated/src/UART001/UART001.c **** {
 315              		.loc 1 347 0
 316              		.cfi_startproc
 317 0000 90B5     		push	{r4, r7, lr}
 318              	.LCFI3:
 319              		.cfi_def_cfa_offset 12
 320              		.cfi_offset 4, -12
 321              		.cfi_offset 7, -8
 322              		.cfi_offset 14, -4
 323 0002 85B0     		sub	sp, sp, #20
 324              	.LCFI4:
 325              		.cfi_def_cfa_offset 32
 326 0004 00AF     		add	r7, sp, #0
 327              	.LCFI5:
 328              		.cfi_def_cfa_register 7
 329 0006 7860     		str	r0, [r7, #4]
 348:../Dave/Generated/src/UART001/UART001.c **** 	uint32_t TempPortPin;
 349:../Dave/Generated/src/UART001/UART001.c **** 
 350:../Dave/Generated/src/UART001/UART001.c ****     /* set the TX portpin to '1' */
 351:../Dave/Generated/src/UART001/UART001.c ****     Handle->PinHandle.TX_PortBase->OMR |= (uint32_t)SHIFT_ONE << \
 330              		.loc 1 351 0
 331 0008 7B68     		ldr	r3, [r7, #4]
 332 000a 5B68     		ldr	r3, [r3, #4]
 333 000c 7A68     		ldr	r2, [r7, #4]
 334 000e 5268     		ldr	r2, [r2, #4]
 335 0010 5168     		ldr	r1, [r2, #4]
 352:../Dave/Generated/src/UART001/UART001.c ****    		                                (uint32_t)Handle->PinHandle.TX_Pin;
 336              		.loc 1 352 0
 337 0012 7A68     		ldr	r2, [r7, #4]
 338 0014 127A     		ldrb	r2, [r2, #8]
 351:../Dave/Generated/src/UART001/UART001.c ****     Handle->PinHandle.TX_PortBase->OMR |= (uint32_t)SHIFT_ONE << \
 339              		.loc 1 351 0
 340 0016 0120     		mov	r0, #1
 341 0018 041C     		mov	r4, r0
 342 001a 9440     		lsl	r4, r4, r2
 343 001c 221C     		mov	r2, r4
 344 001e 0A43     		orr	r2, r1
 345 0020 5A60     		str	r2, [r3, #4]
 353:../Dave/Generated/src/UART001/UART001.c ****      
 354:../Dave/Generated/src/UART001/UART001.c **** 	/* Configure TX portpin as Open-drain General-purpose output */
 355:../Dave/Generated/src/UART001/UART001.c ****     TempPortPin = (uint32_t)Handle->PinHandle.TX_Pin;
 346              		.loc 1 355 0
 347 0022 7B68     		ldr	r3, [r7, #4]
 348 0024 1B7A     		ldrb	r3, [r3, #8]
 349 0026 FB60     		str	r3, [r7, #12]
 356:../Dave/Generated/src/UART001/UART001.c **** 
 357:../Dave/Generated/src/UART001/UART001.c ****     if (FIRST_NIBBLE > TempPortPin)
 350              		.loc 1 357 0
 351 0028 FB68     		ldr	r3, [r7, #12]
 352 002a 032B     		cmp	r3, #3
 353 002c 0ED8     		bhi	.L11
 358:../Dave/Generated/src/UART001/UART001.c ****     {
 359:../Dave/Generated/src/UART001/UART001.c ****    	  Handle->PinHandle.TX_PortBase->IOCR0 |= \
 354              		.loc 1 359 0
 355 002e 7B68     		ldr	r3, [r7, #4]
 356 0030 5B68     		ldr	r3, [r3, #4]
 357 0032 7A68     		ldr	r2, [r7, #4]
 358 0034 5268     		ldr	r2, [r2, #4]
 359 0036 1169     		ldr	r1, [r2, #16]
 360:../Dave/Generated/src/UART001/UART001.c ****    			                ((uint32_t)UART001_OPENDRAIN_OUT << (3U + \
 361:../Dave/Generated/src/UART001/UART001.c **** 							(TempPortPin * 8U)));
 360              		.loc 1 361 0
 361 0038 FA68     		ldr	r2, [r7, #12]
 362 003a D200     		lsl	r2, r2, #3
 360:../Dave/Generated/src/UART001/UART001.c ****    			                ((uint32_t)UART001_OPENDRAIN_OUT << (3U + \
 363              		.loc 1 360 0
 364 003c 0332     		add	r2, r2, #3
 365 003e 1820     		mov	r0, #24
 366 0040 041C     		mov	r4, r0
 367 0042 9440     		lsl	r4, r4, r2
 368 0044 221C     		mov	r2, r4
 359:../Dave/Generated/src/UART001/UART001.c ****    	  Handle->PinHandle.TX_PortBase->IOCR0 |= \
 369              		.loc 1 359 0
 370 0046 0A43     		orr	r2, r1
 371 0048 1A61     		str	r2, [r3, #16]
 372 004a 46E0     		b	.L10
 373              	.L11:
 362:../Dave/Generated/src/UART001/UART001.c ****     }
 363:../Dave/Generated/src/UART001/UART001.c ****     else if ((FIRST_NIBBLE <= TempPortPin) && (SECOND_NIBBLE > TempPortPin))
 374              		.loc 1 363 0
 375 004c FB68     		ldr	r3, [r7, #12]
 376 004e 032B     		cmp	r3, #3
 377 0050 14D9     		bls	.L13
 378              		.loc 1 363 0 is_stmt 0 discriminator 1
 379 0052 FB68     		ldr	r3, [r7, #12]
 380 0054 072B     		cmp	r3, #7
 381 0056 11D8     		bhi	.L13
 364:../Dave/Generated/src/UART001/UART001.c ****     {
 365:../Dave/Generated/src/UART001/UART001.c **** 	  TempPortPin = TempPortPin - FIRST_NIBBLE;
 382              		.loc 1 365 0 is_stmt 1
 383 0058 FB68     		ldr	r3, [r7, #12]
 384 005a 043B     		sub	r3, r3, #4
 385 005c FB60     		str	r3, [r7, #12]
 366:../Dave/Generated/src/UART001/UART001.c **** 	  Handle->PinHandle.TX_PortBase->IOCR4 |= \
 386              		.loc 1 366 0
 387 005e 7B68     		ldr	r3, [r7, #4]
 388 0060 5B68     		ldr	r3, [r3, #4]
 389 0062 7A68     		ldr	r2, [r7, #4]
 390 0064 5268     		ldr	r2, [r2, #4]
 391 0066 5169     		ldr	r1, [r2, #20]
 367:../Dave/Generated/src/UART001/UART001.c **** 			                ((uint32_t)UART001_OPENDRAIN_OUT << (3U + \
 368:../Dave/Generated/src/UART001/UART001.c **** 							(TempPortPin * 8U)));
 392              		.loc 1 368 0
 393 0068 FA68     		ldr	r2, [r7, #12]
 394 006a D200     		lsl	r2, r2, #3
 367:../Dave/Generated/src/UART001/UART001.c **** 			                ((uint32_t)UART001_OPENDRAIN_OUT << (3U + \
 395              		.loc 1 367 0
 396 006c 0332     		add	r2, r2, #3
 397 006e 1820     		mov	r0, #24
 398 0070 041C     		mov	r4, r0
 399 0072 9440     		lsl	r4, r4, r2
 400 0074 221C     		mov	r2, r4
 366:../Dave/Generated/src/UART001/UART001.c **** 	  Handle->PinHandle.TX_PortBase->IOCR4 |= \
 401              		.loc 1 366 0
 402 0076 0A43     		orr	r2, r1
 403 0078 5A61     		str	r2, [r3, #20]
 404 007a 2EE0     		b	.L10
 405              	.L13:
 369:../Dave/Generated/src/UART001/UART001.c ****     }
 370:../Dave/Generated/src/UART001/UART001.c ****     else if ((SECOND_NIBBLE <= TempPortPin) && (THIRD_NIBBLE > TempPortPin))
 406              		.loc 1 370 0
 407 007c FB68     		ldr	r3, [r7, #12]
 408 007e 072B     		cmp	r3, #7
 409 0080 14D9     		bls	.L14
 410              		.loc 1 370 0 is_stmt 0 discriminator 1
 411 0082 FB68     		ldr	r3, [r7, #12]
 412 0084 0B2B     		cmp	r3, #11
 413 0086 11D8     		bhi	.L14
 371:../Dave/Generated/src/UART001/UART001.c ****     {
 372:../Dave/Generated/src/UART001/UART001.c ****  	  TempPortPin = TempPortPin - SECOND_NIBBLE;
 414              		.loc 1 372 0 is_stmt 1
 415 0088 FB68     		ldr	r3, [r7, #12]
 416 008a 083B     		sub	r3, r3, #8
 417 008c FB60     		str	r3, [r7, #12]
 373:../Dave/Generated/src/UART001/UART001.c ****  	  Handle->PinHandle.TX_PortBase->IOCR8 |= \
 418              		.loc 1 373 0
 419 008e 7B68     		ldr	r3, [r7, #4]
 420 0090 5B68     		ldr	r3, [r3, #4]
 421 0092 7A68     		ldr	r2, [r7, #4]
 422 0094 5268     		ldr	r2, [r2, #4]
 423 0096 9169     		ldr	r1, [r2, #24]
 374:../Dave/Generated/src/UART001/UART001.c ****  			                ((uint32_t)UART001_OPENDRAIN_OUT << (3U + \
 375:../Dave/Generated/src/UART001/UART001.c **** 							(TempPortPin * 8U)));
 424              		.loc 1 375 0
 425 0098 FA68     		ldr	r2, [r7, #12]
 426 009a D200     		lsl	r2, r2, #3
 374:../Dave/Generated/src/UART001/UART001.c ****  			                ((uint32_t)UART001_OPENDRAIN_OUT << (3U + \
 427              		.loc 1 374 0
 428 009c 0332     		add	r2, r2, #3
 429 009e 1820     		mov	r0, #24
 430 00a0 041C     		mov	r4, r0
 431 00a2 9440     		lsl	r4, r4, r2
 432 00a4 221C     		mov	r2, r4
 373:../Dave/Generated/src/UART001/UART001.c ****  	  Handle->PinHandle.TX_PortBase->IOCR8 |= \
 433              		.loc 1 373 0
 434 00a6 0A43     		orr	r2, r1
 435 00a8 9A61     		str	r2, [r3, #24]
 436 00aa 16E0     		b	.L10
 437              	.L14:
 376:../Dave/Generated/src/UART001/UART001.c ****     }
 377:../Dave/Generated/src/UART001/UART001.c ****     else if ((THIRD_NIBBLE <= TempPortPin) && (FOURTH_NIBBLE > TempPortPin))
 438              		.loc 1 377 0
 439 00ac FB68     		ldr	r3, [r7, #12]
 440 00ae 0B2B     		cmp	r3, #11
 441 00b0 13D9     		bls	.L10
 442              		.loc 1 377 0 is_stmt 0 discriminator 1
 443 00b2 FB68     		ldr	r3, [r7, #12]
 444 00b4 0F2B     		cmp	r3, #15
 445 00b6 10D8     		bhi	.L10
 378:../Dave/Generated/src/UART001/UART001.c ****     {
 379:../Dave/Generated/src/UART001/UART001.c **** 	  TempPortPin = TempPortPin - THIRD_NIBBLE;
 446              		.loc 1 379 0 is_stmt 1
 447 00b8 FB68     		ldr	r3, [r7, #12]
 448 00ba 0C3B     		sub	r3, r3, #12
 449 00bc FB60     		str	r3, [r7, #12]
 380:../Dave/Generated/src/UART001/UART001.c **** 	  Handle->PinHandle.TX_PortBase->IOCR12 |= \
 450              		.loc 1 380 0
 451 00be 7B68     		ldr	r3, [r7, #4]
 452 00c0 5B68     		ldr	r3, [r3, #4]
 453 00c2 7A68     		ldr	r2, [r7, #4]
 454 00c4 5268     		ldr	r2, [r2, #4]
 455 00c6 D169     		ldr	r1, [r2, #28]
 381:../Dave/Generated/src/UART001/UART001.c **** 			                ((uint32_t)UART001_OPENDRAIN_OUT << (3U + \
 382:../Dave/Generated/src/UART001/UART001.c **** 							(TempPortPin * 8U)));
 456              		.loc 1 382 0
 457 00c8 FA68     		ldr	r2, [r7, #12]
 458 00ca D200     		lsl	r2, r2, #3
 381:../Dave/Generated/src/UART001/UART001.c **** 			                ((uint32_t)UART001_OPENDRAIN_OUT << (3U + \
 459              		.loc 1 381 0
 460 00cc 0332     		add	r2, r2, #3
 461 00ce 1820     		mov	r0, #24
 462 00d0 041C     		mov	r4, r0
 463 00d2 9440     		lsl	r4, r4, r2
 464 00d4 221C     		mov	r2, r4
 380:../Dave/Generated/src/UART001/UART001.c **** 	  Handle->PinHandle.TX_PortBase->IOCR12 |= \
 465              		.loc 1 380 0
 466 00d6 0A43     		orr	r2, r1
 467 00d8 DA61     		str	r2, [r3, #28]
 468              	.L10:
 383:../Dave/Generated/src/UART001/UART001.c ****     }
 384:../Dave/Generated/src/UART001/UART001.c **** 	else
 385:../Dave/Generated/src/UART001/UART001.c **** 	{}
 386:../Dave/Generated/src/UART001/UART001.c **** 
 387:../Dave/Generated/src/UART001/UART001.c **** }
 469              		.loc 1 387 0
 470 00da BD46     		mov	sp, r7
 471 00dc 05B0     		add	sp, sp, #20
 472              		@ sp needed for prologue
 473 00de 90BD     		pop	{r4, r7, pc}
 474              		.cfi_endproc
 475              	.LFE34:
 477              		.global	__aeabi_fcmplt
 478              		.section	.text.UART001_labsRealType,"ax",%progbits
 479              		.align	2
 480              		.global	UART001_labsRealType
 481              		.code	16
 482              		.thumb_func
 484              	UART001_labsRealType:
 485              	.LFB35:
 388:../Dave/Generated/src/UART001/UART001.c **** 
 389:../Dave/Generated/src/UART001/UART001.c **** /*******************************************************************************
 390:../Dave/Generated/src/UART001/UART001.c ****  * @brief This function finds the real type of the float number
 391:../Dave/Generated/src/UART001/UART001.c ****  *
 392:../Dave/Generated/src/UART001/UART001.c ****  * @param[in]  Number of type float
 393:../Dave/Generated/src/UART001/UART001.c ****  *
 394:../Dave/Generated/src/UART001/UART001.c ****  * @return  return_value <BR>
 395:../Dave/Generated/src/UART001/UART001.c ****  * 				 +ve float value if Number is < 0.0 <BR>
 396:../Dave/Generated/src/UART001/UART001.c ****  * 				 -ve float value if Number is >= 0.0 <BR>
 397:../Dave/Generated/src/UART001/UART001.c ****  *
 398:../Dave/Generated/src/UART001/UART001.c ****  * <b>Reentrant: No </b><BR>
 399:../Dave/Generated/src/UART001/UART001.c ****  ******************************************************************************/
 400:../Dave/Generated/src/UART001/UART001.c **** float UART001_labsRealType(float Number)
 401:../Dave/Generated/src/UART001/UART001.c **** {
 486              		.loc 1 401 0
 487              		.cfi_startproc
 488 0000 80B5     		push	{r7, lr}
 489              	.LCFI6:
 490              		.cfi_def_cfa_offset 8
 491              		.cfi_offset 7, -8
 492              		.cfi_offset 14, -4
 493 0002 84B0     		sub	sp, sp, #16
 494              	.LCFI7:
 495              		.cfi_def_cfa_offset 24
 496 0004 00AF     		add	r7, sp, #0
 497              	.LCFI8:
 498              		.cfi_def_cfa_register 7
 499 0006 7860     		str	r0, [r7, #4]
 402:../Dave/Generated/src/UART001/UART001.c ****    float return_value;
 403:../Dave/Generated/src/UART001/UART001.c **** 	if (Number < 0.0F){
 500              		.loc 1 403 0
 501 0008 7868     		ldr	r0, [r7, #4]
 502 000a 0021     		mov	r1, #0
 503 000c FFF7FEFF 		bl	__aeabi_fcmplt
 504 0010 031C     		mov	r3, r0
 505 0012 002B     		cmp	r3, #0
 506 0014 05D0     		beq	.L21
 507              	.L20:
 404:../Dave/Generated/src/UART001/UART001.c **** 		return_value = -Number;
 508              		.loc 1 404 0
 509 0016 7B68     		ldr	r3, [r7, #4]
 510 0018 8022     		mov	r2, #128
 511 001a 1206     		lsl	r2, r2, #24
 512 001c 5340     		eor	r3, r2
 513 001e FB60     		str	r3, [r7, #12]
 514 0020 01E0     		b	.L18
 515              	.L21:
 405:../Dave/Generated/src/UART001/UART001.c **** 	}
 406:../Dave/Generated/src/UART001/UART001.c **** 	else{
 407:../Dave/Generated/src/UART001/UART001.c **** 		return_value = Number;
 516              		.loc 1 407 0
 517 0022 7B68     		ldr	r3, [r7, #4]
 518 0024 FB60     		str	r3, [r7, #12]
 519              	.L18:
 408:../Dave/Generated/src/UART001/UART001.c **** 	}
 409:../Dave/Generated/src/UART001/UART001.c **** 	return return_value;
 520              		.loc 1 409 0
 521 0026 FB68     		ldr	r3, [r7, #12]
 410:../Dave/Generated/src/UART001/UART001.c **** }
 522              		.loc 1 410 0
 523 0028 181C     		add	r0, r3, #0
 524 002a BD46     		mov	sp, r7
 525 002c 04B0     		add	sp, sp, #16
 526              		@ sp needed for prologue
 527 002e 80BD     		pop	{r7, pc}
 528              		.cfi_endproc
 529              	.LFE35:
 531              		.global	__aeabi_ui2f
 532              		.global	__aeabi_fdiv
 533              		.global	__aeabi_fcmpgt
 534              		.global	__aeabi_uidiv
 535              		.global	__aeabi_uidivmod
 536              		.global	__aeabi_fsub
 537              		.section	.text.UART001_lConfigureBaudRate,"ax",%progbits
 538              		.align	2
 539              		.global	UART001_lConfigureBaudRate
 540              		.code	16
 541              		.thumb_func
 543              	UART001_lConfigureBaudRate:
 544              	.LFB36:
 411:../Dave/Generated/src/UART001/UART001.c **** /*******************************************************************************
 412:../Dave/Generated/src/UART001/UART001.c ****  * @brief This function gives optimised PDIV and STEP value for the given 
 413:../Dave/Generated/src/UART001/UART001.c ****  * baud rate.  
 414:../Dave/Generated/src/UART001/UART001.c ****  *
 415:../Dave/Generated/src/UART001/UART001.c ****  * @param[in]  BaudRate of type uint32_t
 416:../Dave/Generated/src/UART001/UART001.c ****  * @param[in]  Pdiv reference of type uint32_t
 417:../Dave/Generated/src/UART001/UART001.c ****  * @param[in]  Step reference of type uint32_t
 418:../Dave/Generated/src/UART001/UART001.c ****  *
 419:../Dave/Generated/src/UART001/UART001.c ****  * @return  None <BR>
 420:../Dave/Generated/src/UART001/UART001.c ****  *
 421:../Dave/Generated/src/UART001/UART001.c ****  * <b>Reentrant: No </b><BR>
 422:../Dave/Generated/src/UART001/UART001.c ****  ******************************************************************************/
 423:../Dave/Generated/src/UART001/UART001.c **** void UART001_lConfigureBaudRate\
 424:../Dave/Generated/src/UART001/UART001.c ****                               (uint32_t BaudRate,uint32_t* Pdiv,uint32_t* Step)
 425:../Dave/Generated/src/UART001/UART001.c **** {
 545              		.loc 1 425 0
 546              		.cfi_startproc
 547 0000 B0B5     		push	{r4, r5, r7, lr}
 548              	.LCFI9:
 549              		.cfi_def_cfa_offset 16
 550              		.cfi_offset 4, -16
 551              		.cfi_offset 5, -12
 552              		.cfi_offset 7, -8
 553              		.cfi_offset 14, -4
 554 0002 AEB0     		sub	sp, sp, #184
 555              	.LCFI10:
 556              		.cfi_def_cfa_offset 200
 557 0004 00AF     		add	r7, sp, #0
 558              	.LCFI11:
 559              		.cfi_def_cfa_register 7
 560 0006 F860     		str	r0, [r7, #12]
 561 0008 B960     		str	r1, [r7, #8]
 562 000a 7A60     		str	r2, [r7, #4]
 426:../Dave/Generated/src/UART001/UART001.c **** 	uint32_t fdr_step = 0x00U;
 563              		.loc 1 426 0
 564 000c 0023     		mov	r3, #0
 565 000e B420     		mov	r0, #180
 566 0010 C019     		add	r0, r0, r7
 567 0012 0360     		str	r3, [r0]
 427:../Dave/Generated/src/UART001/UART001.c **** 	uint32_t brg_pdiv = 0x00U;
 568              		.loc 1 427 0
 569 0014 0023     		mov	r3, #0
 570 0016 B021     		mov	r1, #176
 571 0018 C919     		add	r1, r1, r7
 572 001a 0B60     		str	r3, [r1]
 428:../Dave/Generated/src/UART001/UART001.c **** 	uint32_t divisor_in = BaudRate ;
 573              		.loc 1 428 0
 574 001c FB68     		ldr	r3, [r7, #12]
 575 001e AC22     		mov	r2, #172
 576 0020 D219     		add	r2, r2, r7
 577 0022 1360     		str	r3, [r2]
 429:../Dave/Generated/src/UART001/UART001.c **** 	/* fPB / 1024 * (Brg_dctq + 1) */
 430:../Dave/Generated/src/UART001/UART001.c **** 	uint32_t dividend_in = 0U;
 578              		.loc 1 430 0
 579 0024 0023     		mov	r3, #0
 580 0026 A820     		mov	r0, #168
 581 0028 C019     		add	r0, r0, r7
 582 002a 0360     		str	r3, [r0]
 431:../Dave/Generated/src/UART001/UART001.c **** 	uint32_t divisor[4];
 432:../Dave/Generated/src/UART001/UART001.c **** 	uint32_t dividend[4];
 433:../Dave/Generated/src/UART001/UART001.c **** 	uint32_t remainder[4];
 434:../Dave/Generated/src/UART001/UART001.c **** 	uint32_t divisor_array[4];
 435:../Dave/Generated/src/UART001/UART001.c **** 	uint32_t dividend_array[4];
 436:../Dave/Generated/src/UART001/UART001.c **** 	uint32_t div_array[4];
 437:../Dave/Generated/src/UART001/UART001.c **** 	uint32_t max, frac,divisor1,divisor2,dividend1,dividend2;
 438:../Dave/Generated/src/UART001/UART001.c **** 	uint32_t array_count,array_count_1,array_count_2;
 439:../Dave/Generated/src/UART001/UART001.c **** 	uint32_t do_while_break = 0U;
 583              		.loc 1 439 0
 584 002c 0023     		mov	r3, #0
 585 002e 8821     		mov	r1, #136
 586 0030 C919     		add	r1, r1, r7
 587 0032 0B60     		str	r3, [r1]
 440:../Dave/Generated/src/UART001/UART001.c **** 	uint32_t temp = 0U;
 588              		.loc 1 440 0
 589 0034 0023     		mov	r3, #0
 590 0036 FB67     		str	r3, [r7, #124]
 441:../Dave/Generated/src/UART001/UART001.c **** 	float div_factor;
 442:../Dave/Generated/src/UART001/UART001.c **** 	uint32_t loop_cnt;
 443:../Dave/Generated/src/UART001/UART001.c **** 	bool swapped;
 444:../Dave/Generated/src/UART001/UART001.c **** 	dividend_in = (uint32_t)((uint32_t)(UART001_CLOCK * 1000000)/ \
 591              		.loc 1 444 0
 592 0038 E04B     		ldr	r3, .L45
 593 003a A822     		mov	r2, #168
 594 003c D219     		add	r2, r2, r7
 595 003e 1360     		str	r3, [r2]
 445:../Dave/Generated/src/UART001/UART001.c ****                     	(UART001_MAX_VALUE * UART001_DCTQ_VALUE)); 
 446:../Dave/Generated/src/UART001/UART001.c **** 	/* swap if divisor_in/dividend_in > max_divisor/max_dividend */
 447:../Dave/Generated/src/UART001/UART001.c **** 	div_factor = (float) divisor_in/(float) dividend_in;
 596              		.loc 1 447 0
 597 0040 AC23     		mov	r3, #172
 598 0042 DB19     		add	r3, r3, r7
 599 0044 1868     		ldr	r0, [r3]
 600 0046 FFF7FEFF 		bl	__aeabi_ui2f
 601 004a 041C     		add	r4, r0, #0
 602 004c A821     		mov	r1, #168
 603 004e C919     		add	r1, r1, r7
 604 0050 0868     		ldr	r0, [r1]
 605 0052 FFF7FEFF 		bl	__aeabi_ui2f
 606 0056 031C     		add	r3, r0, #0
 607 0058 201C     		add	r0, r4, #0
 608 005a 191C     		add	r1, r3, #0
 609 005c FFF7FEFF 		bl	__aeabi_fdiv
 610 0060 031C     		add	r3, r0, #0
 611 0062 BB67     		str	r3, [r7, #120]
 448:../Dave/Generated/src/UART001/UART001.c **** 	if ( div_factor > 1.0F)
 612              		.loc 1 448 0
 613 0064 B86F     		ldr	r0, [r7, #120]
 614 0066 FE21     		mov	r1, #254
 615 0068 8905     		lsl	r1, r1, #22
 616 006a FFF7FEFF 		bl	__aeabi_fcmpgt
 617 006e 031C     		mov	r3, r0
 618 0070 002B     		cmp	r3, #0
 619 0072 17D0     		beq	.L43
 620              	.L41:
 449:../Dave/Generated/src/UART001/UART001.c **** 	{
 450:../Dave/Generated/src/UART001/UART001.c **** 		max = UART001_MAX_VALUE;
 621              		.loc 1 450 0
 622 0074 8023     		mov	r3, #128
 623 0076 DB00     		lsl	r3, r3, #3
 624 0078 A422     		mov	r2, #164
 625 007a D219     		add	r2, r2, r7
 626 007c 1360     		str	r3, [r2]
 451:../Dave/Generated/src/UART001/UART001.c **** 		swapped = 1U;
 627              		.loc 1 451 0
 628 007e 3B1C     		mov	r3, r7
 629 0080 8333     		add	r3, r3, #131
 630 0082 0122     		mov	r2, #1
 631 0084 1A70     		strb	r2, [r3]
 452:../Dave/Generated/src/UART001/UART001.c **** 		temp = divisor_in;
 632              		.loc 1 452 0
 633 0086 AC20     		mov	r0, #172
 634 0088 C019     		add	r0, r0, r7
 635 008a 0368     		ldr	r3, [r0]
 636 008c FB67     		str	r3, [r7, #124]
 453:../Dave/Generated/src/UART001/UART001.c **** 		divisor_in = dividend_in;
 637              		.loc 1 453 0
 638 008e A821     		mov	r1, #168
 639 0090 C919     		add	r1, r1, r7
 640 0092 0B68     		ldr	r3, [r1]
 641 0094 AC22     		mov	r2, #172
 642 0096 D219     		add	r2, r2, r7
 643 0098 1360     		str	r3, [r2]
 454:../Dave/Generated/src/UART001/UART001.c **** 		dividend_in = temp;
 644              		.loc 1 454 0
 645 009a FB6F     		ldr	r3, [r7, #124]
 646 009c A820     		mov	r0, #168
 647 009e C019     		add	r0, r0, r7
 648 00a0 0360     		str	r3, [r0]
 649 00a2 08E0     		b	.L25
 650              	.L43:
 455:../Dave/Generated/src/UART001/UART001.c **** 	}
 456:../Dave/Generated/src/UART001/UART001.c **** 	else
 457:../Dave/Generated/src/UART001/UART001.c **** 	{
 458:../Dave/Generated/src/UART001/UART001.c **** 		swapped = 0U;
 651              		.loc 1 458 0
 652 00a4 3B1C     		mov	r3, r7
 653 00a6 8333     		add	r3, r3, #131
 654 00a8 0022     		mov	r2, #0
 655 00aa 1A70     		strb	r2, [r3]
 459:../Dave/Generated/src/UART001/UART001.c **** 		max = UART001_MAX_VALUE;
 656              		.loc 1 459 0
 657 00ac 8023     		mov	r3, #128
 658 00ae DB00     		lsl	r3, r3, #3
 659 00b0 A421     		mov	r1, #164
 660 00b2 C919     		add	r1, r1, r7
 661 00b4 0B60     		str	r3, [r1]
 662              	.L25:
 460:../Dave/Generated/src/UART001/UART001.c **** 	}
 461:../Dave/Generated/src/UART001/UART001.c **** 	/*Init parameters*/
 462:../Dave/Generated/src/UART001/UART001.c **** 	loop_cnt = 0U;
 663              		.loc 1 462 0
 664 00b6 0023     		mov	r3, #0
 665 00b8 8422     		mov	r2, #132
 666 00ba D219     		add	r2, r2, r7
 667 00bc 1360     		str	r3, [r2]
 463:../Dave/Generated/src/UART001/UART001.c **** 	array_count = 0U;
 668              		.loc 1 463 0
 669 00be 0023     		mov	r3, #0
 670 00c0 9020     		mov	r0, #144
 671 00c2 C019     		add	r0, r0, r7
 672 00c4 0360     		str	r3, [r0]
 464:../Dave/Generated/src/UART001/UART001.c **** 	array_count_1 = 0U;
 673              		.loc 1 464 0
 674 00c6 0023     		mov	r3, #0
 675 00c8 8C21     		mov	r1, #140
 676 00ca C919     		add	r1, r1, r7
 677 00cc 0B60     		str	r3, [r1]
 465:../Dave/Generated/src/UART001/UART001.c **** 	divisor[0] = divisor_in;
 678              		.loc 1 465 0
 679 00ce 3B1C     		mov	r3, r7
 680 00d0 6033     		add	r3, r3, #96
 681 00d2 AC20     		mov	r0, #172
 682 00d4 C019     		add	r0, r0, r7
 683 00d6 0268     		ldr	r2, [r0]
 684 00d8 1A60     		str	r2, [r3]
 466:../Dave/Generated/src/UART001/UART001.c **** 	remainder[0] = dividend_in;
 685              		.loc 1 466 0
 686 00da 3B1C     		mov	r3, r7
 687 00dc 4033     		add	r3, r3, #64
 688 00de A821     		mov	r1, #168
 689 00e0 C919     		add	r1, r1, r7
 690 00e2 0A68     		ldr	r2, [r1]
 691 00e4 1A60     		str	r2, [r3]
 467:../Dave/Generated/src/UART001/UART001.c **** 	divisor_array[0] = 1U;
 692              		.loc 1 467 0
 693 00e6 3B1C     		mov	r3, r7
 694 00e8 3033     		add	r3, r3, #48
 695 00ea 0122     		mov	r2, #1
 696 00ec 1A60     		str	r2, [r3]
 468:../Dave/Generated/src/UART001/UART001.c **** 	dividend_array[0] = 0U;
 697              		.loc 1 468 0
 698 00ee 3B1C     		mov	r3, r7
 699 00f0 2033     		add	r3, r3, #32
 700 00f2 0022     		mov	r2, #0
 701 00f4 1A60     		str	r2, [r3]
 702              	.L39:
 469:../Dave/Generated/src/UART001/UART001.c **** 	do {
 470:../Dave/Generated/src/UART001/UART001.c **** 			++loop_cnt;
 703              		.loc 1 470 0
 704 00f6 8422     		mov	r2, #132
 705 00f8 D219     		add	r2, r2, r7
 706 00fa 1368     		ldr	r3, [r2]
 707 00fc 0133     		add	r3, r3, #1
 708 00fe 8420     		mov	r0, #132
 709 0100 C019     		add	r0, r0, r7
 710 0102 0360     		str	r3, [r0]
 471:../Dave/Generated/src/UART001/UART001.c **** 			array_count_2 = array_count_1; /* on first loop is not used */
 711              		.loc 1 471 0
 712 0104 8C21     		mov	r1, #140
 713 0106 C919     		add	r1, r1, r7
 714 0108 0B68     		ldr	r3, [r1]
 715 010a 7B67     		str	r3, [r7, #116]
 472:../Dave/Generated/src/UART001/UART001.c **** 			array_count_1 = array_count;
 716              		.loc 1 472 0
 717 010c 9022     		mov	r2, #144
 718 010e D219     		add	r2, r2, r7
 719 0110 1368     		ldr	r3, [r2]
 720 0112 8C20     		mov	r0, #140
 721 0114 C019     		add	r0, r0, r7
 722 0116 0360     		str	r3, [r0]
 473:../Dave/Generated/src/UART001/UART001.c **** 			array_count = loop_cnt % 4U;
 723              		.loc 1 473 0
 724 0118 8421     		mov	r1, #132
 725 011a C919     		add	r1, r1, r7
 726 011c 0A68     		ldr	r2, [r1]
 727 011e 0323     		mov	r3, #3
 728 0120 1340     		and	r3, r2
 729 0122 9022     		mov	r2, #144
 730 0124 D219     		add	r2, r2, r7
 731 0126 1360     		str	r3, [r2]
 474:../Dave/Generated/src/UART001/UART001.c **** 			dividend[array_count] = divisor[array_count_1];
 732              		.loc 1 474 0
 733 0128 3B1C     		mov	r3, r7
 734 012a 6033     		add	r3, r3, #96
 735 012c 8C20     		mov	r0, #140
 736 012e C019     		add	r0, r0, r7
 737 0130 0268     		ldr	r2, [r0]
 738 0132 9200     		lsl	r2, r2, #2
 739 0134 D158     		ldr	r1, [r2, r3]
 740 0136 3B1C     		mov	r3, r7
 741 0138 5033     		add	r3, r3, #80
 742 013a 9020     		mov	r0, #144
 743 013c C019     		add	r0, r0, r7
 744 013e 0268     		ldr	r2, [r0]
 745 0140 9200     		lsl	r2, r2, #2
 746 0142 D150     		str	r1, [r2, r3]
 475:../Dave/Generated/src/UART001/UART001.c **** 			
 476:../Dave/Generated/src/UART001/UART001.c **** 			divisor[array_count] = remainder[array_count_1];
 747              		.loc 1 476 0
 748 0144 3B1C     		mov	r3, r7
 749 0146 4033     		add	r3, r3, #64
 750 0148 8C21     		mov	r1, #140
 751 014a C919     		add	r1, r1, r7
 752 014c 0A68     		ldr	r2, [r1]
 753 014e 9200     		lsl	r2, r2, #2
 754 0150 D158     		ldr	r1, [r2, r3]
 755 0152 3B1C     		mov	r3, r7
 756 0154 6033     		add	r3, r3, #96
 757 0156 9020     		mov	r0, #144
 758 0158 C019     		add	r0, r0, r7
 759 015a 0268     		ldr	r2, [r0]
 760 015c 9200     		lsl	r2, r2, #2
 761 015e D150     		str	r1, [r2, r3]
 477:../Dave/Generated/src/UART001/UART001.c **** 			
 478:../Dave/Generated/src/UART001/UART001.c **** 			div_array[array_count] = \
 479:../Dave/Generated/src/UART001/UART001.c **** 			                       dividend[array_count] / divisor[array_count];
 762              		.loc 1 479 0
 763 0160 3B1C     		mov	r3, r7
 764 0162 5033     		add	r3, r3, #80
 765 0164 9021     		mov	r1, #144
 766 0166 C919     		add	r1, r1, r7
 767 0168 0A68     		ldr	r2, [r1]
 768 016a 9200     		lsl	r2, r2, #2
 769 016c D258     		ldr	r2, [r2, r3]
 770 016e 3B1C     		mov	r3, r7
 771 0170 6033     		add	r3, r3, #96
 772 0172 9020     		mov	r0, #144
 773 0174 C019     		add	r0, r0, r7
 774 0176 0168     		ldr	r1, [r0]
 775 0178 8900     		lsl	r1, r1, #2
 776 017a CB58     		ldr	r3, [r1, r3]
 777 017c 101C     		mov	r0, r2
 778 017e 191C     		mov	r1, r3
 779 0180 FFF7FEFF 		bl	__aeabi_uidiv
 780 0184 031C     		mov	r3, r0
 781 0186 191C     		mov	r1, r3
 478:../Dave/Generated/src/UART001/UART001.c **** 			div_array[array_count] = \
 782              		.loc 1 478 0
 783 0188 3B1C     		mov	r3, r7
 784 018a 1033     		add	r3, r3, #16
 785 018c 9020     		mov	r0, #144
 786 018e C019     		add	r0, r0, r7
 787 0190 0268     		ldr	r2, [r0]
 788 0192 9200     		lsl	r2, r2, #2
 789 0194 D150     		str	r1, [r2, r3]
 480:../Dave/Generated/src/UART001/UART001.c **** 			
 481:../Dave/Generated/src/UART001/UART001.c **** 			remainder[array_count] = \
 482:../Dave/Generated/src/UART001/UART001.c **** 			                       dividend[array_count] % divisor[array_count];
 790              		.loc 1 482 0
 791 0196 3B1C     		mov	r3, r7
 792 0198 5033     		add	r3, r3, #80
 793 019a 9021     		mov	r1, #144
 794 019c C919     		add	r1, r1, r7
 795 019e 0A68     		ldr	r2, [r1]
 796 01a0 9200     		lsl	r2, r2, #2
 797 01a2 D258     		ldr	r2, [r2, r3]
 798 01a4 3B1C     		mov	r3, r7
 799 01a6 6033     		add	r3, r3, #96
 800 01a8 9020     		mov	r0, #144
 801 01aa C019     		add	r0, r0, r7
 802 01ac 0168     		ldr	r1, [r0]
 803 01ae 8900     		lsl	r1, r1, #2
 804 01b0 CB58     		ldr	r3, [r1, r3]
 805 01b2 101C     		mov	r0, r2
 806 01b4 191C     		mov	r1, r3
 807 01b6 FFF7FEFF 		bl	__aeabi_uidivmod
 808 01ba 0B1C     		mov	r3, r1
 809 01bc 191C     		mov	r1, r3
 481:../Dave/Generated/src/UART001/UART001.c **** 			remainder[array_count] = \
 810              		.loc 1 481 0
 811 01be 3B1C     		mov	r3, r7
 812 01c0 4033     		add	r3, r3, #64
 813 01c2 9020     		mov	r0, #144
 814 01c4 C019     		add	r0, r0, r7
 815 01c6 0268     		ldr	r2, [r0]
 816 01c8 9200     		lsl	r2, r2, #2
 817 01ca D150     		str	r1, [r2, r3]
 483:../Dave/Generated/src/UART001/UART001.c **** 			
 484:../Dave/Generated/src/UART001/UART001.c **** 			/* This executed only on first loop */
 485:../Dave/Generated/src/UART001/UART001.c **** 			if (loop_cnt == 1U)
 818              		.loc 1 485 0
 819 01cc 8421     		mov	r1, #132
 820 01ce C919     		add	r1, r1, r7
 821 01d0 0B68     		ldr	r3, [r1]
 822 01d2 012B     		cmp	r3, #1
 823 01d4 0AD1     		bne	.L26
 486:../Dave/Generated/src/UART001/UART001.c **** 			{ 
 487:../Dave/Generated/src/UART001/UART001.c **** 				divisor_array[1] = div_array[1];
 824              		.loc 1 487 0
 825 01d6 3B1C     		mov	r3, r7
 826 01d8 1033     		add	r3, r3, #16
 827 01da 5A68     		ldr	r2, [r3, #4]
 828 01dc 3B1C     		mov	r3, r7
 829 01de 3033     		add	r3, r3, #48
 830 01e0 5A60     		str	r2, [r3, #4]
 488:../Dave/Generated/src/UART001/UART001.c **** 				dividend_array[1] = 1U;
 831              		.loc 1 488 0
 832 01e2 3B1C     		mov	r3, r7
 833 01e4 2033     		add	r3, r3, #32
 834 01e6 0122     		mov	r2, #1
 835 01e8 5A60     		str	r2, [r3, #4]
 836 01ea 37E0     		b	.L27
 837              	.L26:
 489:../Dave/Generated/src/UART001/UART001.c **** 			}
 490:../Dave/Generated/src/UART001/UART001.c **** 			else
 491:../Dave/Generated/src/UART001/UART001.c **** 			{
 492:../Dave/Generated/src/UART001/UART001.c **** 				divisor_array[array_count] = \
 493:../Dave/Generated/src/UART001/UART001.c **** 				      (div_array[array_count] * divisor_array[array_count_1]) + \
 838              		.loc 1 493 0
 839 01ec 3B1C     		mov	r3, r7
 840 01ee 1033     		add	r3, r3, #16
 841 01f0 9020     		mov	r0, #144
 842 01f2 C019     		add	r0, r0, r7
 843 01f4 0268     		ldr	r2, [r0]
 844 01f6 9200     		lsl	r2, r2, #2
 845 01f8 D358     		ldr	r3, [r2, r3]
 846 01fa 3A1C     		mov	r2, r7
 847 01fc 3032     		add	r2, r2, #48
 848 01fe 8C20     		mov	r0, #140
 849 0200 C019     		add	r0, r0, r7
 850 0202 0168     		ldr	r1, [r0]
 851 0204 8900     		lsl	r1, r1, #2
 852 0206 8A58     		ldr	r2, [r1, r2]
 853 0208 5A43     		mul	r2, r3
 494:../Dave/Generated/src/UART001/UART001.c **** 				       divisor_array[array_count_2];
 854              		.loc 1 494 0
 855 020a 3B1C     		mov	r3, r7
 856 020c 3033     		add	r3, r3, #48
 857 020e 796F     		ldr	r1, [r7, #116]
 858 0210 8900     		lsl	r1, r1, #2
 859 0212 CB58     		ldr	r3, [r1, r3]
 493:../Dave/Generated/src/UART001/UART001.c **** 				      (div_array[array_count] * divisor_array[array_count_1]) + \
 860              		.loc 1 493 0
 861 0214 D118     		add	r1, r2, r3
 492:../Dave/Generated/src/UART001/UART001.c **** 				divisor_array[array_count] = \
 862              		.loc 1 492 0
 863 0216 3B1C     		mov	r3, r7
 864 0218 3033     		add	r3, r3, #48
 865 021a 9020     		mov	r0, #144
 866 021c C019     		add	r0, r0, r7
 867 021e 0268     		ldr	r2, [r0]
 868 0220 9200     		lsl	r2, r2, #2
 869 0222 D150     		str	r1, [r2, r3]
 495:../Dave/Generated/src/UART001/UART001.c **** 				dividend_array[array_count] = \
 496:../Dave/Generated/src/UART001/UART001.c **** 				      (div_array[array_count] * dividend_array[array_count_1]) + \
 870              		.loc 1 496 0
 871 0224 3B1C     		mov	r3, r7
 872 0226 1033     		add	r3, r3, #16
 873 0228 9021     		mov	r1, #144
 874 022a C919     		add	r1, r1, r7
 875 022c 0A68     		ldr	r2, [r1]
 876 022e 9200     		lsl	r2, r2, #2
 877 0230 D358     		ldr	r3, [r2, r3]
 878 0232 3A1C     		mov	r2, r7
 879 0234 2032     		add	r2, r2, #32
 880 0236 8C20     		mov	r0, #140
 881 0238 C019     		add	r0, r0, r7
 882 023a 0168     		ldr	r1, [r0]
 883 023c 8900     		lsl	r1, r1, #2
 884 023e 8A58     		ldr	r2, [r1, r2]
 885 0240 5A43     		mul	r2, r3
 497:../Dave/Generated/src/UART001/UART001.c **** 				       dividend_array[array_count_2];
 886              		.loc 1 497 0
 887 0242 3B1C     		mov	r3, r7
 888 0244 2033     		add	r3, r3, #32
 889 0246 796F     		ldr	r1, [r7, #116]
 890 0248 8900     		lsl	r1, r1, #2
 891 024a CB58     		ldr	r3, [r1, r3]
 496:../Dave/Generated/src/UART001/UART001.c **** 				      (div_array[array_count] * dividend_array[array_count_1]) + \
 892              		.loc 1 496 0
 893 024c D118     		add	r1, r2, r3
 495:../Dave/Generated/src/UART001/UART001.c **** 				dividend_array[array_count] = \
 894              		.loc 1 495 0
 895 024e 3B1C     		mov	r3, r7
 896 0250 2033     		add	r3, r3, #32
 897 0252 9020     		mov	r0, #144
 898 0254 C019     		add	r0, r0, r7
 899 0256 0268     		ldr	r2, [r0]
 900 0258 9200     		lsl	r2, r2, #2
 901 025a D150     		str	r1, [r2, r3]
 902              	.L27:
 498:../Dave/Generated/src/UART001/UART001.c **** 			}
 499:../Dave/Generated/src/UART001/UART001.c **** 			if (dividend_array[array_count] > max) 
 903              		.loc 1 499 0
 904 025c 3B1C     		mov	r3, r7
 905 025e 2033     		add	r3, r3, #32
 906 0260 9021     		mov	r1, #144
 907 0262 C919     		add	r1, r1, r7
 908 0264 0A68     		ldr	r2, [r1]
 909 0266 9200     		lsl	r2, r2, #2
 910 0268 D258     		ldr	r2, [r2, r3]
 911 026a A420     		mov	r0, #164
 912 026c C019     		add	r0, r0, r7
 913 026e 0368     		ldr	r3, [r0]
 914 0270 9A42     		cmp	r2, r3
 915 0272 00D8     		bhi	.LCB779
 916 0274 FDE0     		b	.L28	@long jump
 917              	.LCB779:
 500:../Dave/Generated/src/UART001/UART001.c **** 			{
 501:../Dave/Generated/src/UART001/UART001.c **** 				divisor1 = divisor_array[array_count_1];
 918              		.loc 1 501 0
 919 0276 3B1C     		mov	r3, r7
 920 0278 3033     		add	r3, r3, #48
 921 027a 8C21     		mov	r1, #140
 922 027c C919     		add	r1, r1, r7
 923 027e 0A68     		ldr	r2, [r1]
 924 0280 9200     		lsl	r2, r2, #2
 925 0282 D358     		ldr	r3, [r2, r3]
 926 0284 A022     		mov	r2, #160
 927 0286 D219     		add	r2, r2, r7
 928 0288 1360     		str	r3, [r2]
 502:../Dave/Generated/src/UART001/UART001.c **** 				dividend1 = dividend_array[array_count_1];
 929              		.loc 1 502 0
 930 028a 3B1C     		mov	r3, r7
 931 028c 2033     		add	r3, r3, #32
 932 028e 8C20     		mov	r0, #140
 933 0290 C019     		add	r0, r0, r7
 934 0292 0268     		ldr	r2, [r0]
 935 0294 9200     		lsl	r2, r2, #2
 936 0296 D358     		ldr	r3, [r2, r3]
 937 0298 9821     		mov	r1, #152
 938 029a C919     		add	r1, r1, r7
 939 029c 0B60     		str	r3, [r1]
 503:../Dave/Generated/src/UART001/UART001.c **** 				frac = (max - dividend_array[array_count_2]) / \
 940              		.loc 1 503 0
 941 029e 3B1C     		mov	r3, r7
 942 02a0 2033     		add	r3, r3, #32
 943 02a2 7A6F     		ldr	r2, [r7, #116]
 944 02a4 9200     		lsl	r2, r2, #2
 945 02a6 D358     		ldr	r3, [r2, r3]
 946 02a8 A420     		mov	r0, #164
 947 02aa C019     		add	r0, r0, r7
 948 02ac 0268     		ldr	r2, [r0]
 949 02ae D21A     		sub	r2, r2, r3
 504:../Dave/Generated/src/UART001/UART001.c **** 				                               dividend_array[array_count_1];
 950              		.loc 1 504 0
 951 02b0 3B1C     		mov	r3, r7
 952 02b2 2033     		add	r3, r3, #32
 953 02b4 8C20     		mov	r0, #140
 954 02b6 C019     		add	r0, r0, r7
 955 02b8 0168     		ldr	r1, [r0]
 956 02ba 8900     		lsl	r1, r1, #2
 957 02bc CB58     		ldr	r3, [r1, r3]
 503:../Dave/Generated/src/UART001/UART001.c **** 				frac = (max - dividend_array[array_count_2]) / \
 958              		.loc 1 503 0
 959 02be 101C     		mov	r0, r2
 960 02c0 191C     		mov	r1, r3
 961 02c2 FFF7FEFF 		bl	__aeabi_uidiv
 962 02c6 031C     		mov	r3, r0
 963 02c8 3B67     		str	r3, [r7, #112]
 505:../Dave/Generated/src/UART001/UART001.c **** 				divisor2 = (frac * divisor_array[array_count-1U]) + \
 964              		.loc 1 505 0
 965 02ca 9021     		mov	r1, #144
 966 02cc C919     		add	r1, r1, r7
 967 02ce 0B68     		ldr	r3, [r1]
 968 02d0 5A1E     		sub	r2, r3, #1
 969 02d2 3B1C     		mov	r3, r7
 970 02d4 3033     		add	r3, r3, #48
 971 02d6 9200     		lsl	r2, r2, #2
 972 02d8 D358     		ldr	r3, [r2, r3]
 973 02da 3A6F     		ldr	r2, [r7, #112]
 974 02dc 5A43     		mul	r2, r3
 506:../Dave/Generated/src/UART001/UART001.c **** 				                                divisor_array[array_count-2U];
 975              		.loc 1 506 0
 976 02de 9020     		mov	r0, #144
 977 02e0 C019     		add	r0, r0, r7
 978 02e2 0368     		ldr	r3, [r0]
 979 02e4 991E     		sub	r1, r3, #2
 980 02e6 3B1C     		mov	r3, r7
 981 02e8 3033     		add	r3, r3, #48
 982 02ea 8900     		lsl	r1, r1, #2
 983 02ec CB58     		ldr	r3, [r1, r3]
 505:../Dave/Generated/src/UART001/UART001.c **** 				divisor2 = (frac * divisor_array[array_count-1U]) + \
 984              		.loc 1 505 0
 985 02ee D318     		add	r3, r2, r3
 986 02f0 9C21     		mov	r1, #156
 987 02f2 C919     		add	r1, r1, r7
 988 02f4 0B60     		str	r3, [r1]
 507:../Dave/Generated/src/UART001/UART001.c **** 				dividend2 = (frac * dividend_array[array_count-1U]) + \
 989              		.loc 1 507 0
 990 02f6 9022     		mov	r2, #144
 991 02f8 D219     		add	r2, r2, r7
 992 02fa 1368     		ldr	r3, [r2]
 993 02fc 5A1E     		sub	r2, r3, #1
 994 02fe 3B1C     		mov	r3, r7
 995 0300 2033     		add	r3, r3, #32
 996 0302 9200     		lsl	r2, r2, #2
 997 0304 D358     		ldr	r3, [r2, r3]
 998 0306 3A6F     		ldr	r2, [r7, #112]
 999 0308 5A43     		mul	r2, r3
 508:../Dave/Generated/src/UART001/UART001.c **** 				                               dividend_array[array_count_2];
 1000              		.loc 1 508 0
 1001 030a 3B1C     		mov	r3, r7
 1002 030c 2033     		add	r3, r3, #32
 1003 030e 796F     		ldr	r1, [r7, #116]
 1004 0310 8900     		lsl	r1, r1, #2
 1005 0312 CB58     		ldr	r3, [r1, r3]
 507:../Dave/Generated/src/UART001/UART001.c **** 				dividend2 = (frac * dividend_array[array_count-1U]) + \
 1006              		.loc 1 507 0
 1007 0314 D318     		add	r3, r2, r3
 1008 0316 9420     		mov	r0, #148
 1009 0318 C019     		add	r0, r0, r7
 1010 031a 0360     		str	r3, [r0]
 509:../Dave/Generated/src/UART001/UART001.c **** 				/* Swap if required */
 510:../Dave/Generated/src/UART001/UART001.c **** 				if (swapped) {
 1011              		.loc 1 510 0
 1012 031c 3B1C     		mov	r3, r7
 1013 031e 8333     		add	r3, r3, #131
 1014 0320 1B78     		ldrb	r3, [r3]
 1015 0322 002B     		cmp	r3, #0
 1016 0324 1BD0     		beq	.L29
 511:../Dave/Generated/src/UART001/UART001.c **** 						/* Swap divisor1 and dividend1 */
 512:../Dave/Generated/src/UART001/UART001.c **** 						temp = divisor1;
 1017              		.loc 1 512 0
 1018 0326 A021     		mov	r1, #160
 1019 0328 C919     		add	r1, r1, r7
 1020 032a 0B68     		ldr	r3, [r1]
 1021 032c FB67     		str	r3, [r7, #124]
 513:../Dave/Generated/src/UART001/UART001.c **** 						divisor1 = dividend1;
 1022              		.loc 1 513 0
 1023 032e 9822     		mov	r2, #152
 1024 0330 D219     		add	r2, r2, r7
 1025 0332 1368     		ldr	r3, [r2]
 1026 0334 A020     		mov	r0, #160
 1027 0336 C019     		add	r0, r0, r7
 1028 0338 0360     		str	r3, [r0]
 514:../Dave/Generated/src/UART001/UART001.c **** 						dividend1 = temp;
 1029              		.loc 1 514 0
 1030 033a FB6F     		ldr	r3, [r7, #124]
 1031 033c 9821     		mov	r1, #152
 1032 033e C919     		add	r1, r1, r7
 1033 0340 0B60     		str	r3, [r1]
 515:../Dave/Generated/src/UART001/UART001.c **** 						/* Swap divisor2 and dividend2 */
 516:../Dave/Generated/src/UART001/UART001.c **** 						temp = divisor2;
 1034              		.loc 1 516 0
 1035 0342 9C22     		mov	r2, #156
 1036 0344 D219     		add	r2, r2, r7
 1037 0346 1368     		ldr	r3, [r2]
 1038 0348 FB67     		str	r3, [r7, #124]
 517:../Dave/Generated/src/UART001/UART001.c **** 						divisor2 = dividend2;
 1039              		.loc 1 517 0
 1040 034a 9420     		mov	r0, #148
 1041 034c C019     		add	r0, r0, r7
 1042 034e 0368     		ldr	r3, [r0]
 1043 0350 9C21     		mov	r1, #156
 1044 0352 C919     		add	r1, r1, r7
 1045 0354 0B60     		str	r3, [r1]
 518:../Dave/Generated/src/UART001/UART001.c **** 						dividend2 = temp;
 1046              		.loc 1 518 0
 1047 0356 FB6F     		ldr	r3, [r7, #124]
 1048 0358 9422     		mov	r2, #148
 1049 035a D219     		add	r2, r2, r7
 1050 035c 1360     		str	r3, [r2]
 1051              	.L29:
 519:../Dave/Generated/src/UART001/UART001.c **** 					}
 520:../Dave/Generated/src/UART001/UART001.c **** 				/* Remove if one of has divisor 0 */
 521:../Dave/Generated/src/UART001/UART001.c **** 				if ((dividend1 == 0U) || (divisor1 == 0U)) {
 1052              		.loc 1 521 0
 1053 035e 9820     		mov	r0, #152
 1054 0360 C019     		add	r0, r0, r7
 1055 0362 0368     		ldr	r3, [r0]
 1056 0364 002B     		cmp	r3, #0
 1057 0366 04D0     		beq	.L30
 1058              		.loc 1 521 0 is_stmt 0 discriminator 1
 1059 0368 A021     		mov	r1, #160
 1060 036a C919     		add	r1, r1, r7
 1061 036c 0B68     		ldr	r3, [r1]
 1062 036e 002B     		cmp	r3, #0
 1063 0370 0CD1     		bne	.L31
 1064              	.L30:
 522:../Dave/Generated/src/UART001/UART001.c **** 					fdr_step = divisor2;
 1065              		.loc 1 522 0 is_stmt 1
 1066 0372 9C22     		mov	r2, #156
 1067 0374 D219     		add	r2, r2, r7
 1068 0376 1368     		ldr	r3, [r2]
 1069 0378 B420     		mov	r0, #180
 1070 037a C019     		add	r0, r0, r7
 1071 037c 0360     		str	r3, [r0]
 523:../Dave/Generated/src/UART001/UART001.c **** 					brg_pdiv = dividend2;
 1072              		.loc 1 523 0
 1073 037e 9421     		mov	r1, #148
 1074 0380 C919     		add	r1, r1, r7
 1075 0382 0B68     		ldr	r3, [r1]
 1076 0384 B022     		mov	r2, #176
 1077 0386 D219     		add	r2, r2, r7
 1078 0388 1360     		str	r3, [r2]
 1079 038a 6DE0     		b	.L32
 1080              	.L31:
 524:../Dave/Generated/src/UART001/UART001.c **** 				}else if ((dividend2 == 0U) || (divisor2 == 0U)) {
 1081              		.loc 1 524 0
 1082 038c 9420     		mov	r0, #148
 1083 038e C019     		add	r0, r0, r7
 1084 0390 0368     		ldr	r3, [r0]
 1085 0392 002B     		cmp	r3, #0
 1086 0394 04D0     		beq	.L33
 1087              		.loc 1 524 0 is_stmt 0 discriminator 1
 1088 0396 9C21     		mov	r1, #156
 1089 0398 C919     		add	r1, r1, r7
 1090 039a 0B68     		ldr	r3, [r1]
 1091 039c 002B     		cmp	r3, #0
 1092 039e 0FD1     		bne	.L34
 1093              	.L33:
 525:../Dave/Generated/src/UART001/UART001.c **** 					fdr_step = divisor1;
 1094              		.loc 1 525 0 is_stmt 1
 1095 03a0 A022     		mov	r2, #160
 1096 03a2 D219     		add	r2, r2, r7
 1097 03a4 1368     		ldr	r3, [r2]
 1098 03a6 B420     		mov	r0, #180
 1099 03a8 C019     		add	r0, r0, r7
 1100 03aa 0360     		str	r3, [r0]
 526:../Dave/Generated/src/UART001/UART001.c **** 					brg_pdiv = dividend1;
 1101              		.loc 1 526 0
 1102 03ac 9821     		mov	r1, #152
 1103 03ae C919     		add	r1, r1, r7
 1104 03b0 0B68     		ldr	r3, [r1]
 1105 03b2 B022     		mov	r2, #176
 1106 03b4 D219     		add	r2, r2, r7
 1107 03b6 1360     		str	r3, [r2]
 1108 03b8 56E0     		b	.L32
 1109              	.L46:
 1110 03ba C046     		.align	2
 1111              	.L45:
 1112 03bc 350C0000 		.word	3125
 1113              	.L34:
 527:../Dave/Generated/src/UART001/UART001.c **** 				}else { 
 528:../Dave/Generated/src/UART001/UART001.c **** 					/*  Find the most nearest to target division */
 529:../Dave/Generated/src/UART001/UART001.c **** 					if (UART001_labsRealType(div_factor - \
 530:../Dave/Generated/src/UART001/UART001.c **** 					    ((float) divisor1 / (float) dividend1 )) > \
 1114              		.loc 1 530 0
 1115 03c0 A023     		mov	r3, #160
 1116 03c2 DB19     		add	r3, r3, r7
 1117 03c4 1868     		ldr	r0, [r3]
 1118 03c6 FFF7FEFF 		bl	__aeabi_ui2f
 1119 03ca 041C     		add	r4, r0, #0
 1120 03cc 9821     		mov	r1, #152
 1121 03ce C919     		add	r1, r1, r7
 1122 03d0 0868     		ldr	r0, [r1]
 1123 03d2 FFF7FEFF 		bl	__aeabi_ui2f
 1124 03d6 031C     		add	r3, r0, #0
 1125 03d8 201C     		add	r0, r4, #0
 1126 03da 191C     		add	r1, r3, #0
 1127 03dc FFF7FEFF 		bl	__aeabi_fdiv
 1128 03e0 031C     		add	r3, r0, #0
 529:../Dave/Generated/src/UART001/UART001.c **** 					if (UART001_labsRealType(div_factor - \
 1129              		.loc 1 529 0
 1130 03e2 B86F     		ldr	r0, [r7, #120]
 1131 03e4 191C     		add	r1, r3, #0
 1132 03e6 FFF7FEFF 		bl	__aeabi_fsub
 1133 03ea 031C     		add	r3, r0, #0
 1134 03ec 181C     		add	r0, r3, #0
 1135 03ee FFF7FEFF 		bl	UART001_labsRealType
 1136 03f2 041C     		add	r4, r0, #0
 531:../Dave/Generated/src/UART001/UART001.c **** 					    UART001_labsRealType(div_factor - \
 532:../Dave/Generated/src/UART001/UART001.c **** 					    ((float) divisor2 / (float) dividend2 ))) 
 1137              		.loc 1 532 0
 1138 03f4 9C22     		mov	r2, #156
 1139 03f6 D219     		add	r2, r2, r7
 1140 03f8 1068     		ldr	r0, [r2]
 1141 03fa FFF7FEFF 		bl	__aeabi_ui2f
 1142 03fe 051C     		add	r5, r0, #0
 1143 0400 9423     		mov	r3, #148
 1144 0402 DB19     		add	r3, r3, r7
 1145 0404 1868     		ldr	r0, [r3]
 1146 0406 FFF7FEFF 		bl	__aeabi_ui2f
 1147 040a 031C     		add	r3, r0, #0
 1148 040c 281C     		add	r0, r5, #0
 1149 040e 191C     		add	r1, r3, #0
 1150 0410 FFF7FEFF 		bl	__aeabi_fdiv
 1151 0414 031C     		add	r3, r0, #0
 531:../Dave/Generated/src/UART001/UART001.c **** 					    UART001_labsRealType(div_factor - \
 1152              		.loc 1 531 0
 1153 0416 B86F     		ldr	r0, [r7, #120]
 1154 0418 191C     		add	r1, r3, #0
 1155 041a FFF7FEFF 		bl	__aeabi_fsub
 1156 041e 031C     		add	r3, r0, #0
 1157 0420 181C     		add	r0, r3, #0
 1158 0422 FFF7FEFF 		bl	UART001_labsRealType
 1159 0426 031C     		add	r3, r0, #0
 529:../Dave/Generated/src/UART001/UART001.c **** 					if (UART001_labsRealType(div_factor - \
 1160              		.loc 1 529 0
 1161 0428 201C     		add	r0, r4, #0
 1162 042a 191C     		add	r1, r3, #0
 1163 042c FFF7FEFF 		bl	__aeabi_fcmpgt
 1164 0430 031C     		mov	r3, r0
 1165 0432 002B     		cmp	r3, #0
 1166 0434 0CD0     		beq	.L44
 1167              	.L42:
 533:../Dave/Generated/src/UART001/UART001.c **** 					{
 534:../Dave/Generated/src/UART001/UART001.c **** 						fdr_step = divisor2;
 1168              		.loc 1 534 0
 1169 0436 9C20     		mov	r0, #156
 1170 0438 C019     		add	r0, r0, r7
 1171 043a 0368     		ldr	r3, [r0]
 1172 043c B421     		mov	r1, #180
 1173 043e C919     		add	r1, r1, r7
 1174 0440 0B60     		str	r3, [r1]
 535:../Dave/Generated/src/UART001/UART001.c **** 						brg_pdiv = dividend2;
 1175              		.loc 1 535 0
 1176 0442 9422     		mov	r2, #148
 1177 0444 D219     		add	r2, r2, r7
 1178 0446 1368     		ldr	r3, [r2]
 1179 0448 B020     		mov	r0, #176
 1180 044a C019     		add	r0, r0, r7
 1181 044c 0360     		str	r3, [r0]
 1182 044e 0BE0     		b	.L32
 1183              	.L44:
 536:../Dave/Generated/src/UART001/UART001.c **** 					}else {
 537:../Dave/Generated/src/UART001/UART001.c **** 						fdr_step = divisor1;
 1184              		.loc 1 537 0
 1185 0450 A021     		mov	r1, #160
 1186 0452 C919     		add	r1, r1, r7
 1187 0454 0B68     		ldr	r3, [r1]
 1188 0456 B422     		mov	r2, #180
 1189 0458 D219     		add	r2, r2, r7
 1190 045a 1360     		str	r3, [r2]
 538:../Dave/Generated/src/UART001/UART001.c **** 						brg_pdiv = dividend1;
 1191              		.loc 1 538 0
 1192 045c 9820     		mov	r0, #152
 1193 045e C019     		add	r0, r0, r7
 1194 0460 0368     		ldr	r3, [r0]
 1195 0462 B021     		mov	r1, #176
 1196 0464 C919     		add	r1, r1, r7
 1197 0466 0B60     		str	r3, [r1]
 1198              	.L32:
 539:../Dave/Generated/src/UART001/UART001.c **** 					}
 540:../Dave/Generated/src/UART001/UART001.c **** 				}
 541:../Dave/Generated/src/UART001/UART001.c **** 				do_while_break = 0x05U;
 1199              		.loc 1 541 0
 1200 0468 0523     		mov	r3, #5
 1201 046a 8822     		mov	r2, #136
 1202 046c D219     		add	r2, r2, r7
 1203 046e 1360     		str	r3, [r2]
 1204 0470 33E0     		b	.L37
 1205              	.L28:
 542:../Dave/Generated/src/UART001/UART001.c **** 			}
 543:../Dave/Generated/src/UART001/UART001.c **** 			else if (remainder[array_count]== 0U) 
 1206              		.loc 1 543 0
 1207 0472 3B1C     		mov	r3, r7
 1208 0474 4033     		add	r3, r3, #64
 1209 0476 9020     		mov	r0, #144
 1210 0478 C019     		add	r0, r0, r7
 1211 047a 0268     		ldr	r2, [r0]
 1212 047c 9200     		lsl	r2, r2, #2
 1213 047e D358     		ldr	r3, [r2, r3]
 1214 0480 002B     		cmp	r3, #0
 1215 0482 2AD1     		bne	.L37
 544:../Dave/Generated/src/UART001/UART001.c **** 			{
 545:../Dave/Generated/src/UART001/UART001.c **** 				fdr_step = divisor_array[array_count];
 1216              		.loc 1 545 0
 1217 0484 3B1C     		mov	r3, r7
 1218 0486 3033     		add	r3, r3, #48
 1219 0488 9021     		mov	r1, #144
 1220 048a C919     		add	r1, r1, r7
 1221 048c 0A68     		ldr	r2, [r1]
 1222 048e 9200     		lsl	r2, r2, #2
 1223 0490 D358     		ldr	r3, [r2, r3]
 1224 0492 B422     		mov	r2, #180
 1225 0494 D219     		add	r2, r2, r7
 1226 0496 1360     		str	r3, [r2]
 546:../Dave/Generated/src/UART001/UART001.c **** 				brg_pdiv = dividend_array[array_count];
 1227              		.loc 1 546 0
 1228 0498 3B1C     		mov	r3, r7
 1229 049a 2033     		add	r3, r3, #32
 1230 049c 9020     		mov	r0, #144
 1231 049e C019     		add	r0, r0, r7
 1232 04a0 0268     		ldr	r2, [r0]
 1233 04a2 9200     		lsl	r2, r2, #2
 1234 04a4 D358     		ldr	r3, [r2, r3]
 1235 04a6 B021     		mov	r1, #176
 1236 04a8 C919     		add	r1, r1, r7
 1237 04aa 0B60     		str	r3, [r1]
 547:../Dave/Generated/src/UART001/UART001.c **** 				if (swapped)
 1238              		.loc 1 547 0
 1239 04ac 3B1C     		mov	r3, r7
 1240 04ae 8333     		add	r3, r3, #131
 1241 04b0 1B78     		ldrb	r3, [r3]
 1242 04b2 002B     		cmp	r3, #0
 1243 04b4 0DD0     		beq	.L38
 548:../Dave/Generated/src/UART001/UART001.c **** 				{
 549:../Dave/Generated/src/UART001/UART001.c **** 					/* Swap fdr_step and brg_pdiv */
 550:../Dave/Generated/src/UART001/UART001.c **** 					temp = fdr_step;
 1244              		.loc 1 550 0
 1245 04b6 B422     		mov	r2, #180
 1246 04b8 D219     		add	r2, r2, r7
 1247 04ba 1368     		ldr	r3, [r2]
 1248 04bc FB67     		str	r3, [r7, #124]
 551:../Dave/Generated/src/UART001/UART001.c **** 					fdr_step = brg_pdiv;
 1249              		.loc 1 551 0
 1250 04be B020     		mov	r0, #176
 1251 04c0 C019     		add	r0, r0, r7
 1252 04c2 0368     		ldr	r3, [r0]
 1253 04c4 B421     		mov	r1, #180
 1254 04c6 C919     		add	r1, r1, r7
 1255 04c8 0B60     		str	r3, [r1]
 552:../Dave/Generated/src/UART001/UART001.c **** 					brg_pdiv = temp;
 1256              		.loc 1 552 0
 1257 04ca FB6F     		ldr	r3, [r7, #124]
 1258 04cc B022     		mov	r2, #176
 1259 04ce D219     		add	r2, r2, r7
 1260 04d0 1360     		str	r3, [r2]
 1261              	.L38:
 553:../Dave/Generated/src/UART001/UART001.c **** 				}
 554:../Dave/Generated/src/UART001/UART001.c **** 				do_while_break = 0x05U;
 1262              		.loc 1 554 0
 1263 04d2 0523     		mov	r3, #5
 1264 04d4 8820     		mov	r0, #136
 1265 04d6 C019     		add	r0, r0, r7
 1266 04d8 0360     		str	r3, [r0]
 1267              	.L37:
 555:../Dave/Generated/src/UART001/UART001.c **** 			}
 556:../Dave/Generated/src/UART001/UART001.c **** 			else {
 557:../Dave/Generated/src/UART001/UART001.c **** 			  /* Do Nothing */
 558:../Dave/Generated/src/UART001/UART001.c **** 			}
 559:../Dave/Generated/src/UART001/UART001.c **** 		} while (do_while_break != 0x05U);
 1268              		.loc 1 559 0
 1269 04da 8821     		mov	r1, #136
 1270 04dc C919     		add	r1, r1, r7
 1271 04de 0B68     		ldr	r3, [r1]
 1272 04e0 052B     		cmp	r3, #5
 1273 04e2 00D0     		beq	.LCB1104
 1274 04e4 07E6     		b	.L39	@long jump
 1275              	.LCB1104:
 560:../Dave/Generated/src/UART001/UART001.c **** 
 561:../Dave/Generated/src/UART001/UART001.c **** 	if(fdr_step >= UART001_MAX_VALUE)
 1276              		.loc 1 561 0
 1277 04e6 B423     		mov	r3, #180
 1278 04e8 DB19     		add	r3, r3, r7
 1279 04ea 1A68     		ldr	r2, [r3]
 1280 04ec 0A4B     		ldr	r3, .L47
 1281 04ee 9A42     		cmp	r2, r3
 1282 04f0 03D9     		bls	.L40
 562:../Dave/Generated/src/UART001/UART001.c **** 	{
 563:../Dave/Generated/src/UART001/UART001.c **** 	   fdr_step = 1023U;
 1283              		.loc 1 563 0
 1284 04f2 094B     		ldr	r3, .L47
 1285 04f4 B420     		mov	r0, #180
 1286 04f6 C019     		add	r0, r0, r7
 1287 04f8 0360     		str	r3, [r0]
 1288              	.L40:
 564:../Dave/Generated/src/UART001/UART001.c **** 	}
 565:../Dave/Generated/src/UART001/UART001.c **** 
 566:../Dave/Generated/src/UART001/UART001.c **** 	*Step = fdr_step;
 1289              		.loc 1 566 0
 1290 04fa 7B68     		ldr	r3, [r7, #4]
 1291 04fc B421     		mov	r1, #180
 1292 04fe C919     		add	r1, r1, r7
 1293 0500 0A68     		ldr	r2, [r1]
 1294 0502 1A60     		str	r2, [r3]
 567:../Dave/Generated/src/UART001/UART001.c **** 
 568:../Dave/Generated/src/UART001/UART001.c **** 	*Pdiv = brg_pdiv - 1U;
 1295              		.loc 1 568 0
 1296 0504 B022     		mov	r2, #176
 1297 0506 D219     		add	r2, r2, r7
 1298 0508 1368     		ldr	r3, [r2]
 1299 050a 5A1E     		sub	r2, r3, #1
 1300 050c BB68     		ldr	r3, [r7, #8]
 1301 050e 1A60     		str	r2, [r3]
 569:../Dave/Generated/src/UART001/UART001.c **** }
 1302              		.loc 1 569 0
 1303 0510 BD46     		mov	sp, r7
 1304 0512 2EB0     		add	sp, sp, #184
 1305              		@ sp needed for prologue
 1306 0514 B0BD     		pop	{r4, r5, r7, pc}
 1307              	.L48:
 1308 0516 C046     		.align	2
 1309              	.L47:
 1310 0518 FF030000 		.word	1023
 1311              		.cfi_endproc
 1312              	.LFE36:
 1314              		.section	.text.UART001_Init,"ax",%progbits
 1315              		.align	2
 1316              		.global	UART001_Init
 1317              		.code	16
 1318              		.thumb_func
 1320              	UART001_Init:
 1321              	.LFB37:
 570:../Dave/Generated/src/UART001/UART001.c **** /*******************************************************************************
 571:../Dave/Generated/src/UART001/UART001.c **** **                      Public Function Definitions                           **
 572:../Dave/Generated/src/UART001/UART001.c **** *******************************************************************************/
 573:../Dave/Generated/src/UART001/UART001.c **** /*******************************************************************************
 574:../Dave/Generated/src/UART001/UART001.c ****  * @brief This function initialises the App, based on User provided
 575:../Dave/Generated/src/UART001/UART001.c ****  * configuration. 
 576:../Dave/Generated/src/UART001/UART001.c ****  * 
 577:../Dave/Generated/src/UART001/UART001.c ****  * @param[in]  None
 578:../Dave/Generated/src/UART001/UART001.c ****  *
 579:../Dave/Generated/src/UART001/UART001.c ****  * @return  None <BR>
 580:../Dave/Generated/src/UART001/UART001.c ****  *
 581:../Dave/Generated/src/UART001/UART001.c ****  * <b>Reentrant: No </b><BR>
 582:../Dave/Generated/src/UART001/UART001.c ****  *
 583:../Dave/Generated/src/UART001/UART001.c ****  ******************************************************************************/
 584:../Dave/Generated/src/UART001/UART001.c **** void UART001_Init(void)
 585:../Dave/Generated/src/UART001/UART001.c **** {
 1322              		.loc 1 585 0
 1323              		.cfi_startproc
 1324 0000 80B5     		push	{r7, lr}
 1325              	.LCFI12:
 1326              		.cfi_def_cfa_offset 8
 1327              		.cfi_offset 7, -8
 1328              		.cfi_offset 14, -4
 1329 0002 82B0     		sub	sp, sp, #8
 1330              	.LCFI13:
 1331              		.cfi_def_cfa_offset 16
 1332 0004 00AF     		add	r7, sp, #0
 1333              	.LCFI14:
 1334              		.cfi_def_cfa_register 7
 586:../Dave/Generated/src/UART001/UART001.c **** 	/* <<<DD_UART001_API_1>>> */
 587:../Dave/Generated/src/UART001/UART001.c **** 	 uint32_t LoopIndex;
 588:../Dave/Generated/src/UART001/UART001.c **** 		
 589:../Dave/Generated/src/UART001/UART001.c ****     #if (__TARGET_DEVICE__ != XMC45)
 590:../Dave/Generated/src/UART001/UART001.c **** 	#if ((__TARGET_DEVICE__ == XMC13) || \
 591:../Dave/Generated/src/UART001/UART001.c **** 	     (__TARGET_DEVICE__ == XMC12) || \
 592:../Dave/Generated/src/UART001/UART001.c **** 	     (__TARGET_DEVICE__ == XMC11))
 593:../Dave/Generated/src/UART001/UART001.c **** 	  /* Disable the USIC0/USIC1 clock gating for XMC1000 devices */	     
 594:../Dave/Generated/src/UART001/UART001.c **** 	  SCU_GENERAL->PASSWD = 0x000000C0UL;
 1335              		.loc 1 594 0
 1336 0006 1D4B     		ldr	r3, .L54
 1337 0008 C022     		mov	r2, #192
 1338 000a 5A62     		str	r2, [r3, #36]
 595:../Dave/Generated/src/UART001/UART001.c **** 	  WR_REG(SCU_CLK->CLKCR, SCU_CLK_CLKCR_CNTADJ_Msk, \
 1339              		.loc 1 595 0
 1340 000c 1C4B     		ldr	r3, .L54+4
 1341 000e 1C4A     		ldr	r2, .L54+4
 1342 0010 1268     		ldr	r2, [r2]
 1343 0012 1C49     		ldr	r1, .L54+8
 1344 0014 0A43     		orr	r2, r1
 1345 0016 1A60     		str	r2, [r3]
 596:../Dave/Generated/src/UART001/UART001.c **** 	                                SCU_CLK_CLKCR_CNTADJ_Pos,CLK002_DELAYCNT);
 597:../Dave/Generated/src/UART001/UART001.c **** 
 598:../Dave/Generated/src/UART001/UART001.c **** 	  #if defined(UART001_PER0_USIC0_ENABLED)
 599:../Dave/Generated/src/UART001/UART001.c **** 	  SET_BIT(SCU_CLK->CGATCLR0, SCU_CLK_CGATCLR0_USIC0_Pos);
 1346              		.loc 1 599 0
 1347 0018 194B     		ldr	r3, .L54+4
 1348 001a 194A     		ldr	r2, .L54+4
 1349 001c 1269     		ldr	r2, [r2, #16]
 1350 001e 0821     		mov	r1, #8
 1351 0020 0A43     		orr	r2, r1
 1352 0022 1A61     		str	r2, [r3, #16]
 600:../Dave/Generated/src/UART001/UART001.c ****       #endif
 601:../Dave/Generated/src/UART001/UART001.c ****       #if defined(UART001_PER1_USIC1_ENABLED)
 602:../Dave/Generated/src/UART001/UART001.c **** 	  SET_BIT(SCU_CLK->CGATCLR1, SCU_CLK_CGATCLR1_USIC1_Pos);
 603:../Dave/Generated/src/UART001/UART001.c **** 	  #endif
 604:../Dave/Generated/src/UART001/UART001.c **** 	  while ((SCU_CLK->CLKCR)&(SCU_CLK_CLKCR_VDDC2LOW_Msk))
 1353              		.loc 1 604 0
 1354 0024 C046     		mov	r8, r8
 1355              	.L50:
 1356              		.loc 1 604 0 is_stmt 0 discriminator 1
 1357 0026 164B     		ldr	r3, .L54+4
 1358 0028 1A68     		ldr	r2, [r3]
 1359 002a 8023     		mov	r3, #128
 1360 002c DB05     		lsl	r3, r3, #23
 1361 002e 1340     		and	r3, r2
 1362 0030 F9D1     		bne	.L50
 605:../Dave/Generated/src/UART001/UART001.c **** 	  {
 606:../Dave/Generated/src/UART001/UART001.c **** 	  	;
 607:../Dave/Generated/src/UART001/UART001.c **** 	  }
 608:../Dave/Generated/src/UART001/UART001.c **** 	  SCU_GENERAL->PASSWD = 0x000000C3UL;
 1363              		.loc 1 608 0 is_stmt 1
 1364 0032 124B     		ldr	r3, .L54
 1365 0034 C322     		mov	r2, #195
 1366 0036 5A62     		str	r2, [r3, #36]
 609:../Dave/Generated/src/UART001/UART001.c ****    #else
 610:../Dave/Generated/src/UART001/UART001.c **** 	/* Disable the USIC0/USIC1 clock gating for XMC4400 and XMC4200 devices*/
 611:../Dave/Generated/src/UART001/UART001.c ****    #if defined(UART001_PER0_USIC0_ENABLED)
 612:../Dave/Generated/src/UART001/UART001.c **** 	  SET_BIT(SCU_CLK->CGATCLR0, SCU_CLK_CGATCLR0_USIC0_Pos);
 613:../Dave/Generated/src/UART001/UART001.c ****    #endif
 614:../Dave/Generated/src/UART001/UART001.c ****    #if defined(UART001_PER1_USIC1_ENABLED)  
 615:../Dave/Generated/src/UART001/UART001.c **** 	  SET_BIT(SCU_CLK->CGATCLR1, SCU_CLK_CGATCLR1_USIC1_Pos);
 616:../Dave/Generated/src/UART001/UART001.c ****    #endif
 617:../Dave/Generated/src/UART001/UART001.c ****    #endif
 618:../Dave/Generated/src/UART001/UART001.c ****    #endif
 619:../Dave/Generated/src/UART001/UART001.c **** 
 620:../Dave/Generated/src/UART001/UART001.c ****    #if ((__TARGET_DEVICE__ == XMC45) || \
 621:../Dave/Generated/src/UART001/UART001.c **** 	    (__TARGET_DEVICE__ == XMC44) || \
 622:../Dave/Generated/src/UART001/UART001.c **** 	    (__TARGET_DEVICE__ == XMC42))
 623:../Dave/Generated/src/UART001/UART001.c **** 	  /* Reset the Peripheral*/
 624:../Dave/Generated/src/UART001/UART001.c ****    #if defined(UART001_PER0_USIC0_ENABLED)
 625:../Dave/Generated/src/UART001/UART001.c **** 	  RESET001_DeassertReset(PER0_USIC0);
 626:../Dave/Generated/src/UART001/UART001.c ****    #endif
 627:../Dave/Generated/src/UART001/UART001.c ****    #if defined(UART001_PER1_USIC1_ENABLED)
 628:../Dave/Generated/src/UART001/UART001.c **** 	  RESET001_DeassertReset(PER1_USIC1); 
 629:../Dave/Generated/src/UART001/UART001.c ****    #endif
 630:../Dave/Generated/src/UART001/UART001.c ****    #if defined(UART001_PER1_USIC2_ENABLED)
 631:../Dave/Generated/src/UART001/UART001.c **** 	  RESET001_DeassertReset(PER1_USIC2); 
 632:../Dave/Generated/src/UART001/UART001.c ****    #endif 
 633:../Dave/Generated/src/UART001/UART001.c ****    #endif  
 634:../Dave/Generated/src/UART001/UART001.c **** 	  
 635:../Dave/Generated/src/UART001/UART001.c ****    for (LoopIndex = (uint32_t)0; LoopIndex < (uint32_t)UART001_NUM_HANDLES; \
 1367              		.loc 1 635 0
 1368 0038 0023     		mov	r3, #0
 1369 003a 7B60     		str	r3, [r7, #4]
 1370 003c 17E0     		b	.L51
 1371              	.L53:
 636:../Dave/Generated/src/UART001/UART001.c **** 	                           LoopIndex++)
 637:../Dave/Generated/src/UART001/UART001.c ****    {
 638:../Dave/Generated/src/UART001/UART001.c **** 	  if (UART001_HandleArray[LoopIndex]->Mode == UART_HALFDUPLEX)
 1372              		.loc 1 638 0
 1373 003e 124B     		ldr	r3, .L54+12
 1374 0040 7A68     		ldr	r2, [r7, #4]
 1375 0042 9200     		lsl	r2, r2, #2
 1376 0044 D358     		ldr	r3, [r2, r3]
 1377 0046 1B7D     		ldrb	r3, [r3, #20]
 1378 0048 012B     		cmp	r3, #1
 1379 004a 06D1     		bne	.L52
 639:../Dave/Generated/src/UART001/UART001.c **** 	  {
 640:../Dave/Generated/src/UART001/UART001.c **** 	   /*Configure TX Pin in Open-drain mode to allow the Wired-AND connection*/
 641:../Dave/Generated/src/UART001/UART001.c **** 		UART001_lConfigTXPin(UART001_HandleArray[LoopIndex]);
 1380              		.loc 1 641 0
 1381 004c 0E4B     		ldr	r3, .L54+12
 1382 004e 7A68     		ldr	r2, [r7, #4]
 1383 0050 9200     		lsl	r2, r2, #2
 1384 0052 D358     		ldr	r3, [r2, r3]
 1385 0054 181C     		mov	r0, r3
 1386 0056 FFF7FEFF 		bl	UART001_lConfigTXPin
 1387              	.L52:
 642:../Dave/Generated/src/UART001/UART001.c **** 	  }
 643:../Dave/Generated/src/UART001/UART001.c **** 	  
 644:../Dave/Generated/src/UART001/UART001.c **** 	  UART001_lInit(UART001_HandleArray[LoopIndex]);
 1388              		.loc 1 644 0
 1389 005a 0B4B     		ldr	r3, .L54+12
 1390 005c 7A68     		ldr	r2, [r7, #4]
 1391 005e 9200     		lsl	r2, r2, #2
 1392 0060 D358     		ldr	r3, [r2, r3]
 1393 0062 181C     		mov	r0, r3
 1394 0064 FFF7FEFF 		bl	UART001_lInit
 636:../Dave/Generated/src/UART001/UART001.c **** 	                           LoopIndex++)
 1395              		.loc 1 636 0
 1396 0068 7B68     		ldr	r3, [r7, #4]
 1397 006a 0133     		add	r3, r3, #1
 1398 006c 7B60     		str	r3, [r7, #4]
 1399              	.L51:
 635:../Dave/Generated/src/UART001/UART001.c ****    for (LoopIndex = (uint32_t)0; LoopIndex < (uint32_t)UART001_NUM_HANDLES; \
 1400              		.loc 1 635 0 discriminator 1
 1401 006e 7B68     		ldr	r3, [r7, #4]
 1402 0070 002B     		cmp	r3, #0
 1403 0072 E4D0     		beq	.L53
 645:../Dave/Generated/src/UART001/UART001.c ****    }
 646:../Dave/Generated/src/UART001/UART001.c ****    
 647:../Dave/Generated/src/UART001/UART001.c **** }
 1404              		.loc 1 647 0
 1405 0074 BD46     		mov	sp, r7
 1406 0076 02B0     		add	sp, sp, #8
 1407              		@ sp needed for prologue
 1408 0078 80BD     		pop	{r7, pc}
 1409              	.L55:
 1410 007a C046     		.align	2
 1411              	.L54:
 1412 007c 00000140 		.word	1073807360
 1413 0080 00030140 		.word	1073808128
 1414 0084 0000F03F 		.word	1072693248
 1415 0088 00000000 		.word	UART001_HandleArray
 1416              		.cfi_endproc
 1417              	.LFE37:
 1419              		.section	.text.UART001_DeInit,"ax",%progbits
 1420              		.align	2
 1421              		.global	UART001_DeInit
 1422              		.code	16
 1423              		.thumb_func
 1425              	UART001_DeInit:
 1426              	.LFB38:
 648:../Dave/Generated/src/UART001/UART001.c **** /*******************************************************************************
 649:../Dave/Generated/src/UART001/UART001.c ****  * @brief This function de-initialises the USIC channel configurations.
 650:../Dave/Generated/src/UART001/UART001.c ****  * 
 651:../Dave/Generated/src/UART001/UART001.c ****  * @param[in]  Handle of type UART001_HandleType
 652:../Dave/Generated/src/UART001/UART001.c ****  *
 653:../Dave/Generated/src/UART001/UART001.c ****  * @return  None <BR>
 654:../Dave/Generated/src/UART001/UART001.c ****  *
 655:../Dave/Generated/src/UART001/UART001.c ****  * <b>Reentrant: No </b><BR>
 656:../Dave/Generated/src/UART001/UART001.c ****  *
 657:../Dave/Generated/src/UART001/UART001.c ****  ******************************************************************************/
 658:../Dave/Generated/src/UART001/UART001.c ****  void  UART001_DeInit (const UART001_HandleType* Handle)
 659:../Dave/Generated/src/UART001/UART001.c **** {
 1427              		.loc 1 659 0
 1428              		.cfi_startproc
 1429 0000 80B5     		push	{r7, lr}
 1430              	.LCFI15:
 1431              		.cfi_def_cfa_offset 8
 1432              		.cfi_offset 7, -8
 1433              		.cfi_offset 14, -4
 1434 0002 82B0     		sub	sp, sp, #8
 1435              	.LCFI16:
 1436              		.cfi_def_cfa_offset 16
 1437 0004 00AF     		add	r7, sp, #0
 1438              	.LCFI17:
 1439              		.cfi_def_cfa_register 7
 1440 0006 7860     		str	r0, [r7, #4]
 660:../Dave/Generated/src/UART001/UART001.c ****   /* <<<DD_UART001_API_2>>> */
 661:../Dave/Generated/src/UART001/UART001.c ****   /* Place holder function */      
 662:../Dave/Generated/src/UART001/UART001.c **** }
 1441              		.loc 1 662 0
 1442 0008 BD46     		mov	sp, r7
 1443 000a 02B0     		add	sp, sp, #8
 1444              		@ sp needed for prologue
 1445 000c 80BD     		pop	{r7, pc}
 1446              		.cfi_endproc
 1447              	.LFE38:
 1449 000e C046     		.section	.text.UART001_Configure,"ax",%progbits
 1450              		.align	2
 1451              		.global	UART001_Configure
 1452              		.code	16
 1453              		.thumb_func
 1455              	UART001_Configure:
 1456              	.LFB39:
 663:../Dave/Generated/src/UART001/UART001.c ****  /******************************************************************************
 664:../Dave/Generated/src/UART001/UART001.c ****   * @brief Function which allows changing of baud rate, parity & stop bit  
 665:../Dave/Generated/src/UART001/UART001.c ****   * configuration at run time.
 666:../Dave/Generated/src/UART001/UART001.c ****   *
 667:../Dave/Generated/src/UART001/UART001.c ****   *
 668:../Dave/Generated/src/UART001/UART001.c ****   * @param[in]  Handle USIC device handle
 669:../Dave/Generated/src/UART001/UART001.c ****   * @param[in]  BaudRate Desired Baud Rate in Bauds
 670:../Dave/Generated/src/UART001/UART001.c ****   * @param[in]  Parity Desired Parity
 671:../Dave/Generated/src/UART001/UART001.c ****   * @param[in]  Stopbit Desired no of Stop bit(s)
 672:../Dave/Generated/src/UART001/UART001.c ****   *
 673:../Dave/Generated/src/UART001/UART001.c ****   * @return     status <BR>
 674:../Dave/Generated/src/UART001/UART001.c ****   *             DAVEApp_SUCCESS	: for success.<BR>
 675:../Dave/Generated/src/UART001/UART001.c ****   *             UART001_ERROR  	: for failure case.<BR>
 676:../Dave/Generated/src/UART001/UART001.c ****   *             UART001_BUSY 	: UART channel is busy.<BR>
 677:../Dave/Generated/src/UART001/UART001.c ****   *
 678:../Dave/Generated/src/UART001/UART001.c ****   * <b>Reentrant: NO </b><BR>
 679:../Dave/Generated/src/UART001/UART001.c ****   *
 680:../Dave/Generated/src/UART001/UART001.c ****   *****************************************************************************/
 681:../Dave/Generated/src/UART001/UART001.c **** status_t  UART001_Configure
 682:../Dave/Generated/src/UART001/UART001.c **** ( 
 683:../Dave/Generated/src/UART001/UART001.c ****   const UART001_HandleType* Handle,
 684:../Dave/Generated/src/UART001/UART001.c ****   uint32_t BaudRate,
 685:../Dave/Generated/src/UART001/UART001.c ****   UART_ParityType Parity,
 686:../Dave/Generated/src/UART001/UART001.c ****   UART_StopBitType Stopbit
 687:../Dave/Generated/src/UART001/UART001.c **** )
 688:../Dave/Generated/src/UART001/UART001.c **** {
 1457              		.loc 1 688 0
 1458              		.cfi_startproc
 1459 0000 80B5     		push	{r7, lr}
 1460              	.LCFI18:
 1461              		.cfi_def_cfa_offset 8
 1462              		.cfi_offset 7, -8
 1463              		.cfi_offset 14, -4
 1464 0002 8AB0     		sub	sp, sp, #40
 1465              	.LCFI19:
 1466              		.cfi_def_cfa_offset 48
 1467 0004 00AF     		add	r7, sp, #0
 1468              	.LCFI20:
 1469              		.cfi_def_cfa_register 7
 1470 0006 F860     		str	r0, [r7, #12]
 1471 0008 B960     		str	r1, [r7, #8]
 1472 000a 111C     		mov	r1, r2
 1473 000c 1A1C     		mov	r2, r3
 1474 000e FB1D     		add	r3, r7, #7
 1475 0010 1970     		strb	r1, [r3]
 1476 0012 BB1D     		add	r3, r7, #6
 1477 0014 1A70     		strb	r2, [r3]
 689:../Dave/Generated/src/UART001/UART001.c ****    uint32_t Brg_Pdiv = 0x00U;
 1478              		.loc 1 689 0
 1479 0016 0023     		mov	r3, #0
 1480 0018 7B61     		str	r3, [r7, #20]
 690:../Dave/Generated/src/UART001/UART001.c ****    uint32_t Fdr_Step = 0x00U;
 1481              		.loc 1 690 0
 1482 001a 0023     		mov	r3, #0
 1483 001c 3B61     		str	r3, [r7, #16]
 691:../Dave/Generated/src/UART001/UART001.c ****    uint32_t TXIDLE_status;
 692:../Dave/Generated/src/UART001/UART001.c ****    uint32_t RXIDLE_status;
 693:../Dave/Generated/src/UART001/UART001.c ****    USIC_CH_TypeDef* UartRegs = Handle->UartRegs;
 1484              		.loc 1 693 0
 1485 001e FB68     		ldr	r3, [r7, #12]
 1486 0020 1B68     		ldr	r3, [r3]
 1487 0022 3B62     		str	r3, [r7, #32]
 694:../Dave/Generated/src/UART001/UART001.c ****    status_t Status = (status_t)UART001_ERROR;
 1488              		.loc 1 694 0
 1489 0024 0523     		mov	r3, #5
 1490 0026 7B62     		str	r3, [r7, #36]
 695:../Dave/Generated/src/UART001/UART001.c ****    
 696:../Dave/Generated/src/UART001/UART001.c ****    /* <<<DD_UART001_API_3>>>*/
 697:../Dave/Generated/src/UART001/UART001.c **** 
 698:../Dave/Generated/src/UART001/UART001.c ****    TXIDLE_status = (uint32_t)\
 699:../Dave/Generated/src/UART001/UART001.c ****                  RD_REG(UartRegs->PSR_ASCMode,USIC_CH_PSR_ASCMode_TXIDLE_Msk, \
 1491              		.loc 1 699 0
 1492 0028 3B6A     		ldr	r3, [r7, #32]
 1493 002a 9A6C     		ldr	r2, [r3, #72]
 698:../Dave/Generated/src/UART001/UART001.c ****    TXIDLE_status = (uint32_t)\
 1494              		.loc 1 698 0
 1495 002c 0123     		mov	r3, #1
 1496 002e 1340     		and	r3, r2
 1497 0030 FB61     		str	r3, [r7, #28]
 700:../Dave/Generated/src/UART001/UART001.c **** 	                       USIC_CH_PSR_ASCMode_TXIDLE_Pos);
 701:../Dave/Generated/src/UART001/UART001.c **** 
 702:../Dave/Generated/src/UART001/UART001.c ****    RXIDLE_status = (uint32_t)\
 703:../Dave/Generated/src/UART001/UART001.c ****                  RD_REG(UartRegs->PSR_ASCMode,USIC_CH_PSR_ASCMode_RXIDLE_Msk, \
 1498              		.loc 1 703 0
 1499 0032 3B6A     		ldr	r3, [r7, #32]
 1500 0034 9A6C     		ldr	r2, [r3, #72]
 1501 0036 0223     		mov	r3, #2
 1502 0038 1340     		and	r3, r2
 702:../Dave/Generated/src/UART001/UART001.c ****    RXIDLE_status = (uint32_t)\
 1503              		.loc 1 702 0
 1504 003a 5B08     		lsr	r3, r3, #1
 1505 003c BB61     		str	r3, [r7, #24]
 704:../Dave/Generated/src/UART001/UART001.c **** 	                       USIC_CH_PSR_ASCMode_RXIDLE_Pos);
 705:../Dave/Generated/src/UART001/UART001.c ****    if(( TXIDLE_status & RXIDLE_status) == 0x01U)
 1506              		.loc 1 705 0
 1507 003e FB69     		ldr	r3, [r7, #28]
 1508 0040 BA69     		ldr	r2, [r7, #24]
 1509 0042 1340     		and	r3, r2
 1510 0044 012B     		cmp	r3, #1
 1511 0046 56D1     		bne	.L58
 706:../Dave/Generated/src/UART001/UART001.c ****     {
 707:../Dave/Generated/src/UART001/UART001.c ****       /* Disable UART mode before configuring all USIC registers to avoid 
 708:../Dave/Generated/src/UART001/UART001.c ****        * unintended edges */ 
 709:../Dave/Generated/src/UART001/UART001.c ****       UartRegs->CCR &= ~( ((uint32_t)(UART_MODE  & USIC_CH_CCR_MODE_Msk)));  
 1512              		.loc 1 709 0
 1513 0048 3B6A     		ldr	r3, [r7, #32]
 1514 004a 1B6C     		ldr	r3, [r3, #64]
 1515 004c 0222     		mov	r2, #2
 1516 004e 191C     		mov	r1, r3
 1517 0050 9143     		bic	r1, r2
 1518 0052 0A1C     		mov	r2, r1
 1519 0054 3B6A     		ldr	r3, [r7, #32]
 1520 0056 1A64     		str	r2, [r3, #64]
 710:../Dave/Generated/src/UART001/UART001.c **** 	  
 711:../Dave/Generated/src/UART001/UART001.c ****       /* Configuration of USIC Channel Fractional Divider */
 712:../Dave/Generated/src/UART001/UART001.c ****       UART001_lConfigureBaudRate(BaudRate,&Brg_Pdiv,&Fdr_Step);
 1521              		.loc 1 712 0
 1522 0058 B968     		ldr	r1, [r7, #8]
 1523 005a 3A1C     		mov	r2, r7
 1524 005c 1432     		add	r2, r2, #20
 1525 005e 3B1C     		mov	r3, r7
 1526 0060 1033     		add	r3, r3, #16
 1527 0062 081C     		mov	r0, r1
 1528 0064 111C     		mov	r1, r2
 1529 0066 1A1C     		mov	r2, r3
 1530 0068 FFF7FEFF 		bl	UART001_lConfigureBaudRate
 713:../Dave/Generated/src/UART001/UART001.c **** 
 714:../Dave/Generated/src/UART001/UART001.c ****       /* Step value: 0x3FF */
 715:../Dave/Generated/src/UART001/UART001.c ****       UartRegs->FDR &= ~(USIC_CH_FDR_STEP_Msk);
 1531              		.loc 1 715 0
 1532 006c 3B6A     		ldr	r3, [r7, #32]
 1533 006e 1B69     		ldr	r3, [r3, #16]
 1534 0070 9B0A     		lsr	r3, r3, #10
 1535 0072 9A02     		lsl	r2, r3, #10
 1536 0074 3B6A     		ldr	r3, [r7, #32]
 1537 0076 1A61     		str	r2, [r3, #16]
 716:../Dave/Generated/src/UART001/UART001.c ****       UartRegs->FDR |= ( Fdr_Step & USIC_CH_FDR_STEP_Msk);
 1538              		.loc 1 716 0
 1539 0078 3B6A     		ldr	r3, [r7, #32]
 1540 007a 1A69     		ldr	r2, [r3, #16]
 1541 007c 3B69     		ldr	r3, [r7, #16]
 1542 007e 9B05     		lsl	r3, r3, #22
 1543 0080 9B0D     		lsr	r3, r3, #22
 1544 0082 1A43     		orr	r2, r3
 1545 0084 3B6A     		ldr	r3, [r7, #32]
 1546 0086 1A61     		str	r2, [r3, #16]
 717:../Dave/Generated/src/UART001/UART001.c ****               
 718:../Dave/Generated/src/UART001/UART001.c ****       /* The PreDivider for CTQ, PCTQ = 0  */
 719:../Dave/Generated/src/UART001/UART001.c ****       /* The Denominator for CTQ, DCTQ = 16 */
 720:../Dave/Generated/src/UART001/UART001.c **** 
 721:../Dave/Generated/src/UART001/UART001.c ****       UartRegs->BRG &= ~(USIC_CH_BRG_PDIV_Msk);
 1547              		.loc 1 721 0
 1548 0088 3B6A     		ldr	r3, [r7, #32]
 1549 008a 5A69     		ldr	r2, [r3, #20]
 1550 008c 1D4B     		ldr	r3, .L61
 1551 008e 1A40     		and	r2, r3
 1552 0090 3B6A     		ldr	r3, [r7, #32]
 1553 0092 5A61     		str	r2, [r3, #20]
 722:../Dave/Generated/src/UART001/UART001.c ****       UartRegs->BRG |= ((((uint32_t)Brg_Pdiv  << USIC_CH_BRG_PDIV_Pos) \
 1554              		.loc 1 722 0
 1555 0094 3B6A     		ldr	r3, [r7, #32]
 1556 0096 5A69     		ldr	r2, [r3, #20]
 1557 0098 7B69     		ldr	r3, [r7, #20]
 1558 009a 1904     		lsl	r1, r3, #16
 723:../Dave/Generated/src/UART001/UART001.c ****     		                                          &  USIC_CH_BRG_PDIV_Msk));
 1559              		.loc 1 723 0
 1560 009c 1A4B     		ldr	r3, .L61+4
 1561 009e 0B40     		and	r3, r1
 722:../Dave/Generated/src/UART001/UART001.c ****       UartRegs->BRG |= ((((uint32_t)Brg_Pdiv  << USIC_CH_BRG_PDIV_Pos) \
 1562              		.loc 1 722 0
 1563 00a0 1A43     		orr	r2, r3
 1564 00a2 3B6A     		ldr	r3, [r7, #32]
 1565 00a4 5A61     		str	r2, [r3, #20]
 724:../Dave/Generated/src/UART001/UART001.c **** 
 725:../Dave/Generated/src/UART001/UART001.c ****       /* Configure StopBit */
 726:../Dave/Generated/src/UART001/UART001.c ****       UartRegs->PCR_ASCMode &= ~(USIC_CH_PCR_ASCMode_STPB_Msk);
 1566              		.loc 1 726 0
 1567 00a6 3B6A     		ldr	r3, [r7, #32]
 1568 00a8 DB6B     		ldr	r3, [r3, #60]
 1569 00aa 0222     		mov	r2, #2
 1570 00ac 191C     		mov	r1, r3
 1571 00ae 9143     		bic	r1, r2
 1572 00b0 0A1C     		mov	r2, r1
 1573 00b2 3B6A     		ldr	r3, [r7, #32]
 1574 00b4 DA63     		str	r2, [r3, #60]
 727:../Dave/Generated/src/UART001/UART001.c ****       UartRegs->PCR_ASCMode |= \
 1575              		.loc 1 727 0
 1576 00b6 3B6A     		ldr	r3, [r7, #32]
 1577 00b8 DA6B     		ldr	r2, [r3, #60]
 728:../Dave/Generated/src/UART001/UART001.c ****                       (((uint32_t)Stopbit << USIC_CH_PCR_ASCMode_STPB_Pos) & \
 1578              		.loc 1 728 0
 1579 00ba BB1D     		add	r3, r7, #6
 1580 00bc 1B78     		ldrb	r3, [r3]
 1581 00be 5900     		lsl	r1, r3, #1
 1582 00c0 0223     		mov	r3, #2
 1583 00c2 0B40     		and	r3, r1
 727:../Dave/Generated/src/UART001/UART001.c ****       UartRegs->PCR_ASCMode |= \
 1584              		.loc 1 727 0
 1585 00c4 1A43     		orr	r2, r3
 1586 00c6 3B6A     		ldr	r3, [r7, #32]
 1587 00c8 DA63     		str	r2, [r3, #60]
 729:../Dave/Generated/src/UART001/UART001.c ****                        USIC_CH_PCR_ASCMode_STPB_Msk);
 730:../Dave/Generated/src/UART001/UART001.c ****           
 731:../Dave/Generated/src/UART001/UART001.c ****       /* Configure Parity*/
 732:../Dave/Generated/src/UART001/UART001.c ****       UartRegs->CCR &= ~(USIC_CH_CCR_PM_Msk);
 1588              		.loc 1 732 0
 1589 00ca 3B6A     		ldr	r3, [r7, #32]
 1590 00cc 1A6C     		ldr	r2, [r3, #64]
 1591 00ce 0F4B     		ldr	r3, .L61+8
 1592 00d0 1A40     		and	r2, r3
 1593 00d2 3B6A     		ldr	r3, [r7, #32]
 1594 00d4 1A64     		str	r2, [r3, #64]
 733:../Dave/Generated/src/UART001/UART001.c ****       UartRegs->CCR |= (((UART_MODE  & USIC_CH_CCR_MODE_Msk)) | \
 1595              		.loc 1 733 0
 1596 00d6 3B6A     		ldr	r3, [r7, #32]
 1597 00d8 1A6C     		ldr	r2, [r3, #64]
 734:../Dave/Generated/src/UART001/UART001.c ****                         (((uint32_t)Parity  << USIC_CH_CCR_PM_Pos) & \
 1598              		.loc 1 734 0
 1599 00da FB1D     		add	r3, r7, #7
 1600 00dc 1B78     		ldrb	r3, [r3]
 1601 00de 1902     		lsl	r1, r3, #8
 1602 00e0 C023     		mov	r3, #192
 1603 00e2 9B00     		lsl	r3, r3, #2
 1604 00e4 0B40     		and	r3, r1
 733:../Dave/Generated/src/UART001/UART001.c ****       UartRegs->CCR |= (((UART_MODE  & USIC_CH_CCR_MODE_Msk)) | \
 1605              		.loc 1 733 0
 1606 00e6 1343     		orr	r3, r2
 1607 00e8 0222     		mov	r2, #2
 1608 00ea 1A43     		orr	r2, r3
 1609 00ec 3B6A     		ldr	r3, [r7, #32]
 1610 00ee 1A64     		str	r2, [r3, #64]
 735:../Dave/Generated/src/UART001/UART001.c ****                                                        USIC_CH_CCR_PM_Msk));
 736:../Dave/Generated/src/UART001/UART001.c **** 
 737:../Dave/Generated/src/UART001/UART001.c ****       Status = (status_t)DAVEApp_SUCCESS;
 1611              		.loc 1 737 0
 1612 00f0 0023     		mov	r3, #0
 1613 00f2 7B62     		str	r3, [r7, #36]
 1614 00f4 01E0     		b	.L59
 1615              	.L58:
 738:../Dave/Generated/src/UART001/UART001.c ****     }
 739:../Dave/Generated/src/UART001/UART001.c ****     else
 740:../Dave/Generated/src/UART001/UART001.c ****     {
 741:../Dave/Generated/src/UART001/UART001.c ****       Status = (status_t)UART001_BUSY;
 1616              		.loc 1 741 0
 1617 00f6 0323     		mov	r3, #3
 1618 00f8 7B62     		str	r3, [r7, #36]
 1619              	.L59:
 742:../Dave/Generated/src/UART001/UART001.c ****       DBG002_ERROR(APP_GID, DBG002_MESSAGEID_LITERAL, sizeof(Status), &Status);
 743:../Dave/Generated/src/UART001/UART001.c ****     }
 744:../Dave/Generated/src/UART001/UART001.c ****   
 745:../Dave/Generated/src/UART001/UART001.c ****   return Status;
 1620              		.loc 1 745 0
 1621 00fa 7B6A     		ldr	r3, [r7, #36]
 746:../Dave/Generated/src/UART001/UART001.c **** }
 1622              		.loc 1 746 0
 1623 00fc 181C     		mov	r0, r3
 1624 00fe BD46     		mov	sp, r7
 1625 0100 0AB0     		add	sp, sp, #40
 1626              		@ sp needed for prologue
 1627 0102 80BD     		pop	{r7, pc}
 1628              	.L62:
 1629              		.align	2
 1630              	.L61:
 1631 0104 FFFF00FC 		.word	-67043329
 1632 0108 0000FF03 		.word	67043328
 1633 010c FFFCFFFF 		.word	-769
 1634              		.cfi_endproc
 1635              	.LFE39:
 1637              		.section	.text.UART001_ReadDataMultiple,"ax",%progbits
 1638              		.align	2
 1639              		.global	UART001_ReadDataMultiple
 1640              		.code	16
 1641              		.thumb_func
 1643              	UART001_ReadDataMultiple:
 1644              	.LFB40:
 747:../Dave/Generated/src/UART001/UART001.c **** 
 748:../Dave/Generated/src/UART001/UART001.c **** /*******************************************************************************
 749:../Dave/Generated/src/UART001/UART001.c ****  * @brief When receive FIFO is enabled, this function reads the USIC receive
 750:../Dave/Generated/src/UART001/UART001.c ****  * FIFO Buffer, word by word, until there is no data in the FIFO buffer and 
 751:../Dave/Generated/src/UART001/UART001.c ****  * the "Count" value is greater than "0".
 752:../Dave/Generated/src/UART001/UART001.c ****  * But when receive FIFO buffer is disabled, it reads a word from standard 
 753:../Dave/Generated/src/UART001/UART001.c ****  * receive buffer 
 754:../Dave/Generated/src/UART001/UART001.c ****  * 
 755:../Dave/Generated/src/UART001/UART001.c ****  * Note: Fifo trigger limit should be adjusted manually to read
 756:../Dave/Generated/src/UART001/UART001.c ****  * required amount of data from FIFO buffer.
 757:../Dave/Generated/src/UART001/UART001.c ****  *
 758:../Dave/Generated/src/UART001/UART001.c ****  * @param[in]  Handle USIC device handle
 759:../Dave/Generated/src/UART001/UART001.c ****  * @param[out] DataPtr  Pointer to data
 760:../Dave/Generated/src/UART001/UART001.c ****  * @param[in]  Count   Total no of words to be read.
 761:../Dave/Generated/src/UART001/UART001.c ****  * 
 762:../Dave/Generated/src/UART001/UART001.c ****  * @return  uint32_t Number of data read from FIFO/standard receive buffer <BR>
 763:../Dave/Generated/src/UART001/UART001.c ****  * 
 764:../Dave/Generated/src/UART001/UART001.c ****  * <i>Imp Note:</i> Return Count will be always '1', if datais read from the 
 765:../Dave/Generated/src/UART001/UART001.c ****  *              standard buffer. 
 766:../Dave/Generated/src/UART001/UART001.c ****  *
 767:../Dave/Generated/src/UART001/UART001.c ****  * <b>Reentrant: NO </b><BR>
 768:../Dave/Generated/src/UART001/UART001.c ****  * 
 769:../Dave/Generated/src/UART001/UART001.c ****  ******************************************************************************/
 770:../Dave/Generated/src/UART001/UART001.c **** uint32_t UART001_ReadDataMultiple
 771:../Dave/Generated/src/UART001/UART001.c **** (
 772:../Dave/Generated/src/UART001/UART001.c ****   const UART001_HandleType* Handle,
 773:../Dave/Generated/src/UART001/UART001.c ****   uint16_t* DataPtr,
 774:../Dave/Generated/src/UART001/UART001.c ****   uint32_t Count
 775:../Dave/Generated/src/UART001/UART001.c **** )
 776:../Dave/Generated/src/UART001/UART001.c **** { 
 1645              		.loc 1 776 0
 1646              		.cfi_startproc
 1647 0000 80B5     		push	{r7, lr}
 1648              	.LCFI21:
 1649              		.cfi_def_cfa_offset 8
 1650              		.cfi_offset 7, -8
 1651              		.cfi_offset 14, -4
 1652 0002 86B0     		sub	sp, sp, #24
 1653              	.LCFI22:
 1654              		.cfi_def_cfa_offset 32
 1655 0004 00AF     		add	r7, sp, #0
 1656              	.LCFI23:
 1657              		.cfi_def_cfa_register 7
 1658 0006 F860     		str	r0, [r7, #12]
 1659 0008 B960     		str	r1, [r7, #8]
 1660 000a 7A60     		str	r2, [r7, #4]
 777:../Dave/Generated/src/UART001/UART001.c ****   uint32_t ReadCount = 0x00U;
 1661              		.loc 1 777 0
 1662 000c 0023     		mov	r3, #0
 1663 000e 7B61     		str	r3, [r7, #20]
 778:../Dave/Generated/src/UART001/UART001.c ****   USIC_CH_TypeDef* UartRegs = Handle->UartRegs;  
 1664              		.loc 1 778 0
 1665 0010 FB68     		ldr	r3, [r7, #12]
 1666 0012 1B68     		ldr	r3, [r3]
 1667 0014 3B61     		str	r3, [r7, #16]
 779:../Dave/Generated/src/UART001/UART001.c ****   /* <<<DD_UART001_API_4>>>*/
 780:../Dave/Generated/src/UART001/UART001.c ****   /* If FIFO is enabled read data from receive FIFO buffer */
 781:../Dave/Generated/src/UART001/UART001.c ****   if(Handle->RxFifoEn) 
 1668              		.loc 1 781 0
 1669 0016 FB68     		ldr	r3, [r7, #12]
 1670 0018 DB7F     		ldrb	r3, [r3, #31]
 1671 001a 002B     		cmp	r3, #0
 1672 001c 1CD0     		beq	.L64
 782:../Dave/Generated/src/UART001/UART001.c ****   {
 783:../Dave/Generated/src/UART001/UART001.c **** 	  while(! USIC_ubIsRxFIFOempty(UartRegs) && Count)
 1673              		.loc 1 783 0
 1674 001e 0FE0     		b	.L65
 1675              	.L67:
 784:../Dave/Generated/src/UART001/UART001.c **** 	  {
 785:../Dave/Generated/src/UART001/UART001.c **** 		*DataPtr = (uint16_t)UartRegs->OUTR;
 1676              		.loc 1 785 0
 1677 0020 3A69     		ldr	r2, [r7, #16]
 1678 0022 8E23     		mov	r3, #142
 1679 0024 5B00     		lsl	r3, r3, #1
 1680 0026 D358     		ldr	r3, [r2, r3]
 1681 0028 9AB2     		uxth	r2, r3
 1682 002a BB68     		ldr	r3, [r7, #8]
 1683 002c 1A80     		strh	r2, [r3]
 786:../Dave/Generated/src/UART001/UART001.c **** 		Count--;
 1684              		.loc 1 786 0
 1685 002e 7B68     		ldr	r3, [r7, #4]
 1686 0030 013B     		sub	r3, r3, #1
 1687 0032 7B60     		str	r3, [r7, #4]
 787:../Dave/Generated/src/UART001/UART001.c **** 		ReadCount++;
 1688              		.loc 1 787 0
 1689 0034 7B69     		ldr	r3, [r7, #20]
 1690 0036 0133     		add	r3, r3, #1
 1691 0038 7B61     		str	r3, [r7, #20]
 788:../Dave/Generated/src/UART001/UART001.c **** 		DataPtr++;
 1692              		.loc 1 788 0
 1693 003a BB68     		ldr	r3, [r7, #8]
 1694 003c 0233     		add	r3, r3, #2
 1695 003e BB60     		str	r3, [r7, #8]
 1696              	.L65:
 783:../Dave/Generated/src/UART001/UART001.c **** 	  while(! USIC_ubIsRxFIFOempty(UartRegs) && Count)
 1697              		.loc 1 783 0 discriminator 1
 1698 0040 3A69     		ldr	r2, [r7, #16]
 1699 0042 8A23     		mov	r3, #138
 1700 0044 5B00     		lsl	r3, r3, #1
 1701 0046 D258     		ldr	r2, [r2, r3]
 1702 0048 0823     		mov	r3, #8
 1703 004a 1340     		and	r3, r2
 1704 004c DB08     		lsr	r3, r3, #3
 1705 004e 0BD1     		bne	.L66
 783:../Dave/Generated/src/UART001/UART001.c **** 	  while(! USIC_ubIsRxFIFOempty(UartRegs) && Count)
 1706              		.loc 1 783 0 is_stmt 0 discriminator 2
 1707 0050 7B68     		ldr	r3, [r7, #4]
 1708 0052 002B     		cmp	r3, #0
 1709 0054 E4D1     		bne	.L67
 783:../Dave/Generated/src/UART001/UART001.c **** 	  while(! USIC_ubIsRxFIFOempty(UartRegs) && Count)
 1710              		.loc 1 783 0
 1711 0056 07E0     		b	.L66
 1712              	.L64:
 789:../Dave/Generated/src/UART001/UART001.c **** 	  }
 790:../Dave/Generated/src/UART001/UART001.c ****   }
 791:../Dave/Generated/src/UART001/UART001.c ****   else
 792:../Dave/Generated/src/UART001/UART001.c ****   {
 793:../Dave/Generated/src/UART001/UART001.c **** 	  /* If FIFO is disabled read data from standard receive buffer */
 794:../Dave/Generated/src/UART001/UART001.c **** 	  *DataPtr = (uint16_t)UartRegs->RBUF;
 1713              		.loc 1 794 0 is_stmt 1
 1714 0058 3B69     		ldr	r3, [r7, #16]
 1715 005a 5B6D     		ldr	r3, [r3, #84]
 1716 005c 9AB2     		uxth	r2, r3
 1717 005e BB68     		ldr	r3, [r7, #8]
 1718 0060 1A80     		strh	r2, [r3]
 795:../Dave/Generated/src/UART001/UART001.c **** 	  ReadCount++;
 1719              		.loc 1 795 0
 1720 0062 7B69     		ldr	r3, [r7, #20]
 1721 0064 0133     		add	r3, r3, #1
 1722 0066 7B61     		str	r3, [r7, #20]
 1723              	.L66:
 796:../Dave/Generated/src/UART001/UART001.c ****   }
 797:../Dave/Generated/src/UART001/UART001.c ****   return ReadCount;
 1724              		.loc 1 797 0
 1725 0068 7B69     		ldr	r3, [r7, #20]
 798:../Dave/Generated/src/UART001/UART001.c **** }
 1726              		.loc 1 798 0
 1727 006a 181C     		mov	r0, r3
 1728 006c BD46     		mov	sp, r7
 1729 006e 06B0     		add	sp, sp, #24
 1730              		@ sp needed for prologue
 1731 0070 80BD     		pop	{r7, pc}
 1732              		.cfi_endproc
 1733              	.LFE40:
 1735 0072 C046     		.section	.text.UART001_ReadDataBytes,"ax",%progbits
 1736              		.align	2
 1737              		.global	UART001_ReadDataBytes
 1738              		.code	16
 1739              		.thumb_func
 1741              	UART001_ReadDataBytes:
 1742              	.LFB41:
 799:../Dave/Generated/src/UART001/UART001.c **** /*******************************************************************************
 800:../Dave/Generated/src/UART001/UART001.c ****  * @brief When receive FIFO is enabled, this function reads the USIC receive
 801:../Dave/Generated/src/UART001/UART001.c ****  * FIFO Buffer, byte by byte, until there is no data in the FIFO buffer and 
 802:../Dave/Generated/src/UART001/UART001.c ****  * the "Count" value is greater than "0".
 803:../Dave/Generated/src/UART001/UART001.c ****  * But when receive FIFO buffer is disabled, it reads a byte from standard 
 804:../Dave/Generated/src/UART001/UART001.c ****  * receive buffer 
 805:../Dave/Generated/src/UART001/UART001.c ****  * 
 806:../Dave/Generated/src/UART001/UART001.c ****  * Note: Fifo trigger limit should be adjusted manually to read
 807:../Dave/Generated/src/UART001/UART001.c ****  * required amount of data from FIFO buffer.
 808:../Dave/Generated/src/UART001/UART001.c ****  *
 809:../Dave/Generated/src/UART001/UART001.c ****  *
 810:../Dave/Generated/src/UART001/UART001.c ****  * @param[in]  Handle USIC device handle
 811:../Dave/Generated/src/UART001/UART001.c ****  * @param[out] DataPtr  Pointer to data
 812:../Dave/Generated/src/UART001/UART001.c ****  * @param[in]  Count   Total no of bytes to be read.
 813:../Dave/Generated/src/UART001/UART001.c ****  *
 814:../Dave/Generated/src/UART001/UART001.c ****  * @return  uint32_t Number of data read from FIFO/standard receive buffer <BR>
 815:../Dave/Generated/src/UART001/UART001.c ****  * 
 816:../Dave/Generated/src/UART001/UART001.c ****  * <i>Imp Note:</i> Return Count will be always '1', if data is read from the 
 817:../Dave/Generated/src/UART001/UART001.c ****  *              standard buffer. 
 818:../Dave/Generated/src/UART001/UART001.c ****  *
 819:../Dave/Generated/src/UART001/UART001.c ****  * <b>Reentrant: NO </b><BR>
 820:../Dave/Generated/src/UART001/UART001.c ****  * 
 821:../Dave/Generated/src/UART001/UART001.c ****  ******************************************************************************/
 822:../Dave/Generated/src/UART001/UART001.c **** uint32_t UART001_ReadDataBytes
 823:../Dave/Generated/src/UART001/UART001.c **** (
 824:../Dave/Generated/src/UART001/UART001.c ****   const UART001_HandleType* Handle,
 825:../Dave/Generated/src/UART001/UART001.c ****   uint8_t* DataPtr,
 826:../Dave/Generated/src/UART001/UART001.c ****   uint32_t Count
 827:../Dave/Generated/src/UART001/UART001.c **** )
 828:../Dave/Generated/src/UART001/UART001.c **** { 
 1743              		.loc 1 828 0
 1744              		.cfi_startproc
 1745 0000 80B5     		push	{r7, lr}
 1746              	.LCFI24:
 1747              		.cfi_def_cfa_offset 8
 1748              		.cfi_offset 7, -8
 1749              		.cfi_offset 14, -4
 1750 0002 86B0     		sub	sp, sp, #24
 1751              	.LCFI25:
 1752              		.cfi_def_cfa_offset 32
 1753 0004 00AF     		add	r7, sp, #0
 1754              	.LCFI26:
 1755              		.cfi_def_cfa_register 7
 1756 0006 F860     		str	r0, [r7, #12]
 1757 0008 B960     		str	r1, [r7, #8]
 1758 000a 7A60     		str	r2, [r7, #4]
 829:../Dave/Generated/src/UART001/UART001.c ****   uint32_t ReadCount = 0x00U;
 1759              		.loc 1 829 0
 1760 000c 0023     		mov	r3, #0
 1761 000e 7B61     		str	r3, [r7, #20]
 830:../Dave/Generated/src/UART001/UART001.c ****   USIC_CH_TypeDef* UartRegs = Handle->UartRegs;  
 1762              		.loc 1 830 0
 1763 0010 FB68     		ldr	r3, [r7, #12]
 1764 0012 1B68     		ldr	r3, [r3]
 1765 0014 3B61     		str	r3, [r7, #16]
 831:../Dave/Generated/src/UART001/UART001.c ****   /* <<<DD_UART001_API_4>>>*/
 832:../Dave/Generated/src/UART001/UART001.c ****   /* If FIFO is enabled read data from receive FIFO buffer */
 833:../Dave/Generated/src/UART001/UART001.c ****   if(Handle->RxFifoEn) 
 1766              		.loc 1 833 0
 1767 0016 FB68     		ldr	r3, [r7, #12]
 1768 0018 DB7F     		ldrb	r3, [r3, #31]
 1769 001a 002B     		cmp	r3, #0
 1770 001c 1CD0     		beq	.L70
 834:../Dave/Generated/src/UART001/UART001.c ****   {
 835:../Dave/Generated/src/UART001/UART001.c **** 	  while(! USIC_ubIsRxFIFOempty(UartRegs) && Count)
 1771              		.loc 1 835 0
 1772 001e 0FE0     		b	.L71
 1773              	.L73:
 836:../Dave/Generated/src/UART001/UART001.c **** 	  {
 837:../Dave/Generated/src/UART001/UART001.c **** 		*DataPtr = (uint8_t)UartRegs->OUTR;
 1774              		.loc 1 837 0
 1775 0020 3A69     		ldr	r2, [r7, #16]
 1776 0022 8E23     		mov	r3, #142
 1777 0024 5B00     		lsl	r3, r3, #1
 1778 0026 D358     		ldr	r3, [r2, r3]
 1779 0028 DAB2     		uxtb	r2, r3
 1780 002a BB68     		ldr	r3, [r7, #8]
 1781 002c 1A70     		strb	r2, [r3]
 838:../Dave/Generated/src/UART001/UART001.c **** 		Count--;
 1782              		.loc 1 838 0
 1783 002e 7B68     		ldr	r3, [r7, #4]
 1784 0030 013B     		sub	r3, r3, #1
 1785 0032 7B60     		str	r3, [r7, #4]
 839:../Dave/Generated/src/UART001/UART001.c **** 		ReadCount++;
 1786              		.loc 1 839 0
 1787 0034 7B69     		ldr	r3, [r7, #20]
 1788 0036 0133     		add	r3, r3, #1
 1789 0038 7B61     		str	r3, [r7, #20]
 840:../Dave/Generated/src/UART001/UART001.c **** 		DataPtr++;
 1790              		.loc 1 840 0
 1791 003a BB68     		ldr	r3, [r7, #8]
 1792 003c 0133     		add	r3, r3, #1
 1793 003e BB60     		str	r3, [r7, #8]
 1794              	.L71:
 835:../Dave/Generated/src/UART001/UART001.c **** 	  while(! USIC_ubIsRxFIFOempty(UartRegs) && Count)
 1795              		.loc 1 835 0 discriminator 1
 1796 0040 3A69     		ldr	r2, [r7, #16]
 1797 0042 8A23     		mov	r3, #138
 1798 0044 5B00     		lsl	r3, r3, #1
 1799 0046 D258     		ldr	r2, [r2, r3]
 1800 0048 0823     		mov	r3, #8
 1801 004a 1340     		and	r3, r2
 1802 004c DB08     		lsr	r3, r3, #3
 1803 004e 0BD1     		bne	.L72
 835:../Dave/Generated/src/UART001/UART001.c **** 	  while(! USIC_ubIsRxFIFOempty(UartRegs) && Count)
 1804              		.loc 1 835 0 is_stmt 0 discriminator 2
 1805 0050 7B68     		ldr	r3, [r7, #4]
 1806 0052 002B     		cmp	r3, #0
 1807 0054 E4D1     		bne	.L73
 835:../Dave/Generated/src/UART001/UART001.c **** 	  while(! USIC_ubIsRxFIFOempty(UartRegs) && Count)
 1808              		.loc 1 835 0
 1809 0056 07E0     		b	.L72
 1810              	.L70:
 841:../Dave/Generated/src/UART001/UART001.c **** 	  }
 842:../Dave/Generated/src/UART001/UART001.c ****   }
 843:../Dave/Generated/src/UART001/UART001.c ****   else
 844:../Dave/Generated/src/UART001/UART001.c ****   {
 845:../Dave/Generated/src/UART001/UART001.c **** 	  /* If FIFO is disabled read data from standard receive buffer */
 846:../Dave/Generated/src/UART001/UART001.c **** 	  *DataPtr = (uint8_t)UartRegs->RBUF;
 1811              		.loc 1 846 0 is_stmt 1
 1812 0058 3B69     		ldr	r3, [r7, #16]
 1813 005a 5B6D     		ldr	r3, [r3, #84]
 1814 005c DAB2     		uxtb	r2, r3
 1815 005e BB68     		ldr	r3, [r7, #8]
 1816 0060 1A70     		strb	r2, [r3]
 847:../Dave/Generated/src/UART001/UART001.c **** 	  ReadCount++;
 1817              		.loc 1 847 0
 1818 0062 7B69     		ldr	r3, [r7, #20]
 1819 0064 0133     		add	r3, r3, #1
 1820 0066 7B61     		str	r3, [r7, #20]
 1821              	.L72:
 848:../Dave/Generated/src/UART001/UART001.c ****   }  
 849:../Dave/Generated/src/UART001/UART001.c ****   return ReadCount;
 1822              		.loc 1 849 0
 1823 0068 7B69     		ldr	r3, [r7, #20]
 850:../Dave/Generated/src/UART001/UART001.c **** }
 1824              		.loc 1 850 0
 1825 006a 181C     		mov	r0, r3
 1826 006c BD46     		mov	sp, r7
 1827 006e 06B0     		add	sp, sp, #24
 1828              		@ sp needed for prologue
 1829 0070 80BD     		pop	{r7, pc}
 1830              		.cfi_endproc
 1831              	.LFE41:
 1833 0072 C046     		.section	.text.UART001_WriteDataMultiple,"ax",%progbits
 1834              		.align	2
 1835              		.global	UART001_WriteDataMultiple
 1836              		.code	16
 1837              		.thumb_func
 1839              	UART001_WriteDataMultiple:
 1840              	.LFB42:
 851:../Dave/Generated/src/UART001/UART001.c **** 
 852:../Dave/Generated/src/UART001/UART001.c **** /*******************************************************************************
 853:../Dave/Generated/src/UART001/UART001.c ****  * @brief When FIFO is enabled, this function writes data to the USIC FIFO 
 854:../Dave/Generated/src/UART001/UART001.c ****  * transmit buffer register, word by word, until the FIFO buffer is full and 
 855:../Dave/Generated/src/UART001/UART001.c ****  * the "Count" value is greater than "0".
 856:../Dave/Generated/src/UART001/UART001.c ****  * But when transmit FIFO is disabled, it writes a word to the standard 
 857:../Dave/Generated/src/UART001/UART001.c ****  * transmit buffer.
 858:../Dave/Generated/src/UART001/UART001.c ****  * 
 859:../Dave/Generated/src/UART001/UART001.c ****  * Note: Fifo trigger limit should be adjusted manually to transmit 
 860:../Dave/Generated/src/UART001/UART001.c ****  * to transmit required amount of data.
 861:../Dave/Generated/src/UART001/UART001.c ****  *
 862:../Dave/Generated/src/UART001/UART001.c ****  * Reentrant : No
 863:../Dave/Generated/src/UART001/UART001.c ****  *
 864:../Dave/Generated/src/UART001/UART001.c ****  * @param[in]  Handle  USIC device handle
 865:../Dave/Generated/src/UART001/UART001.c ****  * @param[in]  DataPtr Pointer to data
 866:../Dave/Generated/src/UART001/UART001.c ****  * @param[in]  Count   Total no of words to be transmitted.
 867:../Dave/Generated/src/UART001/UART001.c ****  *
 868:../Dave/Generated/src/UART001/UART001.c ****  * @return     uint32_t Number of data written to buffer <BR>
 869:../Dave/Generated/src/UART001/UART001.c ****  *
 870:../Dave/Generated/src/UART001/UART001.c ****  * <i>Imp Note:</i> Return Count will be always '1', if data is written to the 
 871:../Dave/Generated/src/UART001/UART001.c ****  *             standard buffer. 
 872:../Dave/Generated/src/UART001/UART001.c ****  *          
 873:../Dave/Generated/src/UART001/UART001.c ****  * <b>Reentrant: NO </b><BR>
 874:../Dave/Generated/src/UART001/UART001.c ****  *
 875:../Dave/Generated/src/UART001/UART001.c ****  ******************************************************************************/
 876:../Dave/Generated/src/UART001/UART001.c **** uint32_t UART001_WriteDataMultiple
 877:../Dave/Generated/src/UART001/UART001.c **** (
 878:../Dave/Generated/src/UART001/UART001.c ****   const UART001_HandleType* Handle,
 879:../Dave/Generated/src/UART001/UART001.c ****   uint16_t* DataPtr,
 880:../Dave/Generated/src/UART001/UART001.c ****   uint32_t Count
 881:../Dave/Generated/src/UART001/UART001.c **** )
 882:../Dave/Generated/src/UART001/UART001.c **** {
 1841              		.loc 1 882 0
 1842              		.cfi_startproc
 1843 0000 80B5     		push	{r7, lr}
 1844              	.LCFI27:
 1845              		.cfi_def_cfa_offset 8
 1846              		.cfi_offset 7, -8
 1847              		.cfi_offset 14, -4
 1848 0002 86B0     		sub	sp, sp, #24
 1849              	.LCFI28:
 1850              		.cfi_def_cfa_offset 32
 1851 0004 00AF     		add	r7, sp, #0
 1852              	.LCFI29:
 1853              		.cfi_def_cfa_register 7
 1854 0006 F860     		str	r0, [r7, #12]
 1855 0008 B960     		str	r1, [r7, #8]
 1856 000a 7A60     		str	r2, [r7, #4]
 883:../Dave/Generated/src/UART001/UART001.c ****   uint32_t WriteCount = 0x00U;
 1857              		.loc 1 883 0
 1858 000c 0023     		mov	r3, #0
 1859 000e 7B61     		str	r3, [r7, #20]
 884:../Dave/Generated/src/UART001/UART001.c ****   USIC_CH_TypeDef* UartRegs = Handle->UartRegs; 
 1860              		.loc 1 884 0
 1861 0010 FB68     		ldr	r3, [r7, #12]
 1862 0012 1B68     		ldr	r3, [r3]
 1863 0014 3B61     		str	r3, [r7, #16]
 885:../Dave/Generated/src/UART001/UART001.c ****   /* <<<DD_UART001_API_5>>>*/
 886:../Dave/Generated/src/UART001/UART001.c ****   /* If FIFO is enabled write data to the transmit FIFO buffer */
 887:../Dave/Generated/src/UART001/UART001.c ****   if(Handle->TxFifoEn) 
 1864              		.loc 1 887 0
 1865 0016 FB68     		ldr	r3, [r7, #12]
 1866 0018 9B7F     		ldrb	r3, [r3, #30]
 1867 001a 002B     		cmp	r3, #0
 1868 001c 1DD0     		beq	.L76
 888:../Dave/Generated/src/UART001/UART001.c ****   {
 889:../Dave/Generated/src/UART001/UART001.c **** 	  while(! USIC_IsTxFIFOfull(UartRegs)&& Count)
 1869              		.loc 1 889 0
 1870 001e 0FE0     		b	.L77
 1871              	.L79:
 890:../Dave/Generated/src/UART001/UART001.c **** 	  {
 891:../Dave/Generated/src/UART001/UART001.c **** 		UartRegs->IN[0] = *DataPtr;
 1872              		.loc 1 891 0
 1873 0020 BB68     		ldr	r3, [r7, #8]
 1874 0022 1B88     		ldrh	r3, [r3]
 1875 0024 191C     		mov	r1, r3
 1876 0026 3A69     		ldr	r2, [r7, #16]
 1877 0028 C023     		mov	r3, #192
 1878 002a 5B00     		lsl	r3, r3, #1
 1879 002c D150     		str	r1, [r2, r3]
 892:../Dave/Generated/src/UART001/UART001.c **** 		Count--;
 1880              		.loc 1 892 0
 1881 002e 7B68     		ldr	r3, [r7, #4]
 1882 0030 013B     		sub	r3, r3, #1
 1883 0032 7B60     		str	r3, [r7, #4]
 893:../Dave/Generated/src/UART001/UART001.c **** 		WriteCount++;
 1884              		.loc 1 893 0
 1885 0034 7B69     		ldr	r3, [r7, #20]
 1886 0036 0133     		add	r3, r3, #1
 1887 0038 7B61     		str	r3, [r7, #20]
 894:../Dave/Generated/src/UART001/UART001.c **** 		DataPtr++;
 1888              		.loc 1 894 0
 1889 003a BB68     		ldr	r3, [r7, #8]
 1890 003c 0233     		add	r3, r3, #2
 1891 003e BB60     		str	r3, [r7, #8]
 1892              	.L77:
 889:../Dave/Generated/src/UART001/UART001.c **** 	  while(! USIC_IsTxFIFOfull(UartRegs)&& Count)
 1893              		.loc 1 889 0 discriminator 1
 1894 0040 3A69     		ldr	r2, [r7, #16]
 1895 0042 8A23     		mov	r3, #138
 1896 0044 5B00     		lsl	r3, r3, #1
 1897 0046 D258     		ldr	r2, [r2, r3]
 1898 0048 8023     		mov	r3, #128
 1899 004a 5B01     		lsl	r3, r3, #5
 1900 004c 1340     		and	r3, r2
 1901 004e 1B0B     		lsr	r3, r3, #12
 1902 0050 11D1     		bne	.L78
 889:../Dave/Generated/src/UART001/UART001.c **** 	  while(! USIC_IsTxFIFOfull(UartRegs)&& Count)
 1903              		.loc 1 889 0 is_stmt 0 discriminator 2
 1904 0052 7B68     		ldr	r3, [r7, #4]
 1905 0054 002B     		cmp	r3, #0
 1906 0056 E3D1     		bne	.L79
 889:../Dave/Generated/src/UART001/UART001.c **** 	  while(! USIC_IsTxFIFOfull(UartRegs)&& Count)
 1907              		.loc 1 889 0
 1908 0058 0DE0     		b	.L78
 1909              	.L76:
 895:../Dave/Generated/src/UART001/UART001.c **** 	  }
 896:../Dave/Generated/src/UART001/UART001.c ****   }
 897:../Dave/Generated/src/UART001/UART001.c ****   else
 898:../Dave/Generated/src/UART001/UART001.c ****   {	  
 899:../Dave/Generated/src/UART001/UART001.c **** 	  /* If FIFO is disabled write data to the standard transmit buffer */
 900:../Dave/Generated/src/UART001/UART001.c **** 	  if (!(USIC_CH_TCSR_TDV_Msk & UartRegs->TCSR))
 1910              		.loc 1 900 0 is_stmt 1
 1911 005a 3B69     		ldr	r3, [r7, #16]
 1912 005c 9A6B     		ldr	r2, [r3, #56]
 1913 005e 8023     		mov	r3, #128
 1914 0060 1340     		and	r3, r2
 1915 0062 08D1     		bne	.L78
 901:../Dave/Generated/src/UART001/UART001.c **** 	  {
 902:../Dave/Generated/src/UART001/UART001.c **** 		UartRegs->TBUF[0] = *DataPtr;	
 1916              		.loc 1 902 0
 1917 0064 BB68     		ldr	r3, [r7, #8]
 1918 0066 1B88     		ldrh	r3, [r3]
 1919 0068 191C     		mov	r1, r3
 1920 006a 3A69     		ldr	r2, [r7, #16]
 1921 006c 8023     		mov	r3, #128
 1922 006e D150     		str	r1, [r2, r3]
 903:../Dave/Generated/src/UART001/UART001.c **** 		WriteCount++; 
 1923              		.loc 1 903 0
 1924 0070 7B69     		ldr	r3, [r7, #20]
 1925 0072 0133     		add	r3, r3, #1
 1926 0074 7B61     		str	r3, [r7, #20]
 1927              	.L78:
 904:../Dave/Generated/src/UART001/UART001.c **** 	  }
 905:../Dave/Generated/src/UART001/UART001.c ****   }
 906:../Dave/Generated/src/UART001/UART001.c ****   return WriteCount;
 1928              		.loc 1 906 0
 1929 0076 7B69     		ldr	r3, [r7, #20]
 907:../Dave/Generated/src/UART001/UART001.c **** }
 1930              		.loc 1 907 0
 1931 0078 181C     		mov	r0, r3
 1932 007a BD46     		mov	sp, r7
 1933 007c 06B0     		add	sp, sp, #24
 1934              		@ sp needed for prologue
 1935 007e 80BD     		pop	{r7, pc}
 1936              		.cfi_endproc
 1937              	.LFE42:
 1939              		.section	.text.UART001_WriteDataBytes,"ax",%progbits
 1940              		.align	2
 1941              		.global	UART001_WriteDataBytes
 1942              		.code	16
 1943              		.thumb_func
 1945              	UART001_WriteDataBytes:
 1946              	.LFB43:
 908:../Dave/Generated/src/UART001/UART001.c **** 
 909:../Dave/Generated/src/UART001/UART001.c **** /*******************************************************************************
 910:../Dave/Generated/src/UART001/UART001.c ****  * @brief When FIFO is enabled, this function writes data to the USIC FIFO 
 911:../Dave/Generated/src/UART001/UART001.c ****  * transmit buffer register, byte by byte, until the FIFO buffer is full and 
 912:../Dave/Generated/src/UART001/UART001.c ****  * the "Count" value is greater than "0".
 913:../Dave/Generated/src/UART001/UART001.c ****  * But when transmit FIFO is disabled, it writes a byte to the standard 
 914:../Dave/Generated/src/UART001/UART001.c ****  * transmit buffer.
 915:../Dave/Generated/src/UART001/UART001.c ****  * 
 916:../Dave/Generated/src/UART001/UART001.c ****  * Note: Fifo trigger limit should be adjusted manually to transmit 
 917:../Dave/Generated/src/UART001/UART001.c ****  * to transmit required amount of data.
 918:../Dave/Generated/src/UART001/UART001.c ****  *
 919:../Dave/Generated/src/UART001/UART001.c ****  * Reentrant : No
 920:../Dave/Generated/src/UART001/UART001.c ****  *
 921:../Dave/Generated/src/UART001/UART001.c ****  * @param[in]  Handle  USIC device handle
 922:../Dave/Generated/src/UART001/UART001.c ****  * @param[in]  DataPtr Pointer to data
 923:../Dave/Generated/src/UART001/UART001.c ****  * @param[in]  Count   Total no of words to be transmitted.
 924:../Dave/Generated/src/UART001/UART001.c ****  *
 925:../Dave/Generated/src/UART001/UART001.c ****  * @return     uint32_t Number of data written to buffer <BR>
 926:../Dave/Generated/src/UART001/UART001.c ****  *
 927:../Dave/Generated/src/UART001/UART001.c ****  * <i>Imp Note:</i> Return Count will be always '1', if data is written to the 
 928:../Dave/Generated/src/UART001/UART001.c ****  *              standard buffer. 
 929:../Dave/Generated/src/UART001/UART001.c ****  *              
 930:../Dave/Generated/src/UART001/UART001.c ****  * <b>Reentrant: NO </b><BR>
 931:../Dave/Generated/src/UART001/UART001.c ****  *
 932:../Dave/Generated/src/UART001/UART001.c ****  ******************************************************************************/
 933:../Dave/Generated/src/UART001/UART001.c **** uint32_t UART001_WriteDataBytes
 934:../Dave/Generated/src/UART001/UART001.c **** (
 935:../Dave/Generated/src/UART001/UART001.c ****   const UART001_HandleType* Handle,
 936:../Dave/Generated/src/UART001/UART001.c ****   const uint8_t* DataPtr,
 937:../Dave/Generated/src/UART001/UART001.c ****   uint32_t Count
 938:../Dave/Generated/src/UART001/UART001.c **** )
 939:../Dave/Generated/src/UART001/UART001.c **** {
 1947              		.loc 1 939 0
 1948              		.cfi_startproc
 1949 0000 80B5     		push	{r7, lr}
 1950              	.LCFI30:
 1951              		.cfi_def_cfa_offset 8
 1952              		.cfi_offset 7, -8
 1953              		.cfi_offset 14, -4
 1954 0002 86B0     		sub	sp, sp, #24
 1955              	.LCFI31:
 1956              		.cfi_def_cfa_offset 32
 1957 0004 00AF     		add	r7, sp, #0
 1958              	.LCFI32:
 1959              		.cfi_def_cfa_register 7
 1960 0006 F860     		str	r0, [r7, #12]
 1961 0008 B960     		str	r1, [r7, #8]
 1962 000a 7A60     		str	r2, [r7, #4]
 940:../Dave/Generated/src/UART001/UART001.c ****   uint32_t WriteCount = 0x00U;
 1963              		.loc 1 940 0
 1964 000c 0023     		mov	r3, #0
 1965 000e 7B61     		str	r3, [r7, #20]
 941:../Dave/Generated/src/UART001/UART001.c ****   USIC_CH_TypeDef* UartRegs = Handle->UartRegs; 
 1966              		.loc 1 941 0
 1967 0010 FB68     		ldr	r3, [r7, #12]
 1968 0012 1B68     		ldr	r3, [r3]
 1969 0014 3B61     		str	r3, [r7, #16]
 942:../Dave/Generated/src/UART001/UART001.c ****   /* <<<DD_UART001_API_6>>> */
 943:../Dave/Generated/src/UART001/UART001.c ****   
 944:../Dave/Generated/src/UART001/UART001.c ****   /* If FIFO is enabled write data to the transmit FIFO buffer */  
 945:../Dave/Generated/src/UART001/UART001.c ****   if(Handle->TxFifoEn) 
 1970              		.loc 1 945 0
 1971 0016 FB68     		ldr	r3, [r7, #12]
 1972 0018 9B7F     		ldrb	r3, [r3, #30]
 1973 001a 002B     		cmp	r3, #0
 1974 001c 1DD0     		beq	.L82
 946:../Dave/Generated/src/UART001/UART001.c ****   {
 947:../Dave/Generated/src/UART001/UART001.c **** 	  while(! USIC_IsTxFIFOfull(UartRegs)&& Count)
 1975              		.loc 1 947 0
 1976 001e 0FE0     		b	.L83
 1977              	.L85:
 948:../Dave/Generated/src/UART001/UART001.c **** 	  {
 949:../Dave/Generated/src/UART001/UART001.c **** 		UartRegs->IN[0] = *DataPtr;
 1978              		.loc 1 949 0
 1979 0020 BB68     		ldr	r3, [r7, #8]
 1980 0022 1B78     		ldrb	r3, [r3]
 1981 0024 191C     		mov	r1, r3
 1982 0026 3A69     		ldr	r2, [r7, #16]
 1983 0028 C023     		mov	r3, #192
 1984 002a 5B00     		lsl	r3, r3, #1
 1985 002c D150     		str	r1, [r2, r3]
 950:../Dave/Generated/src/UART001/UART001.c **** 		Count--;
 1986              		.loc 1 950 0
 1987 002e 7B68     		ldr	r3, [r7, #4]
 1988 0030 013B     		sub	r3, r3, #1
 1989 0032 7B60     		str	r3, [r7, #4]
 951:../Dave/Generated/src/UART001/UART001.c **** 		WriteCount++;
 1990              		.loc 1 951 0
 1991 0034 7B69     		ldr	r3, [r7, #20]
 1992 0036 0133     		add	r3, r3, #1
 1993 0038 7B61     		str	r3, [r7, #20]
 952:../Dave/Generated/src/UART001/UART001.c **** 		DataPtr++;
 1994              		.loc 1 952 0
 1995 003a BB68     		ldr	r3, [r7, #8]
 1996 003c 0133     		add	r3, r3, #1
 1997 003e BB60     		str	r3, [r7, #8]
 1998              	.L83:
 947:../Dave/Generated/src/UART001/UART001.c **** 	  while(! USIC_IsTxFIFOfull(UartRegs)&& Count)
 1999              		.loc 1 947 0 discriminator 1
 2000 0040 3A69     		ldr	r2, [r7, #16]
 2001 0042 8A23     		mov	r3, #138
 2002 0044 5B00     		lsl	r3, r3, #1
 2003 0046 D258     		ldr	r2, [r2, r3]
 2004 0048 8023     		mov	r3, #128
 2005 004a 5B01     		lsl	r3, r3, #5
 2006 004c 1340     		and	r3, r2
 2007 004e 1B0B     		lsr	r3, r3, #12
 2008 0050 11D1     		bne	.L84
 947:../Dave/Generated/src/UART001/UART001.c **** 	  while(! USIC_IsTxFIFOfull(UartRegs)&& Count)
 2009              		.loc 1 947 0 is_stmt 0 discriminator 2
 2010 0052 7B68     		ldr	r3, [r7, #4]
 2011 0054 002B     		cmp	r3, #0
 2012 0056 E3D1     		bne	.L85
 947:../Dave/Generated/src/UART001/UART001.c **** 	  while(! USIC_IsTxFIFOfull(UartRegs)&& Count)
 2013              		.loc 1 947 0
 2014 0058 0DE0     		b	.L84
 2015              	.L82:
 953:../Dave/Generated/src/UART001/UART001.c **** 	  }
 954:../Dave/Generated/src/UART001/UART001.c ****   }
 955:../Dave/Generated/src/UART001/UART001.c ****   else
 956:../Dave/Generated/src/UART001/UART001.c ****   {	  
 957:../Dave/Generated/src/UART001/UART001.c **** 	  /* If FIFO is disabled write data to the standard transmit buffer */  
 958:../Dave/Generated/src/UART001/UART001.c **** 	  if (!(USIC_CH_TCSR_TDV_Msk & UartRegs->TCSR))
 2016              		.loc 1 958 0 is_stmt 1
 2017 005a 3B69     		ldr	r3, [r7, #16]
 2018 005c 9A6B     		ldr	r2, [r3, #56]
 2019 005e 8023     		mov	r3, #128
 2020 0060 1340     		and	r3, r2
 2021 0062 08D1     		bne	.L84
 959:../Dave/Generated/src/UART001/UART001.c **** 	  {
 960:../Dave/Generated/src/UART001/UART001.c **** 		UartRegs->TBUF[0] = *DataPtr;	
 2022              		.loc 1 960 0
 2023 0064 BB68     		ldr	r3, [r7, #8]
 2024 0066 1B78     		ldrb	r3, [r3]
 2025 0068 191C     		mov	r1, r3
 2026 006a 3A69     		ldr	r2, [r7, #16]
 2027 006c 8023     		mov	r3, #128
 2028 006e D150     		str	r1, [r2, r3]
 961:../Dave/Generated/src/UART001/UART001.c **** 		WriteCount++; 
 2029              		.loc 1 961 0
 2030 0070 7B69     		ldr	r3, [r7, #20]
 2031 0072 0133     		add	r3, r3, #1
 2032 0074 7B61     		str	r3, [r7, #20]
 2033              	.L84:
 962:../Dave/Generated/src/UART001/UART001.c **** 	  }
 963:../Dave/Generated/src/UART001/UART001.c ****   }
 964:../Dave/Generated/src/UART001/UART001.c ****   return WriteCount;
 2034              		.loc 1 964 0
 2035 0076 7B69     		ldr	r3, [r7, #20]
 965:../Dave/Generated/src/UART001/UART001.c **** }
 2036              		.loc 1 965 0
 2037 0078 181C     		mov	r0, r3
 2038 007a BD46     		mov	sp, r7
 2039 007c 06B0     		add	sp, sp, #24
 2040              		@ sp needed for prologue
 2041 007e 80BD     		pop	{r7, pc}
 2042              		.cfi_endproc
 2043              	.LFE43:
 2045              		.section	.text.UART001_GetFlagStatus,"ax",%progbits
 2046              		.align	2
 2047              		.global	UART001_GetFlagStatus
 2048              		.code	16
 2049              		.thumb_func
 2051              	UART001_GetFlagStatus:
 2052              	.LFB44:
 966:../Dave/Generated/src/UART001/UART001.c **** 
 967:../Dave/Generated/src/UART001/UART001.c **** /*******************************************************************************
 968:../Dave/Generated/src/UART001/UART001.c ****  * @brief The function is used to get the event flag status specified.
 969:../Dave/Generated/src/UART001/UART001.c ****  * 			   It returns UART_SET if the corresponding flag
 970:../Dave/Generated/src/UART001/UART001.c ****  *			   is set else otherwise.
 971:../Dave/Generated/src/UART001/UART001.c ****  *
 972:../Dave/Generated/src/UART001/UART001.c ****  *
 973:../Dave/Generated/src/UART001/UART001.c ****  * @param[in]  Handle USIC device handle
 974:../Dave/Generated/src/UART001/UART001.c ****  * @param[in]  Flag   UART Flag which needs to be checked
 975:../Dave/Generated/src/UART001/UART001.c ****  *
 976:../Dave/Generated/src/UART001/UART001.c ****  * @return     status_t <BR>
 977:../Dave/Generated/src/UART001/UART001.c ****  *             UART_SET    : indicates Flag is set.<BR>
 978:../Dave/Generated/src/UART001/UART001.c ****  *             UART_RESET  : indicates Flag is reset.<BR>
 979:../Dave/Generated/src/UART001/UART001.c ****  *
 980:../Dave/Generated/src/UART001/UART001.c ****  * <b>Reentrant: NO </b><BR>
 981:../Dave/Generated/src/UART001/UART001.c ****  *
 982:../Dave/Generated/src/UART001/UART001.c ****  ******************************************************************************/
 983:../Dave/Generated/src/UART001/UART001.c **** status_t UART001_GetFlagStatus 
 984:../Dave/Generated/src/UART001/UART001.c **** (
 985:../Dave/Generated/src/UART001/UART001.c ****   const UART001_HandleType* Handle,
 986:../Dave/Generated/src/UART001/UART001.c ****   UART001_FlagStatusType Flag
 987:../Dave/Generated/src/UART001/UART001.c **** )
 988:../Dave/Generated/src/UART001/UART001.c **** {
 2053              		.loc 1 988 0
 2054              		.cfi_startproc
 2055 0000 80B5     		push	{r7, lr}
 2056              	.LCFI33:
 2057              		.cfi_def_cfa_offset 8
 2058              		.cfi_offset 7, -8
 2059              		.cfi_offset 14, -4
 2060 0002 86B0     		sub	sp, sp, #24
 2061              	.LCFI34:
 2062              		.cfi_def_cfa_offset 32
 2063 0004 00AF     		add	r7, sp, #0
 2064              	.LCFI35:
 2065              		.cfi_def_cfa_register 7
 2066 0006 7860     		str	r0, [r7, #4]
 2067 0008 0A1C     		mov	r2, r1
 2068 000a FB1C     		add	r3, r7, #3
 2069 000c 1A70     		strb	r2, [r3]
 989:../Dave/Generated/src/UART001/UART001.c ****   status_t Status = (status_t)UART001_RESET;
 2070              		.loc 1 989 0
 2071 000e 0123     		mov	r3, #1
 2072 0010 7B61     		str	r3, [r7, #20]
 990:../Dave/Generated/src/UART001/UART001.c ****   uint32_t TempValue = 0x00U;
 2073              		.loc 1 990 0
 2074 0012 0023     		mov	r3, #0
 2075 0014 3B61     		str	r3, [r7, #16]
 991:../Dave/Generated/src/UART001/UART001.c ****   USIC_CH_TypeDef* UartRegs = Handle->UartRegs;
 2076              		.loc 1 991 0
 2077 0016 7B68     		ldr	r3, [r7, #4]
 2078 0018 1B68     		ldr	r3, [r3]
 2079 001a FB60     		str	r3, [r7, #12]
 992:../Dave/Generated/src/UART001/UART001.c ****   
 993:../Dave/Generated/src/UART001/UART001.c ****   /* <<<DD_UART001_API_7>>>*/
 994:../Dave/Generated/src/UART001/UART001.c ****   if(Flag <= UART001_ALT_REC_IND_FLAG)
 2080              		.loc 1 994 0
 2081 001c FB1C     		add	r3, r7, #3
 2082 001e 1B78     		ldrb	r3, [r3]
 2083 0020 0F2B     		cmp	r3, #15
 2084 0022 0AD8     		bhi	.L88
 995:../Dave/Generated/src/UART001/UART001.c ****   {
 996:../Dave/Generated/src/UART001/UART001.c ****     TempValue = UartRegs->PSR_ASCMode;
 2085              		.loc 1 996 0
 2086 0024 FB68     		ldr	r3, [r7, #12]
 2087 0026 9B6C     		ldr	r3, [r3, #72]
 2088 0028 3B61     		str	r3, [r7, #16]
 997:../Dave/Generated/src/UART001/UART001.c ****     TempValue  &= ((uint32_t)SHIFT_ONE << (uint32_t)Flag);    
 2089              		.loc 1 997 0
 2090 002a FB1C     		add	r3, r7, #3
 2091 002c 1B78     		ldrb	r3, [r3]
 2092 002e 0122     		mov	r2, #1
 2093 0030 9A40     		lsl	r2, r2, r3
 2094 0032 3B69     		ldr	r3, [r7, #16]
 2095 0034 1340     		and	r3, r2
 2096 0036 3B61     		str	r3, [r7, #16]
 2097 0038 1EE0     		b	.L89
 2098              	.L88:
 998:../Dave/Generated/src/UART001/UART001.c ****   }
 999:../Dave/Generated/src/UART001/UART001.c ****   else if(Flag <= UART001_FIFO_ALTRECV_BUF_FLAG)
 2099              		.loc 1 999 0
 2100 003a FB1C     		add	r3, r7, #3
 2101 003c 1B78     		ldrb	r3, [r3]
 2102 003e 122B     		cmp	r3, #18
 2103 0040 0DD8     		bhi	.L90
1000:../Dave/Generated/src/UART001/UART001.c ****   {
1001:../Dave/Generated/src/UART001/UART001.c ****     TempValue = UartRegs->TRBSR;
 2104              		.loc 1 1001 0
 2105 0042 FA68     		ldr	r2, [r7, #12]
 2106 0044 8A23     		mov	r3, #138
 2107 0046 5B00     		lsl	r3, r3, #1
 2108 0048 D358     		ldr	r3, [r2, r3]
 2109 004a 3B61     		str	r3, [r7, #16]
1002:../Dave/Generated/src/UART001/UART001.c ****     TempValue  &= ((uint32_t)SHIFT_ONE << \
1003:../Dave/Generated/src/UART001/UART001.c ****                   ((uint32_t)Flag - (uint32_t)UART001_FIFO_STD_RECV_BUF_FLAG));
 2110              		.loc 1 1003 0
 2111 004c FB1C     		add	r3, r7, #3
 2112 004e 1B78     		ldrb	r3, [r3]
 2113 0050 103B     		sub	r3, r3, #16
1002:../Dave/Generated/src/UART001/UART001.c ****     TempValue  &= ((uint32_t)SHIFT_ONE << \
 2114              		.loc 1 1002 0
 2115 0052 0122     		mov	r2, #1
 2116 0054 9A40     		lsl	r2, r2, r3
 2117 0056 3B69     		ldr	r3, [r7, #16]
 2118 0058 1340     		and	r3, r2
 2119 005a 3B61     		str	r3, [r7, #16]
 2120 005c 0CE0     		b	.L89
 2121              	.L90:
1004:../Dave/Generated/src/UART001/UART001.c ****     
1005:../Dave/Generated/src/UART001/UART001.c ****   }
1006:../Dave/Generated/src/UART001/UART001.c ****   else
1007:../Dave/Generated/src/UART001/UART001.c ****   {
1008:../Dave/Generated/src/UART001/UART001.c ****     TempValue = UartRegs->TRBSR;
 2122              		.loc 1 1008 0
 2123 005e FA68     		ldr	r2, [r7, #12]
 2124 0060 8A23     		mov	r3, #138
 2125 0062 5B00     		lsl	r3, r3, #1
 2126 0064 D358     		ldr	r3, [r2, r3]
 2127 0066 3B61     		str	r3, [r7, #16]
1009:../Dave/Generated/src/UART001/UART001.c ****     TempValue  &= ((uint32_t)SHIFT_ONE << \
1010:../Dave/Generated/src/UART001/UART001.c ****        (((uint32_t)Flag - (uint32_t)UART001_FIFO_STD_RECV_BUF_FLAG) + 0x05U ));
 2128              		.loc 1 1010 0
 2129 0068 FB1C     		add	r3, r7, #3
 2130 006a 1B78     		ldrb	r3, [r3]
 2131 006c 0B3B     		sub	r3, r3, #11
1009:../Dave/Generated/src/UART001/UART001.c ****     TempValue  &= ((uint32_t)SHIFT_ONE << \
 2132              		.loc 1 1009 0
 2133 006e 0122     		mov	r2, #1
 2134 0070 9A40     		lsl	r2, r2, r3
 2135 0072 3B69     		ldr	r3, [r7, #16]
 2136 0074 1340     		and	r3, r2
 2137 0076 3B61     		str	r3, [r7, #16]
 2138              	.L89:
1011:../Dave/Generated/src/UART001/UART001.c ****   } 
1012:../Dave/Generated/src/UART001/UART001.c **** 
1013:../Dave/Generated/src/UART001/UART001.c ****   if(TempValue)
 2139              		.loc 1 1013 0
 2140 0078 3B69     		ldr	r3, [r7, #16]
 2141 007a 002B     		cmp	r3, #0
 2142 007c 01D0     		beq	.L91
1014:../Dave/Generated/src/UART001/UART001.c ****   {
1015:../Dave/Generated/src/UART001/UART001.c ****     Status = (status_t)UART001_SET;
 2143              		.loc 1 1015 0
 2144 007e 0223     		mov	r3, #2
 2145 0080 7B61     		str	r3, [r7, #20]
 2146              	.L91:
1016:../Dave/Generated/src/UART001/UART001.c ****   }
1017:../Dave/Generated/src/UART001/UART001.c ****   return Status;
 2147              		.loc 1 1017 0
 2148 0082 7B69     		ldr	r3, [r7, #20]
1018:../Dave/Generated/src/UART001/UART001.c **** }
 2149              		.loc 1 1018 0
 2150 0084 181C     		mov	r0, r3
 2151 0086 BD46     		mov	sp, r7
 2152 0088 06B0     		add	sp, sp, #24
 2153              		@ sp needed for prologue
 2154 008a 80BD     		pop	{r7, pc}
 2155              		.cfi_endproc
 2156              	.LFE44:
 2158              		.section	.text.UART001_ClearFlag,"ax",%progbits
 2159              		.align	2
 2160              		.global	UART001_ClearFlag
 2161              		.code	16
 2162              		.thumb_func
 2164              	UART001_ClearFlag:
 2165              	.LFB45:
1019:../Dave/Generated/src/UART001/UART001.c **** 
1020:../Dave/Generated/src/UART001/UART001.c **** /*******************************************************************************
1021:../Dave/Generated/src/UART001/UART001.c ****  * @brief This function clears the specified event flag status.
1022:../Dave/Generated/src/UART001/UART001.c ****  *
1023:../Dave/Generated/src/UART001/UART001.c ****  *
1024:../Dave/Generated/src/UART001/UART001.c ****  * @param[in]  Handle USIC device handle
1025:../Dave/Generated/src/UART001/UART001.c ****  * @param[in]  Flag   UART Flag which needs to be cleared
1026:../Dave/Generated/src/UART001/UART001.c ****  *
1027:../Dave/Generated/src/UART001/UART001.c ****  * @return    None
1028:../Dave/Generated/src/UART001/UART001.c ****  *
1029:../Dave/Generated/src/UART001/UART001.c ****  * <b>Reentrant: NO </b><BR>
1030:../Dave/Generated/src/UART001/UART001.c ****  *
1031:../Dave/Generated/src/UART001/UART001.c ****  ******************************************************************************/
1032:../Dave/Generated/src/UART001/UART001.c **** void UART001_ClearFlag
1033:../Dave/Generated/src/UART001/UART001.c **** (
1034:../Dave/Generated/src/UART001/UART001.c ****   const UART001_HandleType* Handle,
1035:../Dave/Generated/src/UART001/UART001.c ****   UART001_FlagStatusType Flag
1036:../Dave/Generated/src/UART001/UART001.c **** )
1037:../Dave/Generated/src/UART001/UART001.c **** {
 2166              		.loc 1 1037 0
 2167              		.cfi_startproc
 2168 0000 80B5     		push	{r7, lr}
 2169              	.LCFI36:
 2170              		.cfi_def_cfa_offset 8
 2171              		.cfi_offset 7, -8
 2172              		.cfi_offset 14, -4
 2173 0002 84B0     		sub	sp, sp, #16
 2174              	.LCFI37:
 2175              		.cfi_def_cfa_offset 24
 2176 0004 00AF     		add	r7, sp, #0
 2177              	.LCFI38:
 2178              		.cfi_def_cfa_register 7
 2179 0006 7860     		str	r0, [r7, #4]
 2180 0008 0A1C     		mov	r2, r1
 2181 000a FB1C     		add	r3, r7, #3
 2182 000c 1A70     		strb	r2, [r3]
1038:../Dave/Generated/src/UART001/UART001.c **** 
1039:../Dave/Generated/src/UART001/UART001.c ****   USIC_CH_TypeDef* UartRegs = Handle->UartRegs;
 2183              		.loc 1 1039 0
 2184 000e 7B68     		ldr	r3, [r7, #4]
 2185 0010 1B68     		ldr	r3, [r3]
 2186 0012 FB60     		str	r3, [r7, #12]
1040:../Dave/Generated/src/UART001/UART001.c ****   
1041:../Dave/Generated/src/UART001/UART001.c ****   /* <<<DD_UART001_API_8>>>*/
1042:../Dave/Generated/src/UART001/UART001.c ****   if(Flag <= UART001_ALT_REC_IND_FLAG)
 2187              		.loc 1 1042 0
 2188 0014 FB1C     		add	r3, r7, #3
 2189 0016 1B78     		ldrb	r3, [r3]
 2190 0018 0F2B     		cmp	r3, #15
 2191 001a 0BD8     		bhi	.L94
1043:../Dave/Generated/src/UART001/UART001.c ****   {
1044:../Dave/Generated/src/UART001/UART001.c ****     UartRegs->PSCR  |= ((uint32_t)SHIFT_ONE << (uint32_t)Flag);    
 2192              		.loc 1 1044 0
 2193 001c FB68     		ldr	r3, [r7, #12]
 2194 001e DA6C     		ldr	r2, [r3, #76]
 2195 0020 FB1C     		add	r3, r7, #3
 2196 0022 1B78     		ldrb	r3, [r3]
 2197 0024 0121     		mov	r1, #1
 2198 0026 081C     		mov	r0, r1
 2199 0028 9840     		lsl	r0, r0, r3
 2200 002a 031C     		mov	r3, r0
 2201 002c 1A43     		orr	r2, r3
 2202 002e FB68     		ldr	r3, [r7, #12]
 2203 0030 DA64     		str	r2, [r3, #76]
 2204 0032 26E0     		b	.L93
 2205              	.L94:
1045:../Dave/Generated/src/UART001/UART001.c ****   }
1046:../Dave/Generated/src/UART001/UART001.c ****   else if(Flag <= UART001_FIFO_ALTRECV_BUF_FLAG)
 2206              		.loc 1 1046 0
 2207 0034 FB1C     		add	r3, r7, #3
 2208 0036 1B78     		ldrb	r3, [r3]
 2209 0038 122B     		cmp	r3, #18
 2210 003a 11D8     		bhi	.L96
1047:../Dave/Generated/src/UART001/UART001.c ****   {
1048:../Dave/Generated/src/UART001/UART001.c ****     UartRegs->TRBSCR  |= ((uint32_t)SHIFT_ONE << \
 2211              		.loc 1 1048 0
 2212 003c FA68     		ldr	r2, [r7, #12]
 2213 003e 8C23     		mov	r3, #140
 2214 0040 5B00     		lsl	r3, r3, #1
 2215 0042 D258     		ldr	r2, [r2, r3]
1049:../Dave/Generated/src/UART001/UART001.c ****                  ((uint32_t)Flag - (uint32_t)UART001_FIFO_STD_RECV_BUF_FLAG)); 
 2216              		.loc 1 1049 0
 2217 0044 FB1C     		add	r3, r7, #3
 2218 0046 1B78     		ldrb	r3, [r3]
 2219 0048 103B     		sub	r3, r3, #16
1048:../Dave/Generated/src/UART001/UART001.c ****     UartRegs->TRBSCR  |= ((uint32_t)SHIFT_ONE << \
 2220              		.loc 1 1048 0
 2221 004a 0121     		mov	r1, #1
 2222 004c 081C     		mov	r0, r1
 2223 004e 9840     		lsl	r0, r0, r3
 2224 0050 031C     		mov	r3, r0
 2225 0052 111C     		mov	r1, r2
 2226 0054 1943     		orr	r1, r3
 2227 0056 FA68     		ldr	r2, [r7, #12]
 2228 0058 8C23     		mov	r3, #140
 2229 005a 5B00     		lsl	r3, r3, #1
 2230 005c D150     		str	r1, [r2, r3]
 2231 005e 10E0     		b	.L93
 2232              	.L96:
1050:../Dave/Generated/src/UART001/UART001.c ****   }
1051:../Dave/Generated/src/UART001/UART001.c ****   else
1052:../Dave/Generated/src/UART001/UART001.c ****   {
1053:../Dave/Generated/src/UART001/UART001.c ****     UartRegs->TRBSCR  |= ((uint32_t)SHIFT_ONE << \
 2233              		.loc 1 1053 0
 2234 0060 FA68     		ldr	r2, [r7, #12]
 2235 0062 8C23     		mov	r3, #140
 2236 0064 5B00     		lsl	r3, r3, #1
 2237 0066 D258     		ldr	r2, [r2, r3]
1054:../Dave/Generated/src/UART001/UART001.c ****                (((uint32_t)Flag - (uint32_t)UART001_FIFO_STD_RECV_BUF_FLAG) + \
 2238              		.loc 1 1054 0
 2239 0068 FB1C     		add	r3, r7, #3
 2240 006a 1B78     		ldrb	r3, [r3]
 2241 006c 0B3B     		sub	r3, r3, #11
1053:../Dave/Generated/src/UART001/UART001.c ****     UartRegs->TRBSCR  |= ((uint32_t)SHIFT_ONE << \
 2242              		.loc 1 1053 0
 2243 006e 0121     		mov	r1, #1
 2244 0070 081C     		mov	r0, r1
 2245 0072 9840     		lsl	r0, r0, r3
 2246 0074 031C     		mov	r3, r0
 2247 0076 111C     		mov	r1, r2
 2248 0078 1943     		orr	r1, r3
 2249 007a FA68     		ldr	r2, [r7, #12]
 2250 007c 8C23     		mov	r3, #140
 2251 007e 5B00     		lsl	r3, r3, #1
 2252 0080 D150     		str	r1, [r2, r3]
 2253              	.L93:
1055:../Dave/Generated/src/UART001/UART001.c ****                                                        UART001_FLAG_OFFSET ));
1056:../Dave/Generated/src/UART001/UART001.c ****   }  
1057:../Dave/Generated/src/UART001/UART001.c ****   
1058:../Dave/Generated/src/UART001/UART001.c **** }
 2254              		.loc 1 1058 0
 2255 0082 BD46     		mov	sp, r7
 2256 0084 04B0     		add	sp, sp, #16
 2257              		@ sp needed for prologue
 2258 0086 80BD     		pop	{r7, pc}
 2259              		.cfi_endproc
 2260              	.LFE45:
 2262              		.text
 2263              	.Letext0:
 2264              		.file 2 "c:\\dave-3.1.10\\arm-gcc\\bin\\../lib/gcc/arm-none-eabi/4.7.4/../../../../arm-none-eabi/i
 2265              		.file 3 "C:\\DAVE-3.1.10\\eclipse\\/../CMSIS/Infineon/XMC1100_series/Include/XMC1100.h"
 2266              		.file 4 "../Dave/Generated/src/UART001/../../inc/UART001/Usic.h"
 2267              		.file 5 "C:\\data\\workspaces\\github\\de.protos.demos\\src\\XMC2GoBlinky\\XMC2GoBlinkyST\\Dave\\G
 2268              		.file 6 "../Dave/Generated/src/UART001/../../inc/UART001/UART001.h"
 2269              		.file 7 "../Dave/Generated/src/UART001/../../inc/UART001/UART001_Extern.h"
DEFINED SYMBOLS
                            *ABS*:00000000 UART001.c
C:\Users\TJung\AppData\Local\Temp\ccvogTwG.s:18     .text.UART001_lInit:00000000 $t
C:\Users\TJung\AppData\Local\Temp\ccvogTwG.s:23     .text.UART001_lInit:00000000 UART001_lInit
C:\Users\TJung\AppData\Local\Temp\ccvogTwG.s:303    .text.UART001_lInit:000001b0 $d
C:\Users\TJung\AppData\Local\Temp\ccvogTwG.s:308    .text.UART001_lConfigTXPin:00000000 $t
C:\Users\TJung\AppData\Local\Temp\ccvogTwG.s:313    .text.UART001_lConfigTXPin:00000000 UART001_lConfigTXPin
C:\Users\TJung\AppData\Local\Temp\ccvogTwG.s:479    .text.UART001_labsRealType:00000000 $t
C:\Users\TJung\AppData\Local\Temp\ccvogTwG.s:484    .text.UART001_labsRealType:00000000 UART001_labsRealType
C:\Users\TJung\AppData\Local\Temp\ccvogTwG.s:538    .text.UART001_lConfigureBaudRate:00000000 $t
C:\Users\TJung\AppData\Local\Temp\ccvogTwG.s:543    .text.UART001_lConfigureBaudRate:00000000 UART001_lConfigureBaudRate
C:\Users\TJung\AppData\Local\Temp\ccvogTwG.s:1112   .text.UART001_lConfigureBaudRate:000003bc $d
C:\Users\TJung\AppData\Local\Temp\ccvogTwG.s:1115   .text.UART001_lConfigureBaudRate:000003c0 $t
C:\Users\TJung\AppData\Local\Temp\ccvogTwG.s:1310   .text.UART001_lConfigureBaudRate:00000518 $d
C:\Users\TJung\AppData\Local\Temp\ccvogTwG.s:1315   .text.UART001_Init:00000000 $t
C:\Users\TJung\AppData\Local\Temp\ccvogTwG.s:1320   .text.UART001_Init:00000000 UART001_Init
C:\Users\TJung\AppData\Local\Temp\ccvogTwG.s:1412   .text.UART001_Init:0000007c $d
C:\Users\TJung\AppData\Local\Temp\ccvogTwG.s:1420   .text.UART001_DeInit:00000000 $t
C:\Users\TJung\AppData\Local\Temp\ccvogTwG.s:1425   .text.UART001_DeInit:00000000 UART001_DeInit
C:\Users\TJung\AppData\Local\Temp\ccvogTwG.s:1450   .text.UART001_Configure:00000000 $t
C:\Users\TJung\AppData\Local\Temp\ccvogTwG.s:1455   .text.UART001_Configure:00000000 UART001_Configure
C:\Users\TJung\AppData\Local\Temp\ccvogTwG.s:1631   .text.UART001_Configure:00000104 $d
C:\Users\TJung\AppData\Local\Temp\ccvogTwG.s:1638   .text.UART001_ReadDataMultiple:00000000 $t
C:\Users\TJung\AppData\Local\Temp\ccvogTwG.s:1643   .text.UART001_ReadDataMultiple:00000000 UART001_ReadDataMultiple
C:\Users\TJung\AppData\Local\Temp\ccvogTwG.s:1736   .text.UART001_ReadDataBytes:00000000 $t
C:\Users\TJung\AppData\Local\Temp\ccvogTwG.s:1741   .text.UART001_ReadDataBytes:00000000 UART001_ReadDataBytes
C:\Users\TJung\AppData\Local\Temp\ccvogTwG.s:1834   .text.UART001_WriteDataMultiple:00000000 $t
C:\Users\TJung\AppData\Local\Temp\ccvogTwG.s:1839   .text.UART001_WriteDataMultiple:00000000 UART001_WriteDataMultiple
C:\Users\TJung\AppData\Local\Temp\ccvogTwG.s:1940   .text.UART001_WriteDataBytes:00000000 $t
C:\Users\TJung\AppData\Local\Temp\ccvogTwG.s:1945   .text.UART001_WriteDataBytes:00000000 UART001_WriteDataBytes
C:\Users\TJung\AppData\Local\Temp\ccvogTwG.s:2046   .text.UART001_GetFlagStatus:00000000 $t
C:\Users\TJung\AppData\Local\Temp\ccvogTwG.s:2051   .text.UART001_GetFlagStatus:00000000 UART001_GetFlagStatus
C:\Users\TJung\AppData\Local\Temp\ccvogTwG.s:2159   .text.UART001_ClearFlag:00000000 $t
C:\Users\TJung\AppData\Local\Temp\ccvogTwG.s:2164   .text.UART001_ClearFlag:00000000 UART001_ClearFlag
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.4f34ab06ae2725aaf04d3230f4ec23a7
                           .group:00000000 wm4.uc_id.h.35.eaf9b374d895319eacbb56387e04af18
                           .group:00000000 wm4.XMC1100.h.45.7a7cd799d7738130fcda8b83b0aa37d4
                           .group:00000000 wm4.core_cm0.h.47.022e66414e77714da7c4b30b3ad99fe8
                           .group:00000000 wm4.newlib.h.8.a9901dc52d1357e3e94003403d43f8b5
                           .group:00000000 wm4.features.h.22.b72b3baab2bb2eab3661375590100b6b
                           .group:00000000 wm4.config.h.193.5fb8ef056cdff92dec3dee9552839d8c
                           .group:00000000 wm4._ansi.h.23.7aefdac4826acebbfc9f3822a0aeb14c
                           .group:00000000 wm4.stdint.h.20.54ad762faa59e3c05491630641c8d8bf
                           .group:00000000 wm4.core_cmInstr.h.39.b7b6650bdd2316848d940915272d75b8
                           .group:00000000 wm4.core_cm0.h.135.ca70469f87e143609670bb393bfa6518
                           .group:00000000 wm4.XMC1000_RomFunctionTable.h.31.6d9a94465618f31b040dc9cea9a47ad7
                           .group:00000000 wm4.XMC1100.h.114.be3711f71ee045884346be801053f4c0
                           .group:00000000 wm4.Usic.h.90.22743468abc46f16747d12430b219aaf
                           .group:00000000 wm4.stddef.h.40.50cf36416e06376af8a9dca28536f2e4
                           .group:00000000 wm4.types.h.60.e75c47576398c648cdcf9000ace5e3d8
                           .group:00000000 wm4.UART001_Conf.h.53.f334402b2e237110b77f625dfc27af0e
                           .group:00000000 wm4.UART001.h.109.3e835815a7a59791d8bd39655f4d4cc9
                           .group:00000000 wm4.MULTIPLEXER.h.46.383e3edbb9cbf6e538f7c1532ef623c1
                           .group:00000000 wm4.CCU4Global_Conf.h.63.a52fac0daa39b5f58343578312b4eb54
                           .group:00000000 wm4.PWMSP001.h.78.6423aeb63839e034e864de061548b73b
                           .group:00000000 wm4.IO004.h.53.442ea5eb47ad9eedc675253aa35f3107
                           .group:00000000 wm4.SYSTM001.h.64.aec07633e24163b6539b13abf1730eae

UNDEFINED SYMBOLS
__aeabi_fcmplt
__aeabi_ui2f
__aeabi_fdiv
__aeabi_fcmpgt
__aeabi_uidiv
__aeabi_uidivmod
__aeabi_fsub
UART001_HandleArray
