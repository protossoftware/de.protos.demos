<%@ jet package="CodeGenerator" class="adc001_confh_template"
imports="java.util.* com.ifx.davex.appjetinteract.App2JetInterface" %>
<% App2JetInterface app = (App2JetInterface) argument; %>
/*CODE_BLOCK_BEGIN[ADC001Conf.h]*/

/******************************************************************************
 *
 * Copyright (C) 2013 Infineon Technologies AG. All rights reserved.
 *
 * Infineon Technologies AG (Infineon) is supplying this software for use with
 * Infineon's microcontrollers.
 * This file can be freely distributed within development tools that are
 * supporting such microcontrollers.
 *
 * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
 * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
 * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
 * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
 *
********************************************************************************
**                                                                            **
**                                                                            **
** PLATFORM : Infineon XMC4000/XMC1000 Series                                 **
**                                                                            **
** COMPILER : Compiler Independent                                            **
**                                                                            **
** AUTHOR   : DAVE App Developer                                              **
**                                                                            **
** MAY BE CHANGED BY USER [yes/Yes]: Yes                                      **
**                                                                            **
** MODIFICATION DATE : Sep 27, 2013                                           **
**                                                                            **
*******************************************************************************/

/*******************************************************************************
**                       Author(s) Identity                                   **
********************************************************************************
**                                                                            **
** Initials     Name                                                          **
** ---------------------------------------------------------------------------**
** CM           DAVE App Developer                                            **
*******************************************************************************/

/**
 * @file  ADC001_Conf.h
 *
 * @brief This file contains App parameter data as per GUI configurations
 *
 * Change History:
 *
 * Date       version       Details
 * 16-Dec-2012   1.0.4    Initial code added for XMC1000
 * 06-Mar-2013   1.0.6    App version changed for XMC1000 and XMC4400/XMC4200
 * 24-Apr-2013   1.0.8    Ported to XMC4500 step AB and
 *                        Source Result selection Feature added
 * 11-Jun-2013   1.0.10   1. In channel selection page Group C and Group D check 
 *                        boxes made invisible for XMC1200/1300/4200 devices.
 *                        2. In the Header comment section device name changed
 *                           to XMC1000.
 *                        3. Tooltip for the Group channel selection is modified.
 *                        4. New api ADC001_GetFastResult() implemented.
 *                        5. Source Result register selection feature disabled
 *                           due to header file update not available.     
 * 27-Jun-2013   1.0.12   Source Result register selection feature removed to
 *                        simplify the app.
 * 27-Sep-2013   1.0.16   Typos in API Documentation & .h comments is corrected. 
 */
#ifndef ADC001CONF_H_
#define ADC001CONF_H_

#ifdef __cplusplus
extern "C" {
#endif

#include <DAVE3.h>

<% String AppBaseuri = "app/ADC001/"; %>
<% int GrpAChannels = app.getIntegerValue(AppBaseuri + "0/adc001_irwnumberofchannelgroupa"); %>
<% int GrpBChannels = app.getIntegerValue(AppBaseuri + "0/adc001_irwnumberofchannelgroupb"); %>
<% int GrpCChannels = app.getIntegerValue(AppBaseuri + "0/adc001_irwnumberofchannelgroupc"); %>
<% int GrpDChannels = app.getIntegerValue(AppBaseuri + "0/adc001_irwnumberofchannelgroupd"); %>

extern const ADC001_HandleType ADC001_Handle0;
extern const ADC001_ChannelHandleType* ADC001_ChannelHandlePtr[];

<% if (GrpAChannels > 0) { %>
extern const ADC001_ChannelHandleType ADC001_ChannelAAHandle;
<%}%>
<% if (GrpAChannels > 1) { %>
extern const ADC001_ChannelHandleType ADC001_ChannelABHandle;
<%}%>
<% if (GrpAChannels > 2) { %>
extern const ADC001_ChannelHandleType ADC001_ChannelACHandle;
<%}%>
<% if (GrpAChannels > 3) { %>
extern const ADC001_ChannelHandleType ADC001_ChannelADHandle;
<%}%>
<% if (GrpAChannels > 4) { %>
extern const ADC001_ChannelHandleType ADC001_ChannelAEHandle;
<%}%>
<% if (GrpAChannels > 5) { %>
extern const ADC001_ChannelHandleType ADC001_ChannelAFHandle;
<%}%>
<% if (GrpAChannels > 6) { %>
extern const ADC001_ChannelHandleType ADC001_ChannelAGHandle;
<%}%>
<% if (GrpAChannels > 7) { %>
extern const ADC001_ChannelHandleType ADC001_ChannelAHHandle;
<%}%>
<% if (GrpBChannels > 0) { %>
extern const ADC001_ChannelHandleType ADC001_ChannelBAHandle;
<%}%>
<% if (GrpBChannels > 1) { %>
extern const ADC001_ChannelHandleType ADC001_ChannelBBHandle;
<%}%>
<% if (GrpBChannels > 2) { %>
extern const ADC001_ChannelHandleType ADC001_ChannelBCHandle;
<%}%>
<% if (GrpBChannels > 3) { %>
extern const ADC001_ChannelHandleType ADC001_ChannelBDHandle;
<%}%>
<% if (GrpBChannels > 4) { %>
extern const ADC001_ChannelHandleType ADC001_ChannelBEHandle;
<%}%>
<% if (GrpBChannels > 5) { %>
extern const ADC001_ChannelHandleType ADC001_ChannelBFHandle;
<%}%>
<% if (GrpBChannels > 6) { %>
extern const ADC001_ChannelHandleType ADC001_ChannelBGHandle;
<%}%>
<% if (GrpBChannels > 7) { %>
extern const ADC001_ChannelHandleType ADC001_ChannelBHHandle;
<%}%>
<% if (GrpCChannels > 0) { %>
extern const ADC001_ChannelHandleType ADC001_ChannelCAHandle;
<%}%>
<% if (GrpCChannels > 1) { %>
extern const ADC001_ChannelHandleType ADC001_ChannelCBHandle;
<%}%>
<% if (GrpCChannels > 2) { %>
extern const ADC001_ChannelHandleType ADC001_ChannelCCHandle;
<%}%>
<% if (GrpCChannels > 3) { %>
extern const ADC001_ChannelHandleType ADC001_ChannelCDHandle;
<%}%>
<% if (GrpCChannels > 4) { %>
extern const ADC001_ChannelHandleType ADC001_ChannelCEHandle;
<%}%>
<% if (GrpCChannels > 5) { %>
extern const ADC001_ChannelHandleType ADC001_ChannelCFHandle;
<%}%>
<% if (GrpCChannels > 6) { %>
extern const ADC001_ChannelHandleType ADC001_ChannelCGHandle;
<%}%>
<% if (GrpCChannels > 7) { %>
extern const ADC001_ChannelHandleType ADC001_ChannelCHHandle;
<%}%>
<% if (GrpDChannels > 0) { %>
extern const ADC001_ChannelHandleType ADC001_ChannelDAHandle;
<%}%>
<% if (GrpDChannels > 1) { %>
extern const ADC001_ChannelHandleType ADC001_ChannelDBHandle;
<%}%>
<% if (GrpDChannels > 2) { %>
extern const ADC001_ChannelHandleType ADC001_ChannelDCHandle;
<%}%>
<% if (GrpDChannels > 3) { %>
extern const ADC001_ChannelHandleType ADC001_ChannelDDHandle;
<%}%>
<% if (GrpDChannels > 4) { %>
extern const ADC001_ChannelHandleType ADC001_ChannelDEHandle;
<%}%>
<% if (GrpDChannels > 5) { %>
extern const ADC001_ChannelHandleType ADC001_ChannelDFHandle;
<%}%>
<% if (GrpDChannels > 6) { %>
extern const ADC001_ChannelHandleType ADC001_ChannelDGHandle;
<%}%>
<% if (GrpDChannels > 7) { %>
extern const ADC001_ChannelHandleType ADC001_ChannelDHHandle;
<%}%>

#ifdef __cplusplus
}
#endif
  
#endif /* ADC001CONF_H_ */

/**
 * @}
 */
 
/*CODE_BLOCK_END*/
